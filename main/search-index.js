var searchIndex = new Map(JSON.parse('[\
["build",{"doc":"","t":"H","n":["main"],"q":[[0,"build"]],"d":[""],"i":[0],"f":[[[],1]],"c":[],"p":[[1,"tuple"]],"b":[]}],\
["glib_signal",{"doc":"","t":"TTRRFKKFFTTTKRTKTTTTKRRKFFFTTTRRKRFFKRRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMONNNNMNNNMNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["ACCUMULATOR_FIRST_RUN","ACTION","Arguments","Arguments","BorrowedObject","BuildSignal","BuildableSignal","ConnectDetails","ConnectEof","DEPRECATED","DETAIL","DETAILED","DetailedSignal","Error","FLAGS","FromValues","MUST_COLLECT","NAME","NO_HOOKS","NO_RECURSE","Notifies","Object","Object","ObjectSignalExt","OnceFuture","Pointer","PrimitiveValue","RUN_CLEANUP","RUN_FIRST","RUN_LAST","Return","Return","Signal","Signal","SignalFlags","SignalStream","ToValueOption","Type","Types","all","as_ptr","as_ptr_mut","as_ref","attach_target","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builder","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","complement","connect","contains","copy_ref","create_detail","def_signal","deref","deref","detail","detail","difference","disconnect","drop","empty","ensure_type","ensure_type","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forget","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","from_value","from_value","from_values","handle","handle_closure","hash","impl_signal","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into_future","into_inner","into_inner","into_inner","into_iter","into_target","is_all","is_empty","is_terminated","is_terminated","iter","iter_names","new","new","normalize","not","once","poll","poll_next","remove","remove_handle","run_after","set","set_detail","signal","signal","signal_stream","size_hint","static_type","static_type","static_types","sub","sub_assign","symmetric_difference","target","to_owned","to_owned","to_owned","to_owned","to_string","to_value_option","to_value_option","to_value_option","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_closure_return_value","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_poll","try_poll_next","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","with_after","with_detail","with_name","with_parts"],"q":[[0,"glib_signal"],[223,"glib::object"],[224,"glib::subclass::signal"],[225,"glib::subclass::signal"],[226,"core::clone"],[227,"core::ops::function"],[228,"core::option"],[229,"core::iter::traits::collect"],[230,"core::fmt"],[231,"core::fmt"],[232,"glib::value"],[233,"glib::translate"],[234,"core::error"],[235,"glib::types"],[236,"glib::signal"],[237,"core::convert"],[238,"glib::closure"],[239,"glib::error"],[240,"core::hash"],[241,"core::mem::manually_drop"],[242,"glib::object"],[243,"bitflags::iter"],[244,"core::task::wake"],[245,"core::task::poll"],[246,"glib::subclass::signal"],[247,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a flags value with all known bits set.","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","Whether all set bits in a source flags value are also set …","Copy this reference","","The same syntax as impl_signal, but also defines the …","","","","","The intersection of a source flags value with the …","","","Get a flags value with all bits unset.","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","","","","","","","A helper that impls Signal and its related traits.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","check <code>is_terminated</code> first!","If <code>O</code> lives beyond <code>&#39;a</code>, bad things may happen.","","","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","","","Yield a set of contained flags values.","Yield a set of contained named flags values.","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","The intersection of a source flags value with the …","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","","",""],"i":[1,1,59,17,0,0,0,0,0,1,17,1,0,15,59,0,1,59,1,1,0,59,17,0,0,0,0,1,1,1,59,17,0,17,0,0,0,57,15,1,2,2,3,4,1,1,1,1,1,1,1,1,45,29,4,12,3,2,14,1,45,29,4,12,3,2,14,1,60,61,12,2,14,1,12,2,14,1,1,4,1,3,17,0,3,2,17,14,1,4,4,1,3,2,1,1,4,12,12,3,2,14,1,1,1,1,1,3,45,29,29,29,4,12,3,2,2,14,14,14,1,1,1,1,1,1,1,3,2,15,39,39,1,0,1,1,1,45,29,4,12,3,2,2,2,14,1,45,45,3,2,1,4,1,1,45,4,1,1,45,14,14,1,4,45,4,1,39,14,1,14,59,14,39,4,3,2,15,1,1,1,4,12,2,14,1,12,57,29,29,1,45,29,4,12,3,2,14,1,2,45,29,4,12,3,2,14,1,45,4,45,29,4,12,3,2,14,1,1,14,14,14,14],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[[2,[-1]]],[],[]],[[[2,[-1]]],[],[]],[[[3,[-1]]],-1,[]],[[[4,[-1,-2]]],[[0,[-1,-2]]],5,[]],[[1,1],1],[[1,1],6],[[1,1],1],[[1,1],6],[1,7],[1,7],[[1,1],1],[[1,1],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],8],[-1,8,[[11,[9],[[10,[8]]]]]],[12,12],[[[2,[-1]]],[[2,[-1]]],13],[[[14,[-1]]],[[14,[-1]]],13],[1,1],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[1,1],[[-1,[14,[-3]],-4],[[4,[-1,-2]]],5,15,[[17,[],[[16,[-2]]]]],[[18,[-1,-2],[[10,[]]]]]],[[1,1],19],[[[3,[-1]]],[[3,[-1]]],5],[[],20],0,[[[3,[-1]]],-2,[],[]],[[[2,[-1]]],-2,[],[]],[[],[[21,[20]]]],[[[14,[-1]]],[[21,[20]]],[]],[[1,1],1],[[[4,[-1,-2]]],6,5,[]],[[[4,[-1,-2]]],6,5,[]],[[],1],[[],6],[[],6],[[1,1],19],[[1,-1],6,[[23,[],[[22,[1]]]]]],[[[4,[-1,-2]],24],25,[26,5],26],[[12,24],25],[[12,24],25],[[[3,[-1]],24],25,26],[[[2,[-1]],24],25,26],[[[14,[-1]],24],25,26],[[1,24],[[28,[6,27]]]],[[1,24],[[28,[6,27]]]],[[1,24],[[28,[6,27]]]],[[1,24],[[28,[6,27]]]],[[1,24],[[28,[6,27]]]],[-1,[[3,[-1]]],[]],[-1,-1,[]],[-1,[[29,[-1]]],[]],[30,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],[[2,[-1]]],[]],[-1,-1,[]],[[[14,[-1]]],[[14,[6]]],17],[-1,[[14,[-1]]],17],[-1,-1,[]],[-1,-1,[]],[7,[[21,[1]]]],[7,1],[7,1],[7,1],[-1,1,[[23,[],[[22,[1]]]]]],[31,[[21,[1]]]],[32,[[3,[-1]]],[5,33]],[32,[[2,[-1]]],[]],[[[34,[32]]],[[28,[[15,[],[[35,[-1]],[36,[-2]]]],-1]]],37,[[23,[],[[22,[38]]]]]],[[39,-2,-3],40,17,[[41,[[14,[-1]]]]],[[18,[39],[[10,[]]]]]],[[39,14,42],[[28,[40,43]]]],[[1,-1],6,44],0,[[1,1],6],[[1,1],1],[[1,1],19],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[2,[-1]]],[],[]],[[[2,[-1]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[],[]],[[[45,[-1,-2]]],[[4,[-1,-2]]],5,[]],[[[3,[-1]]],[[46,[-1]]],[]],[[[2,[-1]]],[],[]],[1],[[[4,[-1,-2]]],[[47,[-1]]],5,[]],[1,19],[1,19],[[[45,[-1,-2]]],19,5,[]],[[[4,[-1,-2]]],19,5,[]],[1,[[48,[1]]]],[1,[[49,[1]]]],[[[4,[-1,-2]]],[[45,[-1,-2]]],5,[]],[[],[[14,[-1]]],17],[[[14,[-1]]],[[14,[6]]],[]],[1,1],[[[4,[-1,-2]]],[[45,[-1,-2]]],5,[]],[[[50,[[45,[-1,-2]]]],51],[[52,[-3]]],5,[],[]],[[[50,[[4,[-1,-2]]]],51],[[52,[[21,[-3]]]]],5,[],[]],[[1,1],6],[[39,40],6],0,[[1,1,19],6],[[[14,[-1]],20],6,17],[[],53],[[[14,[-1]]],53,[]],[[39,-2],[[4,[39]]],17,[[41,[[14,[-1]]]]]],[[[4,[-1,-2]]],[[6,[54,[21,[54]]]]],5,[]],[[],38],[[],38],[[],-1,[]],[[1,1],1],[[1,1],6],[[1,1],1],[[[4,[-1,-2]]],[[47,[-1]]],5,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,55,[]],[[[57,[],[[56,[-1]]]]],[[21,[32]]],41],[[[29,[54]]],[[21,[32]]]],[[[29,[6]]],[[21,[32]]]],[[1,1],6],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[[[21,[32]]],[[28,[-1,43]]],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[[[50,[-1]],51],52,[]],[[[50,[-1]],51],[[52,[[21,[28]]]]],[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[[1,1],1],[19,[[14,[-1]]],17],[-1,[[14,[-2]]],[[41,[[21,[20]]]]],59],[[31,19],[[21,[[14,[6]]]]]],[[53,[21,[20]],19],[[14,[-1]]],[]]],"c":[],"p":[[5,"SignalFlags",0],[5,"Pointer",0],[5,"BorrowedObject",0],[5,"SignalStream",0],[10,"ObjectType",223],[1,"tuple"],[1,"u32"],[5,"Signal",224],[5,"SignalBuilder",224],[17,"Output"],[10,"FnOnce",225],[5,"ConnectEof",0],[10,"Clone",226],[5,"ConnectDetails",0],[10,"FromValues",0],[17,"Arguments"],[10,"DetailedSignal",0],[10,"Fn",225],[1,"bool"],[5,"Quark",227],[6,"Option",228],[17,"Item"],[10,"IntoIterator",229],[5,"Formatter",230],[8,"Result",230],[10,"Debug",230],[5,"Error",230],[6,"Result",231],[5,"PrimitiveValue",0],[1,"never"],[1,"str"],[5,"Value",232],[10,"FromGlibPtrBorrow",233],[1,"slice"],[17,"Error"],[17,"Types"],[10,"Error",234],[5,"Type",235],[10,"ObjectSignalExt",0],[5,"SignalHandlerId",236],[10,"Into",237],[5,"Closure",238],[5,"BoolError",239],[10,"Hasher",240],[5,"OnceFuture",0],[5,"ManuallyDrop",241],[5,"WeakRef",223],[5,"Iter",242],[5,"IterNames",242],[5,"Pin",243],[5,"Context",244],[6,"Poll",245],[5,"SignalId",224],[1,"usize"],[5,"String",246],[17,"Type"],[10,"ToValueOption",0],[5,"TypeId",247],[10,"Signal",0],[10,"BuildSignal",0],[10,"BuildableSignal",0]],"b":[[48,"impl-SignalFlags"],[49,"impl-Flags-for-SignalFlags"],[97,"impl-Display-for-ConnectEof"],[98,"impl-Debug-for-ConnectEof"],[102,"impl-UpperHex-for-SignalFlags"],[103,"impl-Octal-for-SignalFlags"],[104,"impl-Debug-for-SignalFlags"],[105,"impl-LowerHex-for-SignalFlags"],[106,"impl-Binary-for-SignalFlags"],[117,"impl-From%3CConnectDetails%3CS%3E%3E-for-ConnectDetails"],[118,"impl-From%3CS%3E-for-ConnectDetails%3CS%3E"],[122,"impl-SignalFlags"],[123,"impl-Flags-for-SignalFlags"],[142,"impl-Into%3C*mut+T%3E-for-Pointer%3CT%3E"],[143,"impl-Into%3C*const+T%3E-for-Pointer%3CT%3E"],[188,"impl-ToValueOption-for-PrimitiveValue%3Cusize%3E"],[189,"impl-ToValueOption-for-PrimitiveValue%3C()%3E"]],"a":{"g_signal_accumulator_first_run":[0],"g_signal_action":[1],"g_signal_deprecated":[9],"g_signal_detailed":[11],"g_signal_must_collect":[16],"g_signal_no_hooks":[18],"g_signal_no_recurse":[19],"g_signal_run_cleanup":[27],"g_signal_run_first":[28],"g_signal_run_last":[29],"gsignalflags":[34]}}],\
["static_link_module",{"doc":"WirePlumber module example","t":"SFFFONNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNOONNNNNOHHHNNOONNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNH","n":["LOG_DOMAIN","PortMapping","StaticLink","StaticLinkArgs","args","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","decode_args","default","default","deserialize","deserialize","disable","disable","downgrade","enable","enable","fmt","fmt","from","from","from","from_instance","from_obj","from_variant","from_variant","handles","init","init_args","input","input","instance","instance_data","into","into","into","linger","link_ports","main_async","main_loop","new","obj","output","output","parent_activate_execute_step","parent_activate_get_next_step","parent_class","parent_class","parent_deactivate","parent_disable","parent_enable","parent_supported_features","passive","port_mappings","ref_counted","register_source","register_type","serialize","serialize","static_variant_type","static_variant_type","to_owned","to_owned","to_variant","to_variant","try_from","try_from","try_from","try_into","try_into","try_into","type_","type_data","type_id","type_id","type_id","wireplumber__module_init"],"q":[[0,"static_link_module"],[85,"glib::variant"],[86,"core::option"],[87,"glib::error"],[88,"core::result"],[89,"serde::de"],[90,"wireplumber::auto::transition"],[91,"core::fmt"],[92,"core::fmt"],[93,"glib::object"],[94,"glib::types"],[95,"core::any"],[96,"core::marker"],[97,"core::marker"],[98,"wireplumber::auto::properties"],[99,"wireplumber::auto::link"],[100,"core::iter::traits::iterator"],[101,"wireplumber::plugin::subclass"],[102,"core::future::future"],[103,"core::iter::traits::collect"],[104,"wireplumber::auto::object_manager"],[105,"wireplumber::registry::interest"],[106,"futures_channel::mpsc"],[107,"wireplumber::auto::feature_activation_transition"],[108,"wireplumber::core::features"],[109,"wireplumber_sys::sys"],[110,"wireplumber_sys::sys"],[111,"glib::source"],[112,"serde::ser"],[113,"glib::variant_type"],[114,"alloc::borrow"],[115,"glib::subclass::types"],[116,"core::ptr::non_null"],[117,"core::any"],[118,"glib_sys"]],"d":["GLib logging domain that doubles as the plugin’s name","A list of user-specified Constraints used to find each end …","The plugin instance","User configuration for the StaticLink plugin","Arguments specified by the user at plugin initialization","","","","","","","","","","","","","","","","","Plugin deinitializer","","","The real entry point of the plugin","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Mutable data keeps track of any futures that the plugin …","","","A description of the input ports to link.","The sink node to link to <code>output</code>","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Whether to mark any created links as <code>object.linger</code>","Link all ports between <code>output</code> and <code>input</code> matching <code>mappings</code>","The main entry point of the plugin","The main logic of the plugin","","","A description of the output ports to link.","The source node to link to <code>input</code>","","","","","","","","","Whether to mark any created links as <code>link.passive</code>","Describes how to link the ports of the <code>input</code> node to the …","","","Registers the type only once.","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,8,1,2,8,1,2,8,1,2,1,2,8,2,8,1,2,8,8,8,8,8,1,2,1,2,8,8,8,1,2,8,8,8,1,2,8,8,1,2,8,2,0,0,0,8,8,1,2,8,8,8,8,8,8,8,8,2,2,8,8,8,1,2,1,2,1,2,1,2,1,2,8,1,2,8,8,8,1,2,8,0],"f":[0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[2,2],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[[5,[4]]],[[7,[-1,6]]],[]],[[],2],[[],8],[-1,[[7,[1]]],9],[-1,[[7,[2]]],9],[-1,3,[]],[8,3],[8,-1,[]],[[-1,10],3,[]],[[8,-1],-2,[],[]],[[1,11],12],[[2,11],12],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],-1,[]],[[],-1,[]],[4,[[5,[1]]]],[4,[[5,[2]]]],0,[[13,[5,[4]]],[[7,[3,6]]]],[[8,-1],3,[]],0,0,[-1,14,[]],[[-1,15],[[5,[-2]]],[],[16,17,18]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[19,[1]],13,20,20,21],[[0,[[24,[],[[22,[[7,[23,6]]]]]]]]]],[[[25,[8]],13,2],[[7,[[0,[[28,[],[[22,[[0,[[27,[],[[26,[3]]]]]]]]]]]],6]]]],[[29,13,2,[30,[20]],[30,[20]],[31,[3]]],3],[[],8],[-1,14,[]],0,0,[[-1,32,33,34],3,[]],[[-1,32,33,34],33,[]],[-1,35,[]],[-1,36,[]],[[-1,34],3,[]],[-1,3,[]],[[-1,10],3,[]],[-1,34,[]],0,0,[-1,[[37,[-2]]],[],[]],[[8,38],3],[[],3],[[1,-1],7,39],[[2,-1],7,39],[[],[[41,[40]]]],[[],[[41,[40]]]],[-1,-2,[],[]],[-1,-2,[],[]],[1,4],[2,4],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[],15],[[],[[43,[42]]]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[[[43,[45]],46,[43,[47]]],48]],"c":[],"p":[[5,"PortMapping",0],[5,"StaticLinkArgs",0],[1,"tuple"],[5,"Variant",85],[6,"Option",86],[5,"Error",87],[6,"Result",88],[5,"StaticLink",0],[10,"Deserializer",89],[5,"Transition",90],[5,"Formatter",91],[8,"Result",91],[5,"Core",92],[5,"BorrowedObject",93],[5,"Type",94],[10,"Any",95],[10,"Send",96],[10,"Sync",96],[1,"slice"],[5,"Node",97],[5,"Properties",98],[17,"Item"],[5,"Link",99],[10,"Iterator",100],[5,"SimplePluginObject",101],[17,"Output"],[10,"Future",102],[10,"IntoIterator",103],[5,"ObjectManager",104],[5,"Interest",105],[5,"Receiver",106],[5,"FeatureActivationTransition",107],[1,"u32"],[5,"ObjectFeatures",108],[5,"WpObjectClass",109],[5,"WpPluginClass",109],[5,"ObjectImplRef",110],[5,"SourceId",111],[10,"Serializer",112],[5,"VariantTy",113],[6,"Cow",114],[5,"TypeData",115],[5,"NonNull",116],[5,"TypeId",95],[5,"WpCore",109],[5,"GVariant",117],[5,"GError",117],[8,"gboolean",117]],"b":[]}],\
["wireplumber",{"doc":"WirePlumber library bindings","t":"EEEEECQCQCEQCCQCQQCQCCCCCQCQCQTTFFFFTTFKFKKTTTTTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNNNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPGFFTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPEPPGPPINNNNNNNNNNNNNNNNNNHHHNNNNNNNNNNNNNTFFFFTTTFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNTFFNNNNNNQQNNOONNNOQNNNOQNNQOONNNNQNNNNNNQNPPPPFPPPPPPGFFGGFPPPFPPPPKPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOORKKFKKTTTTTTRFTKFTTTTFKFKKKFFFTTTTTNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNNMMNNNMMNNNMMQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNQMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNEEEEEEEEEEEEEEEEEEEEEEEEEEETPPFPTFGTFKPPRRKFKPPPFFGKTFKFTTTTTPFFGPRTTTTTTTTTTTTTSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSPFFKKFKFFFFKKFPTTTTTTTTTKKPKPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNMNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNMNNNNNNNMNNTFGGPPTTPPFKFFPPPTTPPFFTTPPTTTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONNNNNONNTPPTTTTTTTTPTTFKFFKKFKKGFKFKFKFKMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFFFFFFFFFFFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNTTTTTTTTFTTTTTTTTTTTTTTTTTTTTTTRTTTTTTTTTFFFFFFFFFKFFFFKTNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPFTPFFKKGFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Core","Error","InitFlags","Log","Result","core","critical","dbus","debug","error","ffi","info","local","log","log","lua","message","newtype_wrapper","plugin","plugin_export","prelude","pw","registry","session","signals","simple_plugin_subclass","spa","trace","util","warning","ALL","ALL","Core","Factory","FeatureActivationTransition","InitFlags","NONE","NONE","Object","ObjectExt","ObjectFeatures","ObjectImpl","ObjectImplExt","PIPEWIRE","SET_GLIB_LOG","SET_PW_LOG","SIGNAL_CONNECTED","SIGNAL_DISCONNECTED","SPA_TYPES","abort_activation","abort_activation","activate","activate","activate_closure","activate_closure","activate_execute_step","activate_execute_step","activate_future","activate_future","activate_get_next_step","activate_get_next_step","active_features","active_features","add_weak_ref_notify","add_weak_ref_notify","add_weak_ref_notify","add_weak_ref_notify","add_weak_ref_notify_local","add_weak_ref_notify_local","add_weak_ref_notify_local","add_weak_ref_notify_local","all","bind_property","bind_property","bind_property","bind_property","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bits","bitxor","bitxor_assign","block_signal","block_signal","block_signal","block_signal","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","class","class","class","class","class_init","class_of","class_of","class_of","class_of","clone","clone","clone","clone","clone","clone","clone_context","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","complement","config_dir","connect","connect","connect","connect","connect","connect_active_features_notify","connect_active_features_notify","connect_closure","connect_closure","connect_closure","connect_closure","connect_closure_id","connect_closure_id","connect_closure_id","connect_closure_id","connect_connected","connect_disconnected","connect_future","connect_id","connect_id","connect_id","connect_id","connect_local","connect_local","connect_local","connect_local","connect_local_id","connect_local_id","connect_local_id","connect_local_id","connect_notify","connect_notify","connect_notify","connect_notify","connect_notify_local","connect_notify_local","connect_notify_local","connect_notify_local","connect_notify_unsafe","connect_notify_unsafe","connect_notify_unsafe","connect_notify_unsafe","connect_pw_core_notify","connect_supported_features_notify","connect_supported_features_notify","connect_unsafe","connect_unsafe","connect_unsafe","connect_unsafe","connect_unsafe_id","connect_unsafe_id","connect_unsafe_id","connect_unsafe_id","contains","core","core","data","data","data","data","data_dir","deactivate","deactivate","deactivate","deactivate","default","default_context","difference","disconnect","disconnect","disconnect","disconnect","disconnect","downgrade","downgrade","downgrade","downgrade","emit","emit","emit","emit","emit_by_name","emit_by_name","emit_by_name","emit_by_name","emit_by_name_with_details","emit_by_name_with_details","emit_by_name_with_details","emit_by_name_with_details","emit_by_name_with_details_and_values","emit_by_name_with_details_and_values","emit_by_name_with_details_and_values","emit_by_name_with_details_and_values","emit_by_name_with_values","emit_by_name_with_values","emit_by_name_with_values","emit_by_name_with_values","emit_with_details","emit_with_details","emit_with_details","emit_with_details","emit_with_details_and_values","emit_with_details_and_values","emit_with_details_and_values","emit_with_details_and_values","emit_with_values","emit_with_values","emit_with_values","emit_with_values","empty","ensure_type","ensure_type","ensure_type","ensure_type","ensure_type","eq","eq","eq","eq","eq","eq","extend","find_file","find_files","find_property","find_property","find_property","find_property","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","freeze_notify","freeze_notify","freeze_notify","freeze_notify","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_glib","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_iter","from_name","from_value","g_main_context","get","get","get","get","get","get_pw_property","get_pw_property_cstring","handle","handle","handle","handle","handle_closure","handle_closure","handle_closure","handle_closure","has_property","has_property","has_property","has_property","hash","hash","hash","hash","hash","hash","idle_add","idle_add_closure","init","init_with_flags","insert","install_object_manager","interface","interface","interface","interface","intersection","intersects","into","into","into","into","into","into","into","into_closure_return_value","into_closure_return_value","into_closure_return_value","into_closure_return_value","into_closure_return_value","into_glib","into_iter","is","is","is","is","is_all","is_connected","is_empty","iter","iter_names","library_api_version","library_version","list_properties","list_properties","list_properties","list_properties","load_component","load_lua_script","module_dir","native_info","new","not","notify","notify","notify","notify","notify_by_pspec","notify_by_pspec","notify_by_pspec","notify_by_pspec","object_class","object_class","object_class","object_class","object_id","own_bound_id","param_spec_builder","param_spec_builder","param_spec_builder","param_spec_builder","param_spec_builder","params_future","parent_activate_execute_step","parent_activate_get_next_step","parent_class","parent_class_init","parent_class_init","parent_class_init","parent_class_init","parent_deactivate","parent_instance_init","parent_instance_init","parent_instance_init","parent_instance_init","parent_supported_features","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","properties","property","property","property","property","property_type","property_type","property_type","property_type","property_value","property_value","property_value","property_value","pw_context_raw","pw_core_raw","pw_property","pw_property_optional","pw_proxy_raw","qdata","qdata","qdata","qdata","ref_count","ref_count","ref_count","ref_count","remote_cookie","remote_host_name","remote_name","remote_properties","remote_user_name","remote_version","remove","remove_handle","remove_handle","remove_handle","remove_handle","requested_features","return_error","run","run_dispose","run_dispose","run_dispose","run_dispose","set","set_data","set_data","set_data","set_data","set_properties","set_properties","set_properties","set_properties","set_properties_from_value","set_properties_from_value","set_properties_from_value","set_properties_from_value","set_property","set_property","set_property","set_property","set_property_from_value","set_property_from_value","set_property_from_value","set_property_from_value","set_pw_proxy_raw","set_qdata","set_qdata","set_qdata","set_qdata","signal_stream","signal_stream","signal_stream","signal_stream","static_type","static_type","static_type","static_type","static_type","steal_data","steal_data","steal_data","steal_data","steal_qdata","steal_qdata","steal_qdata","steal_qdata","stop_signal_emission","stop_signal_emission","stop_signal_emission","stop_signal_emission","stop_signal_emission_by_name","stop_signal_emission_by_name","stop_signal_emission_by_name","stop_signal_emission_by_name","sub","sub_assign","supported_features","supported_features","supported_features","supported_features","symmetric_difference","sync","sync_closure","sync_future","timeout_add","timeout_add_closure","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_send_value","to_value","to_value_option","to_value_option","to_value_option","to_value_option","to_value_option","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from_closure_return_value","try_from_closure_return_value","try_from_closure_return_value","try_from_closure_return_value","try_from_closure_return_value","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","unblock_signal","unblock_signal","unblock_signal","unblock_signal","union","update_features","update_features","update_properties","value_type","vm_type","watch_closure","watch_closure","watch_closure","watch_closure","with_bits","with_pw_property","with_pw_property_cstr","Closed","Connected","Connecting","DBusState","Dbus","DbusFeatures","ENABLED","activate","activate_closure","activate_future","active_features","add_weak_ref_notify","add_weak_ref_notify_local","all","bind_property","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","block_signal","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bus_type","class","class_of","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","complement","connect","connect_closure","connect_closure_id","connect_id","connect_local","connect_local_id","connect_notify","connect_notify_local","connect_notify_unsafe","connect_state_notify","connect_unsafe","connect_unsafe_id","connection","contains","data","deactivate","difference","disconnect","downgrade","emit","emit_by_name","emit_by_name_with_details","emit_by_name_with_details_and_values","emit_by_name_with_values","emit_with_details","emit_with_details_and_values","emit_with_values","empty","ensure_type","ensure_type","ensure_type","eq","eq","eq","extend","find_property","fmt","fmt","fmt","fmt","fmt","fmt","fmt","freeze_notify","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_iter","from_name","from_value","from_value","get","get","get","get_property_bus_type","get_property_state","handle","handle_closure","has_property","hash","hash","hash","insert","instance","interface","intersection","intersects","into","into","into","into_closure_return_value","into_closure_return_value","into_closure_return_value","into_iter","is","is_all","is_empty","iter","iter_names","list_properties","not","notify","notify_by_pspec","object_class","param_spec_builder","param_spec_builder","param_spec_builder","parent_class_init","parent_instance_init","partial_cmp","partial_cmp","property","property_type","property_value","qdata","ref_count","remove","remove_handle","run_dispose","set","set_data","set_properties","set_properties_from_value","set_property","set_property_from_value","set_qdata","signal_stream","state","static_type","static_type","static_type","steal_data","steal_qdata","stop_signal_emission","stop_signal_emission_by_name","sub","sub_assign","supported_features","symmetric_difference","to_owned","to_owned","to_owned","to_send_value","to_send_value","to_value","to_value","to_value_option","to_value_option","to_value_option","toggle","try_from","try_from","try_from","try_from_closure_return_value","try_from_closure_return_value","try_from_closure_return_value","try_into","try_into","try_into","type_","type_id","type_id","type_id","unblock_signal","union","update_features","value_type","value_type","watch_closure","Err","Error","InvalidArgument","Invariant","LibraryErrorEnum","Ok","OperationFailed","Result","borrow","borrow_mut","clone","clone_into","cmp","code","domain","ensure_type","eq","fmt","fmt","from","from","from_value","get","hash","into","into_closure_return_value","invalid_argument","invariant","operation_failed","param_spec_builder","partial_cmp","static_type","to_owned","to_send_value","to_string","to_value","to_value_option","try_from","try_from_closure_return_value","try_into","type_id","value_type","ENABLED","ImplEndpoint","ImplMetadata","ImplModule","ImplNode","PROXY_FEATURE_BOUND","SIGNAL_CREATE_OBJECT","SIGNAL_OBJECT_REMOVED","SpaDevice","SpaDeviceFeatures","activate","activate_closure","activate_future","active_features","add_weak_ref_notify","add_weak_ref_notify","add_weak_ref_notify","add_weak_ref_notify","add_weak_ref_notify","add_weak_ref_notify_local","add_weak_ref_notify_local","add_weak_ref_notify_local","add_weak_ref_notify_local","add_weak_ref_notify_local","all","arguments","bind_property","bind_property","bind_property","bind_property","bind_property","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","block_signal","block_signal","block_signal","block_signal","block_signal","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","class","class","class","class","class","class_of","class_of","class_of","class_of","class_of","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","complement","connect","connect","connect","connect","connect","connect_closure","connect_closure","connect_closure","connect_closure","connect_closure","connect_closure_id","connect_closure_id","connect_closure_id","connect_closure_id","connect_closure_id","connect_create_object","connect_id","connect_id","connect_id","connect_id","connect_id","connect_local","connect_local","connect_local","connect_local","connect_local","connect_local_id","connect_local_id","connect_local_id","connect_local_id","connect_local_id","connect_notify","connect_notify","connect_notify","connect_notify","connect_notify","connect_notify_local","connect_notify_local","connect_notify_local","connect_notify_local","connect_notify_local","connect_notify_unsafe","connect_notify_unsafe","connect_notify_unsafe","connect_notify_unsafe","connect_notify_unsafe","connect_object_removed","connect_properties_notify","connect_pw_impl_module_notify","connect_unsafe","connect_unsafe","connect_unsafe","connect_unsafe","connect_unsafe","connect_unsafe_id","connect_unsafe_id","connect_unsafe_id","connect_unsafe_id","connect_unsafe_id","contains","data","data","data","data","data","deactivate","difference","disconnect","disconnect","disconnect","disconnect","disconnect","downgrade","downgrade","downgrade","downgrade","downgrade","emit","emit","emit","emit","emit","emit_by_name","emit_by_name","emit_by_name","emit_by_name","emit_by_name","emit_by_name_with_details","emit_by_name_with_details","emit_by_name_with_details","emit_by_name_with_details","emit_by_name_with_details","emit_by_name_with_details_and_values","emit_by_name_with_details_and_values","emit_by_name_with_details_and_values","emit_by_name_with_details_and_values","emit_by_name_with_details_and_values","emit_by_name_with_values","emit_by_name_with_values","emit_by_name_with_values","emit_by_name_with_values","emit_by_name_with_values","emit_with_details","emit_with_details","emit_with_details","emit_with_details","emit_with_details","emit_with_details_and_values","emit_with_details_and_values","emit_with_details_and_values","emit_with_details_and_values","emit_with_details_and_values","emit_with_values","emit_with_values","emit_with_values","emit_with_values","emit_with_values","empty","ensure_type","ensure_type","ensure_type","ensure_type","ensure_type","ensure_type","eq","eq","eq","eq","eq","eq","extend","find_property","find_property","find_property","find_property","find_property","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","freeze_notify","freeze_notify","freeze_notify","freeze_notify","freeze_notify","from","from","from","from","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_iter","from_name","from_pw_factory","from_spa_factory","from_value","get","get","get","get","get","get","get_pw_property","get_pw_property","get_pw_property_cstring","get_pw_property_cstring","handle","handle","handle","handle","handle","handle_closure","handle_closure","handle_closure","handle_closure","handle_closure","has_property","has_property","has_property","has_property","has_property","hash","hash","hash","hash","hash","hash","insert","interface","interface","interface","interface","interface","intersection","intersects","into","into","into","into","into","into","into_closure_return_value","into_closure_return_value","into_closure_return_value","into_closure_return_value","into_closure_return_value","into_closure_return_value","into_iter","is","is","is","is","is","is_all","is_empty","item","iter","iter_names","list_properties","list_properties","list_properties","list_properties","list_properties","load","load_file","managed_object","managed_object_iterator","name","name","native_info","native_info","new","new","new_wrap","new_wrap","not","notify","notify","notify","notify","notify","notify_by_pspec","notify_by_pspec","notify_by_pspec","notify_by_pspec","notify_by_pspec","object_class","object_class","object_class","object_class","object_class","object_id","object_id","param_spec_builder","param_spec_builder","param_spec_builder","param_spec_builder","param_spec_builder","param_spec_builder","params_future","params_future","parent_class_init","parent_class_init","parent_class_init","parent_class_init","parent_class_init","parent_instance_init","parent_instance_init","parent_instance_init","parent_instance_init","parent_instance_init","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","properties","properties","properties","property","property","property","property","property","property_type","property_type","property_type","property_type","property_type","property_value","property_value","property_value","property_value","property_value","pw_impl_node","pw_property","pw_property","pw_property_optional","pw_property_optional","pw_proxy_raw","pw_proxy_raw","pw_proxy_raw","pw_proxy_raw","qdata","qdata","qdata","qdata","qdata","ref_count","ref_count","ref_count","ref_count","ref_count","remove","remove_handle","remove_handle","remove_handle","remove_handle","remove_handle","run_dispose","run_dispose","run_dispose","run_dispose","run_dispose","set","set_data","set_data","set_data","set_data","set_data","set_properties","set_properties","set_properties","set_properties","set_properties","set_properties","set_properties_from_value","set_properties_from_value","set_properties_from_value","set_properties_from_value","set_properties_from_value","set_property","set_property","set_property","set_property","set_property","set_property_from_value","set_property_from_value","set_property_from_value","set_property_from_value","set_property_from_value","set_pw_proxy_raw","set_pw_proxy_raw","set_pw_proxy_raw","set_pw_proxy_raw","set_qdata","set_qdata","set_qdata","set_qdata","set_qdata","signal_stream","signal_stream","signal_stream","signal_stream","signal_stream","spa_device_handle","static_type","static_type","static_type","static_type","static_type","static_type","steal_data","steal_data","steal_data","steal_data","steal_data","steal_qdata","steal_qdata","steal_qdata","steal_qdata","steal_qdata","stop_signal_emission","stop_signal_emission","stop_signal_emission","stop_signal_emission","stop_signal_emission","stop_signal_emission_by_name","stop_signal_emission_by_name","stop_signal_emission_by_name","stop_signal_emission_by_name","stop_signal_emission_by_name","store_managed_object","sub","sub_assign","supported_features","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_send_value","to_value","to_value_option","to_value_option","to_value_option","to_value_option","to_value_option","to_value_option","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from_closure_return_value","try_from_closure_return_value","try_from_closure_return_value","try_from_closure_return_value","try_from_closure_return_value","try_from_closure_return_value","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_","type_","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","unblock_signal","unblock_signal","unblock_signal","unblock_signal","unblock_signal","union","update_features","value_type","watch_closure","watch_closure","watch_closure","watch_closure","watch_closure","with_properties","with_pw_property","with_pw_property","with_pw_property_cstr","with_pw_property_cstr","LEVEL_TRACE","Log","StructuredLogContext","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","critical","debug","default","domain","domain","file","fmt","from","from","function","info","into","into","level_is_enabled","line","log","log_args","log_string","message","object","object_type","set_default_level","set_level","spa_log","to_owned","trace","try_from","try_from","try_into","try_into","type_id","type_id","warning","writer_default","Boolean","Boolean","Conversion","Custom","Deserializer","Float","Float","Glib","Integer","Integer","LengthMismatch","LuaError","LuaString","LuaTable","LuaType","LuaValue","LuaVariant","Nil","Nil","Parse","Serializer","String","String","Table","Table","ToLuaTable","TypeMismatch","UnsupportedType","Utf8","array_indices","array_len","as_bytes","as_ref","as_ref","as_ref","as_str","as_variant","as_variant","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrowed","borrowed","borrowed","by_key","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","convert_from","custom","custom","default","deref","deserialize","deserialize","deserialize_any","deserialize_bool","deserialize_byte_buf","deserialize_bytes","deserialize_char","deserialize_enum","deserialize_f32","deserialize_f64","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i8","deserialize_identifier","deserialize_ignored_any","deserialize_map","deserialize_newtype_struct","deserialize_option","deserialize_seq","deserialize_str","deserialize_string","deserialize_struct","deserialize_tuple","deserialize_tuple_struct","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u8","deserialize_unit","deserialize_unit_struct","entry_len","eq","eq","eq","eq","eq","flattened","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_iter","from_iter","from_str","from_str","from_variant","from_variant","from_variant","get_bool","get_float","get_integer","get_nil","get_string","get_table","hash","hash","hash","hash","inhuman","inhuman","inner_mut","inner_mut","inner_mut","inner_ref","inner_ref","inner_ref","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_bytes","into_deserializer","into_deserializer","into_deserializer","into_deserializer","into_inner","into_inner","into_inner","into_lua_variant","into_string","into_vardict","into_variant","into_variant","invalid_length","is_array","is_empty","is_human_readable","is_human_readable","is_nil","is_numeric","is_table","is_vardict","iter_array","iter_array_entries","iter_array_indices","iter_dict_entries","key_at","lua_type","lua_type","lua_value","lua_variant","new","new","nil","owned","owned","owned","parse","partial_cmp","partial_cmp","partial_cmp","partial_cmp","serialize","serialize","serialize_bool","serialize_bytes","serialize_char","serialize_f32","serialize_f64","serialize_i16","serialize_i32","serialize_i64","serialize_i8","serialize_map","serialize_newtype_struct","serialize_newtype_variant","serialize_none","serialize_seq","serialize_some","serialize_str","serialize_struct","serialize_struct_variant","serialize_tuple","serialize_tuple_struct","serialize_tuple_variant","serialize_u16","serialize_u32","serialize_u64","serialize_u8","serialize_unit","serialize_unit_struct","serialize_unit_variant","source","static_variant_type","static_variant_type","table_getn","to_integer","to_lua_string","to_lua_variant","to_lua_variant","to_lua_variant","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_variant","to_variant","to_variant","to_variant","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unsafe_from","unsafe_from","unsafe_from","unsafe_from","unsafe_from","unsafe_from","unsafe_from","value_at","variant_is_dict","with_bytes","with_lua_variant","with_variant","with_variant_type","wrap","wrap","wrap","actual","expected","Args","AsyncPluginExt","AsyncPluginImpl","ComponentLoader","ComponentLoaderImpl","ComponentLoaderImplExt","DIR_PIPEWIRE_MODULE","DIR_WIREPLUMBER_MODULE","ENABLED","ENV_CONFIG","ENV_DATA","ETC","EnableFuture","LookupDirs","MODULE_LOADER_LUA","ModuleExport","ModuleWrapper","NONE","NONE","PLUGIN_LOADER_LUA","PREFIX_SHARE","Plugin","PluginExt","PluginFeatures","PluginImpl","PluginImplExt","SimplePlugin","SimplePluginObject","SourceHandles","SourceHandlesCell","TYPE_LUA_CONFIG","TYPE_LUA_SCRIPT","TYPE_PIPEWIRE_MODULE","TYPE_WIREPLUMBER_MODULE","XDG_CONFIG_HOME","activate","activate_closure","activate_future","active_features","add_weak_ref_notify","add_weak_ref_notify","add_weak_ref_notify","add_weak_ref_notify_local","add_weak_ref_notify_local","add_weak_ref_notify_local","all","all","as_plugin","bind_property","bind_property","bind_property","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","block_signal","block_signal","block_signal","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cell","class","class","class","class_init","class_init","class_of","class_of","class_of","clear","clear","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","complement","complement","connect","connect","connect","connect_closure","connect_closure","connect_closure","connect_closure_id","connect_closure_id","connect_closure_id","connect_id","connect_id","connect_id","connect_local","connect_local","connect_local","connect_local_id","connect_local_id","connect_local_id","connect_notify","connect_notify","connect_notify","connect_notify_local","connect_notify_local","connect_notify_local","connect_notify_unsafe","connect_notify_unsafe","connect_notify_unsafe","connect_unsafe","connect_unsafe","connect_unsafe","connect_unsafe_id","connect_unsafe_id","connect_unsafe_id","contains","contains","core","data","data","data","deactivate","decode_args","default","deref","difference","difference","disable","disable","disable","disable","disconnect","disconnect","disconnect","downgrade","downgrade","downgrade","emit","emit","emit","emit_by_name","emit_by_name","emit_by_name","emit_by_name_with_details","emit_by_name_with_details","emit_by_name_with_details","emit_by_name_with_details_and_values","emit_by_name_with_details_and_values","emit_by_name_with_details_and_values","emit_by_name_with_values","emit_by_name_with_values","emit_by_name_with_values","emit_with_details","emit_with_details","emit_with_details","emit_with_details_and_values","emit_with_details_and_values","emit_with_details_and_values","emit_with_values","emit_with_values","emit_with_values","empty","empty","enable","enable","enable","ensure_type","ensure_type","ensure_type","ensure_type","ensure_type","eq","eq","eq","eq","eq","extend","extend","find","find_property","find_property","find_property","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","freeze_notify","freeze_notify","freeze_notify","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_iter","from_iter","from_name","from_name","from_value","from_value","get","get","get","get","get","handle","handle","handle","handle_closure","handle_closure","handle_closure","has_property","has_property","has_property","hash","hash","hash","hash","hash","imp","init","init","init","init_args","init_args","insert","insert","instance_ref","instance_ref","interface","interface","interface","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into","into_closure_return_value","into_closure_return_value","into_closure_return_value","into_closure_return_value","into_closure_return_value","into_iter","into_iter","is","is","is","is_all","is_all","is_empty","is_empty","iter","iter","iter_names","iter_names","list_properties","list_properties","list_properties","load","load","name","name","new","new_plugin","new_plugin","not","not","notify","notify","notify","notify_by_pspec","notify_by_pspec","notify_by_pspec","object_class","object_class","object_class","param_spec_builder","param_spec_builder","param_spec_builder","param_spec_builder","param_spec_builder","parent_class","parent_class","parent_class_init","parent_class_init","parent_class_init","parent_disable","parent_enable","parent_instance_init","parent_instance_init","parent_instance_init","parent_load","parent_supports_type","partial_cmp","partial_cmp","partial_cmp","plugin_context","plugin_core","plugin_export","property","property","property","property_type","property_type","property_type","property_value","property_value","property_value","push","push","qdata","qdata","qdata","ref_count","ref_count","ref_count","register","register","register_source","register_source","remove","remove","remove_handle","remove_handle","remove_handle","run_dispose","run_dispose","run_dispose","set","set","set_data","set_data","set_data","set_properties","set_properties","set_properties","set_properties_from_value","set_properties_from_value","set_properties_from_value","set_property","set_property","set_property","set_property_from_value","set_property_from_value","set_property_from_value","set_qdata","set_qdata","set_qdata","signal_stream","signal_stream","signal_stream","simple_plugin_subclass","spawn_local","static_type","static_type","static_type","static_type","static_type","steal_data","steal_data","steal_data","steal_qdata","steal_qdata","steal_qdata","stop_signal_emission","stop_signal_emission","stop_signal_emission","stop_signal_emission_by_name","stop_signal_emission_by_name","stop_signal_emission_by_name","sub","sub","sub_assign","sub_assign","supported_features","supports_type","supports_type","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_send_value","to_send_value","to_send_value","to_value","to_value","to_value_option","to_value_option","to_value_option","to_value_option","to_value_option","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_closure_return_value","try_from_closure_return_value","try_from_closure_return_value","try_from_closure_return_value","try_from_closure_return_value","try_init","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unblock_signal","unblock_signal","unblock_signal","union","union","update_features","value_type","value_type","watch_closure","watch_closure","watch_closure","Core","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","_","ALL","Active","Allocating","Client","Creating","DATA","Device","Direction","ESTABLISHED","Endpoint","EndpointExt","Error","Error","Error","Error","FromPipewirePropertyString","GlobalProxy","GlobalProxyExt","Idle","Init","Input","Link","LinkFeatures","LinkState","LinkTarget","MINIMAL","Metadata","MetadataExt","MetadataFeatures","NONE","NONE","NONE","NONE","NONE","Negotiating","Node","NodeFeatures","NodeState","Output","Output","PIPEWIRE_OBJECT_FEATURE_INFO","PIPEWIRE_OBJECT_FEATURE_PARAM_FORMAT","PIPEWIRE_OBJECT_FEATURE_PARAM_PORT_CONFIG","PIPEWIRE_OBJECT_FEATURE_PARAM_PROFILE","PIPEWIRE_OBJECT_FEATURE_PARAM_PROPS","PIPEWIRE_OBJECT_FEATURE_PARAM_ROUTE","PORTS","PROXY_FEATURES","PROXY_FEATURES","PROXY_FEATURE_BOUND","PROXY_FEATURE_BOUND","PROXY_FEATURE_CUSTOM","PROXY_FEATURE_CUSTOM_START","PW_KEY_ACCESS","PW_KEY_APP_ICON","PW_KEY_APP_ICON_NAME","PW_KEY_APP_ID","PW_KEY_APP_LANGUAGE","PW_KEY_APP_NAME","PW_KEY_APP_PROCESS_BINARY","PW_KEY_APP_PROCESS_HOST","PW_KEY_APP_PROCESS_ID","PW_KEY_APP_PROCESS_MACHINE_ID","PW_KEY_APP_PROCESS_SESSION_ID","PW_KEY_APP_PROCESS_USER","PW_KEY_APP_VERSION","PW_KEY_AUDIO_CHANNEL","PW_KEY_AUDIO_CHANNELS","PW_KEY_AUDIO_FORMAT","PW_KEY_AUDIO_RATE","PW_KEY_CLIENT_ACCESS","PW_KEY_CLIENT_API","PW_KEY_CLIENT_ID","PW_KEY_CLIENT_NAME","PW_KEY_CONFIG_NAME","PW_KEY_CONFIG_PREFIX","PW_KEY_CONTEXT_PROFILE_MODULES","PW_KEY_CORE_DAEMON","PW_KEY_CORE_ID","PW_KEY_CORE_MONITORS","PW_KEY_CORE_NAME","PW_KEY_CORE_VERSION","PW_KEY_CPU_CORES","PW_KEY_CPU_MAX_ALIGN","PW_KEY_DEVICE_API","PW_KEY_DEVICE_BUS","PW_KEY_DEVICE_BUS_PATH","PW_KEY_DEVICE_CACHE_PARAMS","PW_KEY_DEVICE_CLASS","PW_KEY_DEVICE_DESCRIPTION","PW_KEY_DEVICE_FORM_FACTOR","PW_KEY_DEVICE_ICON","PW_KEY_DEVICE_ICON_NAME","PW_KEY_DEVICE_ID","PW_KEY_DEVICE_INTENDED_ROLES","PW_KEY_DEVICE_NAME","PW_KEY_DEVICE_NICK","PW_KEY_DEVICE_PLUGGED","PW_KEY_DEVICE_PRODUCT_ID","PW_KEY_DEVICE_PRODUCT_NAME","PW_KEY_DEVICE_SERIAL","PW_KEY_DEVICE_STRING","PW_KEY_DEVICE_SUBSYSTEM","PW_KEY_DEVICE_VENDOR_ID","PW_KEY_DEVICE_VENDOR_NAME","PW_KEY_FACTORY_ID","PW_KEY_FACTORY_NAME","PW_KEY_FACTORY_TYPE_NAME","PW_KEY_FACTORY_TYPE_VERSION","PW_KEY_FACTORY_USAGE","PW_KEY_FORMAT_DSP","PW_KEY_HOST_NAME","PW_KEY_LIBRARY_NAME_DBUS","PW_KEY_LIBRARY_NAME_LOOP","PW_KEY_LIBRARY_NAME_SYSTEM","PW_KEY_LINK_FEEDBACK","PW_KEY_LINK_ID","PW_KEY_LINK_INPUT_NODE","PW_KEY_LINK_INPUT_PORT","PW_KEY_LINK_OUTPUT_NODE","PW_KEY_LINK_OUTPUT_PORT","PW_KEY_LINK_PASSIVE","PW_KEY_MEDIA_ARTIST","PW_KEY_MEDIA_CATEGORY","PW_KEY_MEDIA_CLASS","PW_KEY_MEDIA_COMMENT","PW_KEY_MEDIA_COPYRIGHT","PW_KEY_MEDIA_DATE","PW_KEY_MEDIA_FILENAME","PW_KEY_MEDIA_FORMAT","PW_KEY_MEDIA_ICON","PW_KEY_MEDIA_ICON_NAME","PW_KEY_MEDIA_LANGUAGE","PW_KEY_MEDIA_NAME","PW_KEY_MEDIA_ROLE","PW_KEY_MEDIA_SOFTWARE","PW_KEY_MEDIA_TITLE","PW_KEY_MEDIA_TYPE","PW_KEY_MODULE_AUTHOR","PW_KEY_MODULE_DESCRIPTION","PW_KEY_MODULE_ID","PW_KEY_MODULE_NAME","PW_KEY_MODULE_USAGE","PW_KEY_MODULE_VERSION","PW_KEY_NODE_ALWAYS_PROCESS","PW_KEY_NODE_AUTOCONNECT","PW_KEY_NODE_CACHE_PARAMS","PW_KEY_NODE_DESCRIPTION","PW_KEY_NODE_DONT_RECONNECT","PW_KEY_NODE_DRIVER","PW_KEY_NODE_EXCLUSIVE","PW_KEY_NODE_GROUP","PW_KEY_NODE_ID","PW_KEY_NODE_LATENCY","PW_KEY_NODE_LINK_GROUP","PW_KEY_NODE_LOCK_QUANTUM","PW_KEY_NODE_LOCK_RATE","PW_KEY_NODE_MAX_LATENCY","PW_KEY_NODE_NAME","PW_KEY_NODE_NETWORK","PW_KEY_NODE_NICK","PW_KEY_NODE_PASSIVE","PW_KEY_NODE_PAUSE_ON_IDLE","PW_KEY_NODE_PLUGGED","PW_KEY_NODE_RATE","PW_KEY_NODE_SESSION","PW_KEY_NODE_STREAM","PW_KEY_NODE_TRIGGER","PW_KEY_NODE_VIRTUAL","PW_KEY_NODE_WANT_DRIVER","PW_KEY_OBJECT_ID","PW_KEY_OBJECT_LINGER","PW_KEY_OBJECT_PATH","PW_KEY_OBJECT_REGISTER","PW_KEY_OBJECT_SERIAL","PW_KEY_PORT_ALIAS","PW_KEY_PORT_CACHE_PARAMS","PW_KEY_PORT_CONTROL","PW_KEY_PORT_DIRECTION","PW_KEY_PORT_EXTRA","PW_KEY_PORT_ID","PW_KEY_PORT_MONITOR","PW_KEY_PORT_NAME","PW_KEY_PORT_PHYSICAL","PW_KEY_PORT_TERMINAL","PW_KEY_PRIORITY_DRIVER","PW_KEY_PRIORITY_SESSION","PW_KEY_PROTOCOL","PW_KEY_REMOTE_INTENTION","PW_KEY_REMOTE_NAME","PW_KEY_SEC_GID","PW_KEY_SEC_LABEL","PW_KEY_SEC_PID","PW_KEY_SEC_UID","PW_KEY_STREAM_CAPTURE_SINK","PW_KEY_STREAM_DONT_REMIX","PW_KEY_STREAM_IS_LIVE","PW_KEY_STREAM_LATENCY_MAX","PW_KEY_STREAM_LATENCY_MIN","PW_KEY_STREAM_MONITOR","PW_KEY_USER_NAME","PW_KEY_VIDEO_FORMAT","PW_KEY_VIDEO_RATE","PW_KEY_VIDEO_SIZE","PW_KEY_WINDOW_X11_DISPLAY","Paused","PipewireKey","PipewireObject","PipewireObjectExt","PipewireObjectExt2","PipewirePropertyStringIter","PipewirePropertyStringIterExt","Port","Properties","PropertiesItem","Proxy","ProxyExt","ProxyExt2","ProxyFeatures","Running","SIGNAL_BOUND","SIGNAL_CHANGED","SIGNAL_ERROR","SIGNAL_PARAMS_CHANGED","SIGNAL_PORTS_CHANGED","SIGNAL_PW_PROXY_CREATED","SIGNAL_PW_PROXY_DESTROYED","SIGNAL_STATE_CHANGED","SIGNAL_STATE_CHANGED","SpaPropertyKey","SpaPropertyKeyId","Suspended","ToPipewirePropertyString","Unlinked","activate","activate","activate","activate","activate_closure","activate_closure","activate_closure","activate_closure","activate_future","activate_future","activate_future","activate_future","active_features","active_features","active_features","active_features","add","add_from_dict","add_keys","add_weak_ref_notify","add_weak_ref_notify","add_weak_ref_notify","add_weak_ref_notify","add_weak_ref_notify","add_weak_ref_notify","add_weak_ref_notify","add_weak_ref_notify","add_weak_ref_notify","add_weak_ref_notify","add_weak_ref_notify_local","add_weak_ref_notify_local","add_weak_ref_notify_local","add_weak_ref_notify_local","add_weak_ref_notify_local","add_weak_ref_notify_local","add_weak_ref_notify_local","add_weak_ref_notify_local","add_weak_ref_notify_local","add_weak_ref_notify_local","all","all","all","all","as_cstr","as_ptr","as_ptr","as_ref","as_str","bind","bind","bind_property","bind_property","bind_property","bind_property","bind_property","bind_property","bind_property","bind_property","bind_property","bind_property","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","block_signal","block_signal","block_signal","block_signal","block_signal","block_signal","block_signal","block_signal","block_signal","block_signal","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bound_id","bound_id","class","class","class","class","class","class","class","class","class","class","class_of","class_of","class_of","class_of","class_of","class_of","class_of","class_of","class_of","class_of","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","complement","complement","complement","complement","connect","connect","connect","connect","connect","connect","connect","connect","connect","connect","connect_bound","connect_bound","connect_bound_id_notify","connect_bound_id_notify","connect_changed","connect_changed","connect_closure","connect_closure","connect_closure","connect_closure","connect_closure","connect_closure","connect_closure","connect_closure","connect_closure","connect_closure","connect_closure_id","connect_closure_id","connect_closure_id","connect_closure_id","connect_closure_id","connect_closure_id","connect_closure_id","connect_closure_id","connect_closure_id","connect_closure_id","connect_direction_notify","connect_direction_notify","connect_error","connect_error","connect_id","connect_id","connect_id","connect_id","connect_id","connect_id","connect_id","connect_id","connect_id","connect_id","connect_local","connect_local","connect_local","connect_local","connect_local","connect_local","connect_local","connect_local","connect_local","connect_local","connect_local_id","connect_local_id","connect_local_id","connect_local_id","connect_local_id","connect_local_id","connect_local_id","connect_local_id","connect_local_id","connect_local_id","connect_max_input_ports_notify","connect_max_output_ports_notify","connect_media_class_notify","connect_media_class_notify","connect_n_input_ports_notify","connect_n_output_ports_notify","connect_name_notify","connect_name_notify","connect_native_info_notify","connect_native_info_notify","connect_notify","connect_notify","connect_notify","connect_notify","connect_notify","connect_notify","connect_notify","connect_notify","connect_notify","connect_notify","connect_notify_local","connect_notify_local","connect_notify_local","connect_notify_local","connect_notify_local","connect_notify_local","connect_notify_local","connect_notify_local","connect_notify_local","connect_notify_local","connect_notify_unsafe","connect_notify_unsafe","connect_notify_unsafe","connect_notify_unsafe","connect_notify_unsafe","connect_notify_unsafe","connect_notify_unsafe","connect_notify_unsafe","connect_notify_unsafe","connect_notify_unsafe","connect_param_info_notify","connect_param_info_notify","connect_params_changed","connect_params_changed","connect_permissions_notify","connect_permissions_notify","connect_ports_changed","connect_properties_notify","connect_properties_notify","connect_pw_proxy_destroyed","connect_pw_proxy_destroyed","connect_pw_proxy_notify","connect_pw_proxy_notify","connect_state_changed","connect_state_changed","connect_state_notify","connect_state_notify","connect_unsafe","connect_unsafe","connect_unsafe","connect_unsafe","connect_unsafe","connect_unsafe","connect_unsafe","connect_unsafe","connect_unsafe","connect_unsafe","connect_unsafe_id","connect_unsafe_id","connect_unsafe_id","connect_unsafe_id","connect_unsafe_id","connect_unsafe_id","connect_unsafe_id","connect_unsafe_id","connect_unsafe_id","connect_unsafe_id","contains","contains","contains","contains","copy","count","data","data","data","data","data","data","data","data","data","data","deactivate","deactivate","deactivate","deactivate","default","deref","device_details","device_id","device_index","difference","difference","difference","difference","direction","direction","direction","disconnect","disconnect","disconnect","disconnect","disconnect","disconnect","disconnect","disconnect","disconnect","disconnect","downgrade","downgrade","downgrade","downgrade","downgrade","downgrade","downgrade","downgrade","downgrade","downgrade","emit","emit","emit","emit","emit","emit","emit","emit","emit","emit","emit_by_name","emit_by_name","emit_by_name","emit_by_name","emit_by_name","emit_by_name","emit_by_name","emit_by_name","emit_by_name","emit_by_name","emit_by_name_with_details","emit_by_name_with_details","emit_by_name_with_details","emit_by_name_with_details","emit_by_name_with_details","emit_by_name_with_details","emit_by_name_with_details","emit_by_name_with_details","emit_by_name_with_details","emit_by_name_with_details","emit_by_name_with_details_and_values","emit_by_name_with_details_and_values","emit_by_name_with_details_and_values","emit_by_name_with_details_and_values","emit_by_name_with_details_and_values","emit_by_name_with_details_and_values","emit_by_name_with_details_and_values","emit_by_name_with_details_and_values","emit_by_name_with_details_and_values","emit_by_name_with_details_and_values","emit_by_name_with_values","emit_by_name_with_values","emit_by_name_with_values","emit_by_name_with_values","emit_by_name_with_values","emit_by_name_with_values","emit_by_name_with_values","emit_by_name_with_values","emit_by_name_with_values","emit_by_name_with_values","emit_with_details","emit_with_details","emit_with_details","emit_with_details","emit_with_details","emit_with_details","emit_with_details","emit_with_details","emit_with_details","emit_with_details","emit_with_details_and_values","emit_with_details_and_values","emit_with_details_and_values","emit_with_details_and_values","emit_with_details_and_values","emit_with_details_and_values","emit_with_details_and_values","emit_with_details_and_values","emit_with_details_and_values","emit_with_details_and_values","emit_with_values","emit_with_values","emit_with_values","emit_with_values","emit_with_values","emit_with_values","emit_with_values","emit_with_values","emit_with_values","emit_with_values","empty","empty","empty","empty","ensure_type","ensure_type","ensure_type","ensure_type","ensure_type","ensure_type","ensure_type","ensure_type","ensure_type","ensure_type","ensure_type","ensure_type","ensure_type","ensure_type","ensure_type","ensure_type","ensure_type","ensure_type","ensure_type","ensure_unique_owner","enum_params","enum_params","enum_params_future","enum_params_future","enum_params_sync","enum_params_sync","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","error_is_exists","extend","extend","extend","extend","extend","ffi","filter","find","find","find_property","find_property","find_property","find_property","find_property","find_property","find_property","find_property","find_property","find_property","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","freeze_notify","freeze_notify","freeze_notify","freeze_notify","freeze_notify","freeze_notify","freeze_notify","freeze_notify","freeze_notify","freeze_notify","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_factory","from_factory","from_factory","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_ptr_borrow","from_glib_ptr_borrow","from_iter","from_iter","from_iter","from_iter","from_iter","from_name","from_name","from_name","from_name","from_pipewire_string","from_str","from_value","from_value","from_value","from_value","from_value","from_value","from_value","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get_pw_property","get_pw_property","get_pw_property","get_pw_property","get_pw_property","get_pw_property","get_pw_property","get_pw_property","get_pw_property_cstring","get_pw_property_cstring","get_pw_property_cstring","get_pw_property_cstring","get_pw_property_cstring","get_pw_property_cstring","get_pw_property_cstring","get_pw_property_cstring","global_properties","global_properties","handle","handle","handle","handle","handle","handle","handle","handle","handle","handle","handle_closure","handle_closure","handle_closure","handle_closure","handle_closure","handle_closure","handle_closure","handle_closure","handle_closure","handle_closure","has_property","has_property","has_property","has_property","has_property","has_property","has_property","has_property","has_property","has_property","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","insert","insert","insert","insert","insert","interface","interface","interface","interface","interface","interface","interface","interface","interface","interface","interface_type","interface_type","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_closure_return_value","into_closure_return_value","into_closure_return_value","into_closure_return_value","into_closure_return_value","into_closure_return_value","into_closure_return_value","into_closure_return_value","into_closure_return_value","into_closure_return_value","into_closure_return_value","into_closure_return_value","into_closure_return_value","into_closure_return_value","into_closure_return_value","into_closure_return_value","into_closure_return_value","into_closure_return_value","into_closure_return_value","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is","is","is","is","is","is","is","is","is","is","is_all","is_all","is_all","is_all","is_empty","is_empty","is_empty","is_empty","items","iter","iter","iter","iter","iter","iter_names","iter_names","iter_names","iter_names","iterator_item_extract","iterator_item_get_key","iterator_item_get_value","key","key_string","key_value","keys","linked_object_ids","list_properties","list_properties","list_properties","list_properties","list_properties","list_properties","list_properties","list_properties","list_properties","list_properties","lookup","lookup_port","matches","max_input_ports","max_output_ports","media_class","media_class","n_input_ports","n_output_ports","n_ports","name","name","name","name","native_info","native_info","native_info","native_info","native_info","native_info","native_info","native_info","new","new","new_clone","new_copy","new_copy_dict","new_iterator","new_iterator","new_properties_iterator","new_properties_iterator","new_string","new_wrap","new_wrap_dict","new_wrap_mut","node_id","not","not","not","not","notify","notify","notify","notify","notify","notify","notify","notify","notify","notify","notify_by_pspec","notify_by_pspec","notify_by_pspec","notify_by_pspec","notify_by_pspec","notify_by_pspec","notify_by_pspec","notify_by_pspec","notify_by_pspec","notify_by_pspec","object_class","object_class","object_class","object_class","object_class","object_class","object_class","object_class","object_class","object_class","object_id","object_id","object_id","object_id","object_id","object_id","object_id","object_id","param_info","param_info","param_spec_builder","param_spec_builder","param_spec_builder","param_spec_builder","param_spec_builder","param_spec_builder","param_spec_builder","param_spec_builder","param_spec_builder","param_spec_builder","param_spec_builder","param_spec_builder","param_spec_builder","param_spec_builder","param_spec_builder","param_spec_builder","param_spec_builder","param_spec_builder","param_spec_builder","params_future","params_future","params_future","params_future","params_future","params_future","params_future","params_future","parent_class_init","parent_class_init","parent_class_init","parent_class_init","parent_class_init","parent_class_init","parent_class_init","parent_class_init","parent_class_init","parent_instance_init","parent_instance_init","parent_instance_init","parent_instance_init","parent_instance_init","parent_instance_init","parent_instance_init","parent_instance_init","parent_instance_init","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","peek_dict","permissions","permissions","pipewire_string","pipewire_string","pipewire_string_iter","pipewire_string_iter","port_index","ports","ports_filtered","properties","properties","property","property","property","property","property","property","property","property","property","property","property_type","property_type","property_type","property_type","property_type","property_type","property_type","property_type","property_type","property_type","property_value","property_value","property_value","property_value","property_value","property_value","property_value","property_value","property_value","property_value","props","pw_property","pw_property","pw_property","pw_property","pw_property","pw_property","pw_property","pw_property","pw_property_optional","pw_property_optional","pw_property_optional","pw_property_optional","pw_property_optional","pw_property_optional","pw_property_optional","pw_property_optional","pw_proxy_raw","pw_proxy_raw","pw_proxy_raw","pw_proxy_raw","pw_proxy_raw","pw_proxy_raw","pw_proxy_raw","pw_proxy_raw","pw_proxy_raw","pw_proxy_raw","pw_proxy_raw","qdata","qdata","qdata","qdata","qdata","qdata","qdata","qdata","qdata","qdata","ref_count","ref_count","ref_count","ref_count","ref_count","ref_count","ref_count","ref_count","ref_count","ref_count","remove","remove","remove","remove","remove","remove_handle","remove_handle","remove_handle","remove_handle","remove_handle","remove_handle","remove_handle","remove_handle","remove_handle","remove_handle","request_destroy","request_destroy","run_dispose","run_dispose","run_dispose","run_dispose","run_dispose","run_dispose","run_dispose","run_dispose","run_dispose","run_dispose","send_command","send_error","set","set","set","set","set","set","set","set_data","set_data","set_data","set_data","set_data","set_data","set_data","set_data","set_data","set_data","set_param","set_param","set_properties","set_properties","set_properties","set_properties","set_properties","set_properties","set_properties","set_properties","set_properties","set_properties","set_properties_from_value","set_properties_from_value","set_properties_from_value","set_properties_from_value","set_properties_from_value","set_properties_from_value","set_properties_from_value","set_properties_from_value","set_properties_from_value","set_properties_from_value","set_property","set_property","set_property","set_property","set_property","set_property","set_property","set_property","set_property","set_property","set_property_from_value","set_property_from_value","set_property_from_value","set_property_from_value","set_property_from_value","set_property_from_value","set_property_from_value","set_property_from_value","set_property_from_value","set_property_from_value","set_pw_proxy_raw","set_pw_proxy_raw","set_pw_proxy_raw","set_pw_proxy_raw","set_pw_proxy_raw","set_pw_proxy_raw","set_pw_proxy_raw","set_pw_proxy_raw","set_pw_proxy_raw","set_pw_proxy_raw","set_pw_proxy_raw","set_qdata","set_qdata","set_qdata","set_qdata","set_qdata","set_qdata","set_qdata","set_qdata","set_qdata","set_qdata","signal_stream","signal_stream","signal_stream","signal_stream","signal_stream","signal_stream","signal_stream","signal_stream","signal_stream","signal_stream","sort","spa_property_key","spa_property_key_with_table","state","state","state_result","state_result","static_type","static_type","static_type","static_type","static_type","static_type","static_type","static_type","static_type","static_type","static_type","static_type","static_type","static_type","static_type","static_type","static_type","static_type","static_type","steal_data","steal_data","steal_data","steal_data","steal_data","steal_data","steal_data","steal_data","steal_data","steal_data","steal_qdata","steal_qdata","steal_qdata","steal_qdata","steal_qdata","steal_qdata","steal_qdata","steal_qdata","steal_qdata","steal_qdata","stop_signal_emission","stop_signal_emission","stop_signal_emission","stop_signal_emission","stop_signal_emission","stop_signal_emission","stop_signal_emission","stop_signal_emission","stop_signal_emission","stop_signal_emission","stop_signal_emission_by_name","stop_signal_emission_by_name","stop_signal_emission_by_name","stop_signal_emission_by_name","stop_signal_emission_by_name","stop_signal_emission_by_name","stop_signal_emission_by_name","stop_signal_emission_by_name","stop_signal_emission_by_name","stop_signal_emission_by_name","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","supported_features","supported_features","supported_features","supported_features","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_pw_properties","to_send_value","to_send_value","to_send_value","to_send_value","to_send_value","to_send_value","to_send_value","to_string","to_string","to_string","to_string","to_value","to_value","to_value","to_value","to_value","to_value","to_value","to_value_option","to_value_option","to_value_option","to_value_option","to_value_option","to_value_option","to_value_option","to_value_option","to_value_option","to_value_option","to_value_option","to_value_option","to_value_option","to_value_option","to_value_option","to_value_option","to_value_option","to_value_option","to_value_option","toggle","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_closure_return_value","try_from_closure_return_value","try_from_closure_return_value","try_from_closure_return_value","try_from_closure_return_value","try_from_closure_return_value","try_from_closure_return_value","try_from_closure_return_value","try_from_closure_return_value","try_from_closure_return_value","try_from_closure_return_value","try_from_closure_return_value","try_from_closure_return_value","try_from_closure_return_value","try_from_closure_return_value","try_from_closure_return_value","try_from_closure_return_value","try_from_closure_return_value","try_from_closure_return_value","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unblock_signal","unblock_signal","unblock_signal","unblock_signal","unblock_signal","unblock_signal","unblock_signal","unblock_signal","unblock_signal","unblock_signal","union","union","union","union","unref_and_take_pw_properties","update","update_features","update_features","update_features","update_features","update_from_dict","update_keys","update_permissions","value","value_string","value_type","value_type","value_type","value_type","value_type","value_type","value_type","values","watch_closure","watch_closure","watch_closure","watch_closure","watch_closure","watch_closure","watch_closure","watch_closure","watch_closure","watch_closure","with_pw_property","with_pw_property","with_pw_property","with_pw_property","with_pw_property","with_pw_property","with_pw_property","with_pw_property","with_pw_property_cstr","with_pw_property_cstr","with_pw_property_cstr","with_pw_property_cstr","with_pw_property_cstr","with_pw_property_cstr","with_pw_property_cstr","with_pw_property_cstr","write_props","write_props","write_props","CHECK_ALL","Constraint","ConstraintType","ConstraintVerb","Equals","GProperty","GTYPE","G_PROPERTIES","InList","InRange","Interest","InterestContainer","InterestMatch","InterestMatchFlags","IsAbsent","IsPresent","Matches","NONE","NONE","None","NotEquals","ObjectInterest","ObjectManager","PW_GLOBAL_PROPERTIES","PW_PROPERTIES","PwGlobalProperty","PwProperty","SIGNAL_INSTALLED","SIGNAL_OBJECTS_CHANGED","SIGNAL_OBJECT_ADDED","SIGNAL_OBJECT_REMOVED","add_constraint","add_interest","add_to","add_weak_ref_notify","add_weak_ref_notify_local","all","all","as_ptr","bind_property","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","block_signal","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","class","class_of","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","compare","complement","complement","connect","connect_closure","connect_closure_id","connect_core_notify","connect_id","connect_installed","connect_local","connect_local_id","connect_notify","connect_notify_local","connect_notify_unsafe","connect_object_added","connect_object_removed","connect_objects_changed","connect_unsafe","connect_unsafe_id","constrain","contains","contains","core","data","default","default","deref","deserialize","deserialize","deserialize","difference","difference","disconnect","downgrade","emit","emit_by_name","emit_by_name_with_details","emit_by_name_with_details_and_values","emit_by_name_with_values","emit_with_details","emit_with_details_and_values","emit_with_values","empty","empty","ensure_type","ensure_type","ensure_type","ensure_type","ensure_type","ensure_type","eq","eq","eq","eq","eq","eq","extend","extend","extend","filter","filter","filter","filtered","find_property","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","freeze_notify","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_ptr_borrow","from_iter","from_iter","from_iter","from_name","from_name","from_str","from_str","from_value","from_value","from_value","from_value","from_variant","from_variant","from_variant","get","get","get","get","get","get","handle","handle_closure","has","has_property","hash","hash","hash","hash","hash","hash","in_list","in_range","inner","insert","insert","installed_future","interface","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into","into","into_closure_return_value","into_closure_return_value","into_closure_return_value","into_closure_return_value","into_closure_return_value","into_closure_return_value","into_inner","into_iter","into_iter","into_iter","is","is_all","is_all","is_empty","is_empty","is_installed","iter","iter","iter_names","iter_names","list_properties","lookup","lookup","lookup","lookup","lookup_object","matches","matches","matches_object","matches_object","matches_props","matches_pw_object","n_objects","name","new","new","new","nickname","not","not","notify","notify_by_pspec","object_class","objects","param_spec_builder","param_spec_builder","param_spec_builder","param_spec_builder","param_spec_builder","param_spec_builder","parent_class_init","parent_instance_init","partial_cmp","partial_cmp","partial_cmp","partial_cmp","property","property_type","property_value","qdata","ref_count","remove","remove","remove_handle","request_object_features","run_dispose","serialize","serialize","serialize","set","set","set_data","set_properties","set_properties_from_value","set_property","set_property_from_value","set_qdata","signal_stream","static_type","static_type","static_type","static_type","static_type","static_type","static_variant_type","static_variant_type","static_variant_type","steal_data","steal_qdata","stop_signal_emission","stop_signal_emission_by_name","sub","sub","sub_assign","sub_assign","subject","symbol","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_send_value","to_send_value","to_send_value","to_send_value","to_string","to_string","to_value","to_value","to_value","to_value","to_value_option","to_value_option","to_value_option","to_value_option","to_value_option","to_value_option","to_variant","to_variant","to_variant","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_closure_return_value","try_from_closure_return_value","try_from_closure_return_value","try_from_closure_return_value","try_from_closure_return_value","try_from_closure_return_value","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unblock_signal","union","union","validate","value","value_type","value_type","value_type","value_type","value_type","verb","watch_closure","wrap_unchecked","ACTIVE","Configured","Configuring","EXPORTED","NONE","NONE","NONE","NONE","NONE","NONE","NONE","None","SIGNAL_ADAPTER_PORTS_STATE_CHANGED","SIGNAL_ENDPOINT_PROPERTIES_CHANGED","SessionItem","SessionItemExt","SessionItemFeatures","SiAcquisition","SiAcquisitionExt","SiAcquisitionExt2","SiAdapter","SiAdapterExt","SiAdapterExt2","SiAdapterPortsState","SiEndpoint","SiEndpointExt","SiFactory","SiFactoryExt","SiLink","SiLinkExt","SiLinkable","SiLinkableExt","acquire","acquire","acquire_future","acquire_future","acquisition","acquisition","activate","activate_closure","activate_future","active_features","add_weak_ref_notify","add_weak_ref_notify","add_weak_ref_notify","add_weak_ref_notify","add_weak_ref_notify","add_weak_ref_notify","add_weak_ref_notify","add_weak_ref_notify_local","add_weak_ref_notify_local","add_weak_ref_notify_local","add_weak_ref_notify_local","add_weak_ref_notify_local","add_weak_ref_notify_local","add_weak_ref_notify_local","all","associated_proxy","associated_proxy","associated_proxy_id","associated_proxy_id","bind_property","bind_property","bind_property","bind_property","bind_property","bind_property","bind_property","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","block_signal","block_signal","block_signal","block_signal","block_signal","block_signal","block_signal","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","class","class","class","class","class","class","class","class_of","class_of","class_of","class_of","class_of","class_of","class_of","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","complement","configure","configure","connect","connect","connect","connect","connect","connect","connect","connect_adapter_ports_state_changed","connect_adapter_ports_state_changed","connect_closure","connect_closure","connect_closure","connect_closure","connect_closure","connect_closure","connect_closure","connect_closure_id","connect_closure_id","connect_closure_id","connect_closure_id","connect_closure_id","connect_closure_id","connect_closure_id","connect_endpoint_properties_changed","connect_endpoint_properties_changed","connect_id","connect_id","connect_id","connect_id","connect_id","connect_id","connect_id","connect_id_notify","connect_id_notify","connect_link_properties_changed","connect_link_properties_changed","connect_local","connect_local","connect_local","connect_local","connect_local","connect_local","connect_local","connect_local_id","connect_local_id","connect_local_id","connect_local_id","connect_local_id","connect_local_id","connect_local_id","connect_notify","connect_notify","connect_notify","connect_notify","connect_notify","connect_notify","connect_notify","connect_notify_local","connect_notify_local","connect_notify_local","connect_notify_local","connect_notify_local","connect_notify_local","connect_notify_local","connect_notify_unsafe","connect_notify_unsafe","connect_notify_unsafe","connect_notify_unsafe","connect_notify_unsafe","connect_notify_unsafe","connect_notify_unsafe","connect_properties_notify","connect_properties_notify","connect_unsafe","connect_unsafe","connect_unsafe","connect_unsafe","connect_unsafe","connect_unsafe","connect_unsafe","connect_unsafe_id","connect_unsafe_id","connect_unsafe_id","connect_unsafe_id","connect_unsafe_id","connect_unsafe_id","connect_unsafe_id","construct","construct","contains","data","data","data","data","data","data","data","deactivate","difference","disconnect","disconnect","disconnect","disconnect","disconnect","disconnect","disconnect","downgrade","downgrade","downgrade","downgrade","downgrade","downgrade","downgrade","emit","emit","emit","emit","emit","emit","emit","emit_by_name","emit_by_name","emit_by_name","emit_by_name","emit_by_name","emit_by_name","emit_by_name","emit_by_name_with_details","emit_by_name_with_details","emit_by_name_with_details","emit_by_name_with_details","emit_by_name_with_details","emit_by_name_with_details","emit_by_name_with_details","emit_by_name_with_details_and_values","emit_by_name_with_details_and_values","emit_by_name_with_details_and_values","emit_by_name_with_details_and_values","emit_by_name_with_details_and_values","emit_by_name_with_details_and_values","emit_by_name_with_details_and_values","emit_by_name_with_values","emit_by_name_with_values","emit_by_name_with_values","emit_by_name_with_values","emit_by_name_with_values","emit_by_name_with_values","emit_by_name_with_values","emit_with_details","emit_with_details","emit_with_details","emit_with_details","emit_with_details","emit_with_details","emit_with_details","emit_with_details_and_values","emit_with_details_and_values","emit_with_details_and_values","emit_with_details_and_values","emit_with_details_and_values","emit_with_details_and_values","emit_with_details_and_values","emit_with_values","emit_with_values","emit_with_values","emit_with_values","emit_with_values","emit_with_values","emit_with_values","empty","ensure_type","ensure_type","ensure_type","ensure_type","ensure_type","ensure_type","ensure_type","ensure_type","ensure_type","eq","eq","eq","eq","eq","eq","eq","eq","eq","extend","find","find_property","find_property","find_property","find_property","find_property","find_property","find_property","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","freeze_notify","freeze_notify","freeze_notify","freeze_notify","freeze_notify","freeze_notify","freeze_notify","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_iter","from_name","from_value","from_value","get","get","get","get","get","get","get","get","get","handle","handle","handle","handle","handle","handle","handle","handle_closure","handle_closure","handle_closure","handle_closure","handle_closure","handle_closure","handle_closure","handle_proxy_destroyed","has_property","has_property","has_property","has_property","has_property","has_property","has_property","hash","hash","hash","hash","hash","hash","hash","hash","hash","id","id","in_item","in_item","insert","interface","interface","interface","interface","interface","interface","interface","intersection","intersects","into","into","into","into","into","into","into","into","into","into_closure_return_value","into_closure_return_value","into_closure_return_value","into_closure_return_value","into_closure_return_value","into_closure_return_value","into_closure_return_value","into_closure_return_value","into_closure_return_value","into_iter","is","is","is","is","is","is","is","is_all","is_configured","is_configured","is_empty","iter","iter_names","list_properties","list_properties","list_properties","list_properties","list_properties","list_properties","list_properties","make","name","name","new_simple","not","notify","notify","notify","notify","notify","notify","notify","notify_by_pspec","notify_by_pspec","notify_by_pspec","notify_by_pspec","notify_by_pspec","notify_by_pspec","notify_by_pspec","object_class","object_class","object_class","object_class","object_class","object_class","object_class","out_item","out_item","param_spec_builder","param_spec_builder","param_spec_builder","param_spec_builder","param_spec_builder","param_spec_builder","param_spec_builder","param_spec_builder","param_spec_builder","parent_class_init","parent_class_init","parent_instance_init","parent_instance_init","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","ports","ports","ports_format","ports_format","ports_state","ports_state","properties","properties","properties","properties","properties","properties","property","property","property","property","property","property","property","property","property","property_type","property_type","property_type","property_type","property_type","property_type","property_type","property_value","property_value","property_value","property_value","property_value","property_value","property_value","qdata","qdata","qdata","qdata","qdata","qdata","qdata","ref_count","ref_count","ref_count","ref_count","ref_count","ref_count","ref_count","register","register","register","registration_info","registration_info","registration_info","registration_info","release","release","remove","remove","remove","remove_handle","remove_handle","remove_handle","remove_handle","remove_handle","remove_handle","remove_handle","reset","reset","run_dispose","run_dispose","run_dispose","run_dispose","run_dispose","run_dispose","run_dispose","set","set_data","set_data","set_data","set_data","set_data","set_data","set_data","set_ports_format","set_ports_format","set_ports_format_future","set_ports_format_future","set_properties","set_properties","set_properties","set_properties","set_properties","set_properties","set_properties","set_properties","set_properties","set_properties_from_value","set_properties_from_value","set_properties_from_value","set_properties_from_value","set_properties_from_value","set_properties_from_value","set_properties_from_value","set_property","set_property","set_property","set_property","set_property","set_property","set_property","set_property_from_value","set_property_from_value","set_property_from_value","set_property_from_value","set_property_from_value","set_property_from_value","set_property_from_value","set_qdata","set_qdata","set_qdata","set_qdata","set_qdata","set_qdata","set_qdata","signal_stream","signal_stream","signal_stream","signal_stream","signal_stream","signal_stream","signal_stream","static_type","static_type","static_type","static_type","static_type","static_type","static_type","static_type","static_type","steal_data","steal_data","steal_data","steal_data","steal_data","steal_data","steal_data","steal_qdata","steal_qdata","steal_qdata","steal_qdata","steal_qdata","steal_qdata","steal_qdata","stop_signal_emission","stop_signal_emission","stop_signal_emission","stop_signal_emission","stop_signal_emission","stop_signal_emission","stop_signal_emission","stop_signal_emission_by_name","stop_signal_emission_by_name","stop_signal_emission_by_name","stop_signal_emission_by_name","stop_signal_emission_by_name","stop_signal_emission_by_name","stop_signal_emission_by_name","sub","sub_assign","supported_features","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_send_value","to_send_value","to_value","to_value","to_value_option","to_value_option","to_value_option","to_value_option","to_value_option","to_value_option","to_value_option","to_value_option","to_value_option","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_closure_return_value","try_from_closure_return_value","try_from_closure_return_value","try_from_closure_return_value","try_from_closure_return_value","try_from_closure_return_value","try_from_closure_return_value","try_from_closure_return_value","try_from_closure_return_value","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_","type_","type_","type_","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unblock_signal","unblock_signal","unblock_signal","unblock_signal","unblock_signal","unblock_signal","unblock_signal","union","update_features","value_type","value_type","watch_closure","watch_closure","watch_closure","watch_closure","watch_closure","watch_closure","watch_closure","AdapterPortsStateChanged","Connected","CreateObject","Disconnected","EndpointPropertiesChanged","LinkStateChanged","ManagerInstalled","MetadataChanged","NodePortsChanged","NodeStateChanged","ObjectAdded","ObjectRemoved","ObjectsChanged","PwObjectParamsChanged","PwProxyBound","PwProxyCreated","PwProxyDestroyed","PwProxyError","SpaObjectRemoved","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","builder","builder","builder","builder","builder","builder","builder","builder","builder","builder","builder","builder","builder","builder","builder","builder","builder","builder","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ARRAY","BITMAP","BOOL","BYTES","CHOICE","COMMAND_DEVICE","COMMAND_NODE","DOUBLE","DebugValue","EVENT_DEVICE","EVENT_NODE","FD","FLOAT","FRACTION","ID","INT","LONG","NONE","OBJECT","OBJECT_FORMAT","OBJECT_PARAM_BUFFERS","OBJECT_PARAM_IO","OBJECT_PARAM_LATENCY","OBJECT_PARAM_META","OBJECT_PARAM_PORT_CONFIG","OBJECT_PARAM_PROCESS_LATENCY","OBJECT_PARAM_PROFILE","OBJECT_PARAM_ROUTE","OBJECT_PROFILER","OBJECT_PROPS","OBJECT_PROP_INFO","Owned","POD","POINTER","POINTER_BUFFER","POINTER_DICT","POINTER_META","RECTANGLE","SEQUENCE","STRING","STRUCT","SpaBool","SpaIdTable","SpaIdValue","SpaJson","SpaJsonBuilder","SpaJsonParser","SpaPod","SpaPodBuilder","SpaPodParser","SpaPrimitive","SpaProps","SpaRoute","SpaRoutes","SpaType","SpaValue","TYPE","add_boolean","add_boolean","add_bytes","add_control","add_double","add_fd","add_float","add_float","add_fraction","add_id","add_int","add_int","add_json","add_long","add_none","add_null","add_object_property","add_pod","add_pointer","add_property","add_property","add_property_id","add_rectangle","add_string","add_string","add_to_builder","add_to_builder","add_to_builder","apply","array_child","array_item_type","array_iterator","array_pointers","as_bytes","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","boolean","boolean","boolean","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","by_device_index","by_index","bytes","bytes","channel_volume","choice_child","choice_type","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","contains_device","control","copy","copy","data","debug","deserialize","device_index","device_indices","double","double","end","end","end","end","ensure_type","ensure_type","ensure_type","ensure_type","ensure_type","ensure_type","ensure_type","ensure_type","ensure_type","ensure_unique_owner","ensure_unique_owner","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extend","fd","fd","ffi","filter","find_spa_property","find_value","find_value_from_name","find_value_from_short_name","fixate","float","float","float","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fraction","fraction","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_ptr_borrow","from_glib_ptr_borrow","from_glib_ptr_borrow","from_glib_ptr_borrow","from_glib_ptr_borrow","from_glib_ptr_borrow","from_glib_ptr_borrow","from_glib_ptr_borrow_mut","from_id","from_id_unchecked","from_iter","from_iter","from_iter","from_name","from_name","from_object","from_object","from_string","from_stringn","from_value","get","get","get","get","get","get","get","has_volume","has_volume","has_volume","hash","hash","hash","hash","hash","hash","hash","hash","hash","id","id","index","info","int","int","int","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_closure_return_value","into_closure_return_value","into_closure_return_value","into_closure_return_value","into_closure_return_value","into_closure_return_value","into_closure_return_value","into_glib","into_glib","into_glib","into_params","into_params","into_params","into_routes","is_array","is_array","is_boolean","is_boolean","is_bytes","is_choice","is_control","is_double","is_fd","is_float","is_float","is_fraction","is_fundamental","is_id","is_id","is_int","is_int","is_long","is_none","is_null","is_null","is_object","is_object","is_object","is_pointer","is_property","is_rectangle","is_sequence","is_string","is_string","is_struct","is_unique_owner","is_unique_owner","iterator","json","libspa","long","long","mute","name","name","new","new_array","new_array","new_array","new_boolean","new_boolean","new_bytes","new_choice","new_double","new_fd","new_float","new_float","new_fraction","new_id","new_int","new_int","new_iterator","new_long","new_none","new_null","new_object","new_object","new_object","new_object","new_pointer","new_rectangle","new_sequence","new_string","new_string","new_struct","new_struct","new_wrap_raw_const","new_wrap_raw_mut","number","number","object_id_values_table","param_spec_builder","param_spec_builder","param_spec_builder","param_spec_builder","param_spec_builder","param_spec_builder","param_spec_builder","params","parent","parse_boolean","parse_float","parse_int","parse_string","parse_unknown_name","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pod","pointer","pointer","profile_indices","property","props","rectangle","rectangle","result_number","serialize","set_boolean","set_channel_volume","set_double","set_fd","set_float","set_fraction","set_id","set_int","set_long","set_pod","set_pointer","set_rectangle","set_spa_property","short_name","size","spa_fd","spa_fraction","spa_id","spa_pod_raw","spa_properties","spa_property","spa_property_key","spa_property_key_with_table","spa_rectangle","spa_type","static_type","static_type","static_type","static_type","static_type","static_type","static_type","static_type","static_type","string","string","string","struct_fields","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_pod_value","to_send_value","to_str","to_string","to_value_option","to_value_option","to_value_option","to_value_option","to_value_option","to_value_option","to_value_option","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_closure_return_value","try_from_closure_return_value","try_from_closure_return_value","try_from_closure_return_value","try_from_closure_return_value","try_from_closure_return_value","try_from_closure_return_value","try_from_closure_return_value","try_from_glib","try_from_glib","try_from_glib","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unsafe_from","unsafe_from","unsafe_from","unsafe_from","value_type","values","values_table","with_copy","with_params","with_params","with_params","with_pod","with_pod_mut_unchecked","with_pod_unchecked","CustomStart","Error","IntoValueIterator","NONE","None","State","Transition","TransitionExt","TransitionExt2","TransitionStep","ValueIterator","WpIterator","add_weak_ref_notify","add_weak_ref_notify","add_weak_ref_notify_local","add_weak_ref_notify_local","advance","advance","as_ptr","bind_property","bind_property","block_signal","block_signal","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","class","class","class_of","class_of","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","connect","connect","connect_closure","connect_closure","connect_closure_id","connect_closure_id","connect_completed_notify","connect_completed_notify","connect_id","connect_id","connect_local","connect_local","connect_local_id","connect_local_id","connect_notify","connect_notify","connect_notify_local","connect_notify_local","connect_notify_unsafe","connect_notify_unsafe","connect_unsafe","connect_unsafe","connect_unsafe_id","connect_unsafe_id","data","data","default","default","disconnect","disconnect","downgrade","downgrade","emit","emit","emit_by_name","emit_by_name","emit_by_name_with_details","emit_by_name_with_details","emit_by_name_with_details_and_values","emit_by_name_with_details_and_values","emit_by_name_with_values","emit_by_name_with_values","emit_with_details","emit_with_details","emit_with_details_and_values","emit_with_details_and_values","emit_with_values","emit_with_values","empty","ensure_type","ensure_type","ensure_type","ensure_type","eq","eq","eq","eq","eq","eq","find_property","find_property","finish","fmt","fmt","fmt","fmt","fmt","fmt","freeze_notify","freeze_notify","from","from","from","from","from","from","from","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_ptr_borrow","from_iter","from_iter","from_value","get","get","get","get","had_error","had_error","handle","handle","handle_closure","handle_closure","has_property","has_property","hash","hash","hash","hash","hash","hash","inner","inner","interface","interface","into","into","into","into","into","into","into_closure_return_value","into_closure_return_value","into_closure_return_value","into_closure_return_value","into_inner","into_inner","into_iter","into_iter","into_iter","into_value_iterator","is","is","is_completed","is_completed","list_properties","list_properties","load","location","name","new","new","new_closure","next","next","next","notify","notify","notify_by_pspec","notify_by_pspec","object_class","object_class","param_spec_builder","param_spec_builder","param_spec_builder","param_spec_builder","parent_class_init","parent_class_init","parent_instance_init","parent_instance_init","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","property","property","property_type","property_type","property_value","property_value","qdata","qdata","ref_count","ref_count","remove_handle","remove_handle","reset","reset","return_error","return_error","run_dispose","run_dispose","save","set_data","set_data","set_properties","set_properties","set_properties_from_value","set_properties_from_value","set_property","set_property","set_property_from_value","set_property_from_value","set_qdata","set_qdata","signal_stream","signal_stream","source_object","source_object","static_type","static_type","static_type","static_type","steal_data","steal_data","steal_qdata","steal_qdata","stop_signal_emission","stop_signal_emission","stop_signal_emission_by_name","stop_signal_emission_by_name","to_owned","to_owned","to_owned","to_owned","to_send_value","to_value","to_value_option","to_value_option","to_value_option","to_value_option","try_from","try_from","try_from","try_from","try_from","try_from","try_from_closure_return_value","try_from_closure_return_value","try_from_closure_return_value","try_from_closure_return_value","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","unblock_signal","unblock_signal","upcast","upcast","user_data","value_type","watch_closure","watch_closure","with_impl_raw","with_inner","with_inner","with_ptr_array"],"q":[[0,"wireplumber"],[30,"wireplumber::core"],[715,"wireplumber::dbus"],[947,"wireplumber::error"],[989,"wireplumber::local"],[1724,"wireplumber::log"],[1767,"wireplumber::lua"],[2117,"wireplumber::lua::LuaError"],[2119,"wireplumber::plugin"],[2692,"wireplumber::prelude"],[2719,"wireplumber::pw"],[4942,"wireplumber::registry"],[5434,"wireplumber::session"],[6465,"wireplumber::signals"],[6712,"wireplumber::spa"],[7530,"wireplumber::util"],[7939,"core::option"],[7940,"gio::auto::cancellable"],[7941,"glib::object"],[7942,"glib::error"],[7943,"core::result"],[7944,"core::ops::function"],[7945,"glib::closure"],[7946,"core::future::future"],[7947,"alloc::boxed"],[7948,"core::pin"],[7949,"glib::object"],[7950,"glib::object"],[7951,"glib::object"],[7952,"alloc::string"],[7953,"glib::value"],[7954,"core::ops::function"],[7955,"glib::quark"],[7956,"glib::param_spec"],[7957,"core::ptr::non_null"],[7958,"glib::auto::main_context"],[7959,"glib::object"],[7960,"core::fmt"],[7961,"core::fmt"],[7962,"alloc::vec"],[7963,"glib_sys"],[7964,"glib_signal"],[7965,"glib_signal"],[7966,"glib_signal"],[7967,"core::hash"],[7968,"glib::auto::source"],[7969,"glib::object"],[7970,"bitflags::iter"],[7971,"glib::variant"],[7972,"core::ffi"],[7973,"glib::object"],[7974,"glib::subclass::types"],[7975,"glib::subclass::types"],[7976,"pipewire_sys::bindings"],[7977,"glib::auto::main_loop"],[7978,"glib_signal::signal_stream"],[7979,"glib::value"],[7980,"core::convert"],[7981,"core::marker"],[7982,"gio::auto::dbus_connection"],[7983,"core::fmt"],[7984,"core::clone"],[7985,"core::default"],[7986,"core::fmt"],[7987,"core::fmt"],[7988,"serde::de"],[7989,"serde::de"],[7990,"core::num::error"],[7991,"glib::variant"],[7992,"glib::variant"],[7993,"serde::ser"],[7994,"serde::ser"],[7995,"glib::variant_type"],[7996,"core::cell"],[7997,"glib::object"],[7998,"libspa_sys::bindings"],[7999,"core::iter::adapters::map"],[8000,"glib_sys"],[8001,"pipewire_sys::bindings"],[8002,"glib::subclass::signal"],[8003,"libspa::pod::deserialize"],[8004,"libspa_sys::bindings"],[8005,"libspa::pod::serialize"],[8006,"libspa::utils"],[8007,"libspa_sys::bindings"],[8008,"wireplumber_sys::sys"],[8009,"core::hash"]],"d":["","","","","","WirePlumber’s entry point and base Object type.","","","","Error handling and the Result alias","","","Wrappers around <code>pw_impl_node</code> and other local objects","Logging macros and utilities","","Lua script execution","","","Externally loaded modules","Exports a ModuleExport as the wireplumber plugin entry …","Extension traits","PipeWire proxy objects","Remote object change notifications","Session item factories","glib_signal types","Implements <code>glib::ObjectSubclass</code>, <code>glib::ObjectImpl</code>, and …","Simple Plugin API POD encoding","","Miscellaneous types and helpers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a flags value with all known bits set.","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether all set bits in a source flags value are also set …","","","","","","","","","","","","","","The intersection of a source flags value with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a flags value with all bits unset.","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Whether all known bits in this flags value are set.","","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained named flags values.","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The intersection of a source flags value with the …","","","","","","","","","","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","","","","","","","","","","","","","","","","","","","","","Get a flags value with all known bits set.","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","","","","","","","","","","","Whether all set bits in a source flags value are also set …","","","The intersection of a source flags value with the …","","","","","","","","","","","Get a flags value with all bits unset.","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained named flags values.","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","","","","","","","","","","","","","The intersection of a source flags value with the …","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","","","","","","","","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","Contains the error value","","","","","Contains the success value","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","Wrap a new Error under the …","Wrap a new Error under the LibraryErrorEnum::Invariant …","Wrap a new Error under the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a flags value with all known bits set.","","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether all set bits in a source flags value are also set …","","","","","","","The intersection of a source flags value with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a flags value with all bits unset.","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bitshe bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","","Yield a set of contained flags values.","Yield a set of contained named flags values.","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The intersection of a source flags value with the …","","","","","","","","","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A specialized LuaVariant that is both an array and …","","","A Variant that can be passed to a Lua script.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Lua’s <code>n</code> field, if it exists","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Catches panics from a ModuleExport initializer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a flags value with all known bits set.","Get a flags value with all known bits set.","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Exports a ModuleExport as the wireplumber plugin entry …","","","","","","","","","","","","","","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","","","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","","","","","","","","","","","","","","","","","","","","","","Implements <code>glib::ObjectSubclass</code>, <code>glib::ObjectImpl</code>, and …","","","","","","","","","","","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ProxyFeatures::PROXY_FEATURE_BOUND | …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","","Return the inner pointer to the underlying C value.","Return the inner pointer to the underlying C value.","","","","","","","","","","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","","","","","","","","","","","","","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","","","Convert from a bits value exactly.","Convert from a bits value exactly.","","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bitsorrows the underlying C value.","Borrows the underlying C value.","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","","","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","","","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …he intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Return the inner pointer to the underlying C value.","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","","","","","","","","","","","","","","","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","","","","","","","","","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Borrows the underlying C value.","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Wait until the ObjectManager has been installed.","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","","","","","","","","","","","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","","","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","","","","","","","","","","","","","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a flags value with all known bits set.","","","","","","","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether all set bits in a source flags value are also set …","","","","","","","","","The intersection of a source flags value with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a flags value with all bits unset.","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bitshe bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Whether all known bits in this flags value are set.","","","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained named flags values.","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The intersection of a source flags value with the …","","","","","","","","","","","","","","","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the inner pointer to the underlying C value.","Return the inner pointer to the underlying C value.","Return the inner pointer to the underlying C value.","Return the inner pointer to the underlying C value.","Return the inner pointer to the underlying C value.","Return the inner pointer to the underlying C value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchangedorrows the underlying C value.","Borrows the underlying C value.","Borrows the underlying C value.","Borrows the underlying C value.","Borrows the underlying C value.","Borrows the underlying C value.","Borrows the underlying C value.","Borrows the underlying C value mutably.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrows pod for the lifetime of the returned object","borrows pod for the lifetime of the returned objectafety","Safety","","","","","","","","","","","","","","","","","","","Return the inner pointer to the underlying C value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Borrows the underlying C value.","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,20,0,0,0,0,26,4,0,0,0,0,0,20,20,20,27,27,20,1,1,1,1,1,1,12,12,1,1,12,12,1,1,27,28,13,26,27,28,13,26,20,27,28,13,26,20,20,20,20,4,20,20,20,20,27,28,13,26,27,28,13,26,4,20,27,28,13,26,4,20,27,28,13,26,26,27,28,13,26,27,28,13,26,4,20,27,27,28,13,26,4,20,27,28,13,26,4,20,27,27,27,28,13,26,1,1,27,28,13,26,27,28,13,26,27,27,27,27,28,13,26,27,28,13,26,27,28,13,26,27,28,13,26,27,28,13,26,27,28,13,26,27,1,1,27,28,13,26,27,28,13,26,20,1,1,27,28,13,26,27,12,12,1,1,4,27,20,27,27,28,13,26,27,28,13,26,27,28,13,26,27,28,13,26,27,28,13,26,27,28,13,26,27,28,13,26,27,28,13,26,27,28,13,26,27,28,13,26,20,27,28,13,26,20,27,28,13,26,4,20,20,27,27,27,28,13,26,27,28,13,26,4,20,20,20,20,20,27,28,13,26,27,28,13,26,4,4,4,4,4,4,4,4,4,4,20,20,20,20,20,4,27,27,27,27,27,27,28,28,28,28,28,28,13,13,13,13,13,13,26,26,26,26,26,26,27,27,27,27,27,27,28,28,28,28,28,28,13,13,13,13,13,13,26,26,26,26,26,26,27,27,27,27,27,27,28,28,28,28,28,28,13,13,13,13,13,13,26,26,26,26,26,26,27,27,27,27,27,27,28,28,28,28,28,28,13,13,13,13,13,13,26,26,26,26,26,26,27,27,27,27,27,27,28,28,28,28,28,28,13,13,13,13,13,13,26,26,26,26,26,26,27,27,27,27,27,27,28,28,28,28,28,28,13,13,13,13,13,13,26,26,26,26,26,26,20,20,20,27,27,28,13,26,20,28,28,27,28,13,26,27,28,13,26,27,28,13,26,27,28,13,26,4,20,27,27,27,27,20,27,27,28,13,26,20,20,27,28,13,26,4,4,20,27,28,13,26,20,4,20,27,28,13,26,20,27,20,20,20,27,27,27,28,13,26,27,27,27,28,27,20,27,28,13,26,27,28,13,26,27,28,13,26,28,27,27,28,13,26,20,28,87,87,87,27,28,13,26,87,27,28,13,26,87,27,28,13,26,4,27,27,28,13,26,27,28,13,26,27,28,13,26,27,27,28,28,28,27,28,13,26,27,28,13,26,27,27,27,27,27,27,20,27,28,13,26,13,13,27,27,28,13,26,20,27,28,13,26,27,28,13,26,27,28,13,26,27,28,13,26,27,28,13,26,28,27,28,13,26,27,28,13,26,27,28,13,26,20,27,28,13,26,27,28,13,26,27,28,13,26,27,28,13,26,20,20,12,12,1,1,20,27,27,27,27,27,27,28,13,26,4,20,20,20,27,28,13,26,20,20,27,28,13,26,4,20,27,28,13,26,20,27,28,13,26,4,20,27,28,13,26,27,28,13,26,4,20,27,28,13,26,20,1,1,27,20,27,27,28,13,26,4,28,28,106,106,106,0,0,0,54,103,103,103,103,103,103,54,103,54,54,54,54,54,54,54,54,103,103,106,54,103,106,54,103,103,103,103,106,54,103,106,54,103,106,54,103,103,103,103,103,103,103,103,103,103,103,103,103,54,103,103,54,103,103,103,103,103,103,103,103,103,103,54,103,106,54,103,106,54,54,103,103,106,54,54,54,54,54,103,103,106,54,54,54,54,54,54,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,54,54,106,54,103,106,54,103,103,103,103,103,103,106,54,54,103,103,54,54,103,106,54,103,106,54,54,103,54,54,54,54,103,54,103,103,103,103,106,54,103,103,103,106,103,103,103,103,103,54,103,103,54,103,103,103,103,103,103,103,103,103,106,54,103,103,103,103,54,54,103,54,103,106,54,106,54,106,54,103,106,54,54,103,106,54,103,106,54,103,106,54,103,103,106,54,103,54,103,106,54,103,284,0,108,108,0,284,108,0,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,0,0,0,108,108,108,108,108,108,108,108,108,108,108,108,108,56,0,0,0,0,56,111,111,0,0,111,111,111,111,113,114,112,115,111,113,114,112,115,111,56,112,113,114,112,115,111,56,56,56,56,56,56,56,56,113,114,112,115,111,113,114,112,115,111,56,113,114,112,115,111,56,113,114,112,115,111,113,114,112,115,111,113,114,112,115,111,56,113,114,112,115,111,56,113,114,112,115,111,56,113,114,112,115,111,113,114,112,115,111,113,114,112,115,111,111,113,114,112,115,111,113,114,112,115,111,113,114,112,115,111,113,114,112,115,111,113,114,112,115,111,113,114,112,115,111,111,112,112,113,114,112,115,111,113,114,112,115,111,56,113,114,112,115,111,111,56,113,114,112,115,111,113,114,112,115,111,113,114,112,115,111,113,114,112,115,111,113,114,112,115,111,113,114,112,115,111,113,114,112,115,111,113,114,112,115,111,113,114,112,115,111,113,114,112,115,111,56,113,114,112,115,111,56,113,114,112,115,111,56,56,113,114,112,115,111,113,114,112,115,111,56,56,56,56,56,113,114,112,115,111,113,114,112,115,111,56,56,56,56,56,56,56,113,113,113,113,113,113,114,114,114,114,114,114,112,112,112,112,112,112,115,115,115,115,115,115,111,111,111,111,111,111,113,113,113,113,113,113,114,114,114,114,114,114,112,112,112,112,112,112,115,115,115,115,115,115,111,111,111,111,111,111,113,113,113,113,113,113,114,114,114,114,114,114,112,112,112,112,112,112,115,115,115,115,115,115,111,111,111,111,111,111,113,113,113,113,113,113,114,114,114,114,114,114,112,112,112,112,112,112,115,115,115,115,115,115,111,111,111,111,111,111,113,113,113,113,113,113,114,114,114,114,114,114,112,112,112,112,112,112,115,115,115,115,115,115,111,111,111,111,111,111,113,113,113,113,113,113,114,114,114,114,114,114,112,112,112,112,112,112,115,115,115,115,115,115,111,111,111,111,111,111,56,56,115,111,56,113,114,112,115,111,56,113,115,113,115,113,114,112,115,111,113,114,112,115,111,113,114,112,115,111,113,114,112,115,111,56,56,113,114,112,115,111,56,56,113,114,112,115,111,56,113,114,112,115,111,56,56,113,114,112,115,111,56,56,113,56,56,113,114,112,115,111,112,112,111,111,114,112,113,115,113,114,115,111,56,113,114,112,115,111,113,114,112,115,111,113,114,112,115,111,113,115,113,114,112,115,111,56,113,115,113,114,112,115,111,113,114,112,115,111,113,114,112,115,111,114,112,111,113,114,112,115,111,113,114,112,115,111,113,114,112,115,111,115,113,115,113,115,113,114,115,111,113,114,112,115,111,113,114,112,115,111,56,113,114,112,115,111,113,114,112,115,111,56,113,114,112,115,111,113,114,112,112,115,111,113,114,112,115,111,113,114,112,115,111,113,114,112,115,111,113,114,115,111,113,114,112,115,111,113,114,112,115,111,111,113,114,112,115,111,56,113,114,112,115,111,113,114,112,115,111,113,114,112,115,111,113,114,112,115,111,111,56,56,111,56,113,114,112,115,111,56,56,56,113,114,112,115,111,56,56,113,114,112,115,111,56,113,114,112,115,111,56,113,114,112,115,111,56,113,114,112,115,111,113,114,112,115,111,56,113,114,112,115,111,56,111,56,113,114,112,115,111,114,113,115,113,115,325,0,0,325,120,325,120,120,120,0,0,120,325,120,120,120,325,120,120,0,325,120,325,120,0,325,325,0,120,120,325,325,325,120,0,325,120,325,120,325,120,0,325,157,137,136,136,0,157,137,136,157,137,136,0,0,0,0,0,0,157,137,136,0,157,137,157,137,0,136,136,136,130,130,132,132,134,130,132,134,130,157,136,132,132,134,134,137,130,130,138,139,157,136,132,134,137,130,138,139,132,134,130,130,136,132,134,137,130,138,139,136,132,134,137,130,138,139,132,137,134,136,136,139,132,134,130,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,130,136,132,134,137,130,134,136,136,132,132,134,134,137,130,130,138,139,157,136,136,136,136,136,136,136,132,132,132,132,132,132,134,134,134,134,134,134,134,134,134,134,134,134,137,130,138,138,138,139,134,134,130,130,134,130,0,134,130,134,134,134,134,134,134,132,134,137,130,138,139,132,134,130,132,134,130,157,136,132,132,132,132,134,134,134,137,130,130,130,138,139,132,134,134,130,130,132,134,130,130,132,130,134,130,136,130,130,138,139,137,137,137,130,130,130,130,130,130,157,134,134,130,138,139,134,132,134,130,132,132,134,137,130,134,130,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,136,134,130,130,157,157,82,134,130,136,132,134,137,130,138,139,136,132,134,130,0,132,134,130,157,136,132,132,132,134,134,134,134,137,130,130,130,130,130,138,139,157,136,132,134,137,130,138,139,157,136,132,134,137,130,138,139,134,134,134,130,130,130,130,130,130,134,137,137,137,132,134,130,326,326,174,0,0,0,0,0,172,172,60,48,48,48,177,0,172,0,0,172,167,172,48,0,0,0,0,0,0,0,0,0,172,172,172,172,48,167,167,167,167,172,167,173,172,167,173,60,48,168,172,167,173,60,48,60,48,60,48,60,48,60,60,48,48,60,48,60,48,172,167,173,327,172,167,170,169,173,60,48,327,172,167,170,169,169,173,60,48,169,172,167,173,172,167,172,167,173,170,169,172,167,173,60,48,172,167,173,60,48,172,167,173,60,48,172,167,173,172,167,173,172,167,173,172,167,173,172,167,173,172,167,173,172,167,173,172,167,173,172,167,173,172,167,173,172,167,173,60,48,167,172,167,173,167,174,169,173,60,48,175,175,177,177,172,167,173,172,167,173,172,167,173,172,167,173,172,167,173,172,167,173,172,167,173,172,167,173,172,167,173,172,167,173,60,48,177,175,175,172,167,173,60,48,172,167,173,60,48,60,48,167,172,167,173,172,167,170,169,173,60,60,60,60,60,48,48,48,48,48,172,167,173,327,172,167,170,169,173,60,60,48,60,48,60,60,48,48,60,48,172,172,172,172,172,172,167,167,167,167,167,167,172,172,172,172,172,172,167,167,167,167,167,167,172,172,172,172,172,172,167,167,167,167,167,167,172,172,172,172,172,172,167,167,167,167,167,167,172,172,172,172,172,172,167,167,167,167,167,167,172,172,172,172,172,172,167,167,167,167,167,167,60,48,60,48,60,48,172,167,173,60,48,172,167,173,172,167,173,172,167,173,172,167,173,60,48,173,328,327,169,174,174,60,48,174,174,172,167,173,60,48,60,48,327,172,167,170,169,173,60,48,172,167,173,60,48,60,48,172,167,173,60,48,60,48,60,48,60,48,172,167,173,181,181,182,182,170,174,174,60,48,172,167,173,172,167,173,172,167,173,172,167,173,60,48,183,185,172,167,173,185,185,172,167,173,183,183,172,167,173,168,168,0,172,167,173,172,167,173,172,167,173,170,169,172,167,173,172,167,173,182,182,177,177,60,48,172,167,173,172,167,173,60,48,172,167,173,172,167,173,172,167,173,172,167,173,172,167,173,172,167,173,172,167,173,0,168,172,167,173,60,48,172,167,173,172,167,173,172,167,173,172,167,173,60,48,60,48,167,181,181,60,48,172,167,173,60,48,173,60,48,60,48,172,167,173,60,48,60,48,327,172,167,170,169,173,60,48,172,167,173,60,48,169,327,172,167,170,169,173,60,48,172,167,173,327,172,167,170,169,173,60,48,172,167,173,60,48,167,60,48,172,167,173,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,57,207,207,0,208,58,0,0,59,0,0,207,208,94,228,0,0,0,208,207,206,0,0,0,0,57,0,0,0,202,203,189,204,191,207,0,0,0,206,211,57,57,57,57,57,57,55,55,59,57,58,57,57,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,207,0,0,0,0,0,0,0,0,0,0,0,0,0,208,191,189,191,204,190,191,191,188,190,0,0,208,0,207,188,189,190,191,188,189,190,191,188,189,190,191,188,189,190,191,84,84,84,200,201,202,203,188,189,190,204,205,191,200,201,202,203,188,189,190,204,205,191,57,55,58,59,193,84,195,193,193,197,197,200,201,202,203,188,189,190,204,205,191,57,55,58,59,57,55,58,59,57,55,58,59,57,55,58,59,57,57,55,55,58,58,59,59,57,55,58,59,57,55,58,59,200,201,202,203,188,189,190,204,205,191,222,200,201,202,203,188,189,190,204,205,191,84,195,206,207,208,193,57,55,58,59,222,200,201,202,203,188,189,190,204,205,191,84,195,206,207,208,193,57,55,58,59,198,198,200,201,202,203,188,189,190,204,205,191,200,201,202,203,188,189,190,204,205,191,199,199,200,201,202,203,188,189,190,204,205,191,84,195,206,207,208,193,57,55,58,59,200,201,202,203,188,189,190,204,205,191,84,195,206,207,208,193,57,55,58,59,200,201,202,203,188,189,190,204,205,191,84,195,206,207,208,57,55,58,59,200,201,202,203,188,189,190,204,205,191,198,198,198,198,199,199,200,201,202,203,188,189,190,204,205,191,200,201,202,203,188,189,190,204,205,191,209,209,198,198,200,201,202,203,188,189,190,204,205,191,200,201,202,203,188,189,190,204,205,191,200,201,202,203,188,189,190,204,205,191,190,190,209,209,190,190,209,209,210,210,200,201,202,203,188,189,190,204,205,191,200,201,202,203,188,189,190,204,205,191,200,201,202,203,188,189,190,204,205,191,210,210,210,210,197,197,190,210,210,198,198,198,198,188,190,188,190,200,201,202,203,188,189,190,204,205,191,200,201,202,203,188,189,190,204,205,191,57,55,58,59,84,84,200,201,202,203,188,189,190,204,205,191,188,189,190,191,84,193,190,190,190,57,55,58,59,209,209,205,200,201,202,203,188,189,190,204,205,191,200,201,202,203,188,189,190,204,205,191,200,201,202,203,188,189,190,204,205,191,200,201,202,203,188,189,190,204,205,191,200,201,202,203,188,189,190,204,205,191,200,201,202,203,188,189,190,204,205,191,200,201,202,203,188,189,190,204,205,191,200,201,202,203,188,189,190,204,205,191,200,201,202,203,188,189,190,204,205,191,200,201,202,203,188,189,190,204,205,191,57,55,58,59,200,201,202,203,188,189,190,204,205,191,84,195,206,207,208,57,55,58,59,84,210,210,210,210,210,210,200,201,202,203,188,189,190,204,205,191,84,195,206,207,208,57,55,58,59,188,84,57,55,58,59,0,190,199,199,200,201,202,203,188,189,190,204,205,191,200,201,202,203,188,189,190,190,204,204,205,205,191,84,195,206,206,207,208,57,57,57,57,57,55,55,55,55,55,58,58,58,58,58,59,59,59,59,59,200,201,202,203,188,189,190,204,205,191,222,200,201,202,203,188,189,190,204,205,191,84,195,206,206,207,207,208,208,193,57,57,57,57,57,57,55,55,55,58,58,58,59,59,59,57,55,58,59,57,57,55,55,58,58,59,59,57,55,58,59,201,188,190,200,200,200,200,200,200,201,201,201,201,201,201,202,202,202,202,202,202,203,203,203,203,203,203,188,188,188,188,188,188,189,189,189,189,189,189,190,190,190,190,190,190,204,204,204,204,204,204,205,205,205,205,205,205,191,191,191,191,191,191,84,84,84,84,84,84,195,195,195,195,195,195,200,200,200,200,200,200,201,201,201,201,201,201,202,202,202,202,202,202,203,203,203,203,203,203,188,188,188,188,188,188,189,189,189,189,189,189,190,190,190,190,190,190,204,204,204,204,204,204,205,205,205,205,205,205,191,191,191,191,191,191,84,84,84,84,84,84,195,195,195,195,195,195,200,200,200,200,200,200,201,201,201,201,201,201,202,202,202,202,202,202,203,203,203,203,203,203,188,188,188,188,188,188,189,189,189,189,189,189,190,190,190,190,190,190,204,204,204,204,204,204,205,205,205,205,205,205,191,191,191,191,191,191,84,84,84,84,84,84,195,195,195,195,195,195,200,200,200,200,200,200,201,201,201,201,201,201,202,202,202,202,202,202,203,203,203,203,203,203,188,188,188,188,188,188,189,189,189,189,189,189,190,190,190,190,190,190,204,204,204,204,204,204,205,205,205,205,205,205,191,191,191,191,191,191,84,84,84,84,84,84,195,195,195,195,195,195,200,200,200,200,200,200,201,201,201,201,201,201,202,202,202,202,202,202,203,203,203,203,203,203,188,188,188,188,188,188,189,189,189,189,189,189,190,190,190,190,190,190,204,204,204,204,204,204,205,205,205,205,205,205,191,191,191,191,191,191,84,84,84,84,84,84,195,195,195,195,195,195,200,200,200,200,200,200,201,201,201,201,201,201,202,202,202,202,202,202,203,203,203,203,203,203,188,188,188,188,188,188,189,189,189,189,189,189,190,190,190,190,190,190,204,204,204,204,204,204,205,205,205,205,205,205,191,191,191,191,191,191,84,84,84,84,84,84,195,195,195,195,195,195,84,195,84,57,55,58,59,57,55,58,59,94,206,206,207,208,57,55,58,59,200,201,202,203,188,189,190,204,205,191,84,84,195,206,207,208,57,55,58,59,215,200,201,202,188,190,204,205,215,200,201,202,188,190,204,205,197,197,200,201,202,203,188,189,190,204,205,191,200,201,202,203,188,189,190,204,205,191,200,201,202,203,188,189,190,204,205,191,200,201,202,203,188,189,190,204,205,191,84,195,206,207,208,57,55,58,59,84,57,55,58,59,200,201,202,203,188,189,190,204,205,191,198,198,57,55,58,59,57,55,58,59,222,200,201,202,203,188,189,190,204,205,191,84,195,195,195,206,207,208,193,193,193,193,193,57,55,58,59,200,201,202,203,188,189,190,204,205,191,84,195,206,207,208,57,55,58,59,190,190,84,84,57,55,58,59,200,201,202,203,188,189,190,204,205,191,57,55,58,59,57,55,58,59,84,84,57,55,58,59,57,55,58,59,189,84,84,195,195,195,84,188,200,201,202,203,188,189,190,204,205,191,190,190,84,190,190,209,209,190,190,190,209,209,190,206,215,200,201,202,188,190,204,205,188,84,84,84,84,199,199,210,210,84,84,84,84,205,57,55,58,59,200,201,202,203,188,189,190,204,205,191,200,201,202,203,188,189,190,204,205,191,200,201,202,203,188,189,190,204,205,191,215,200,201,202,188,190,204,205,210,210,200,201,202,203,188,189,190,204,205,191,84,195,206,207,208,57,55,58,59,215,200,201,202,188,190,204,205,200,201,202,203,188,189,190,205,191,200,201,202,203,188,189,190,205,191,200,201,202,203,188,189,190,204,205,191,84,195,206,207,208,84,197,197,211,222,223,223,205,190,190,210,210,200,201,202,203,188,189,190,204,205,191,200,201,202,203,188,189,190,204,205,191,200,201,202,203,188,189,190,204,205,191,190,215,200,201,202,188,190,204,205,215,200,201,202,188,190,204,205,225,200,201,202,203,188,189,190,204,205,191,200,201,202,203,188,189,190,204,205,191,200,201,202,203,188,189,190,204,205,191,84,57,55,58,59,200,201,202,203,188,189,190,204,205,191,197,197,200,201,202,203,188,189,190,204,205,191,190,200,199,199,84,57,55,58,59,200,201,202,203,188,189,190,204,205,191,210,210,200,201,202,203,188,189,190,204,205,191,200,201,202,203,188,189,190,204,205,191,200,201,202,203,188,189,190,204,205,191,200,201,202,203,188,189,190,204,205,191,225,200,201,202,203,188,189,190,204,205,191,200,201,202,203,188,189,190,204,205,191,200,201,202,203,188,189,190,204,205,191,84,226,228,188,190,188,190,200,201,202,203,188,189,190,204,205,191,84,195,206,207,208,57,55,58,59,200,201,202,203,188,189,190,204,205,191,200,201,202,203,188,189,190,204,205,191,200,201,202,203,188,189,190,204,205,191,200,201,202,203,188,189,190,204,205,191,57,55,58,59,57,55,58,59,188,189,190,191,57,55,58,59,200,201,202,203,188,189,190,204,205,191,84,195,206,207,208,193,57,55,58,59,84,206,207,208,57,55,58,59,190,204,205,206,206,207,208,57,55,58,59,200,201,202,203,188,189,190,204,205,191,84,195,206,207,208,57,55,58,59,57,55,58,59,222,200,201,202,203,188,189,190,204,205,191,84,195,206,207,208,193,57,55,58,59,200,201,202,203,188,189,190,204,205,191,84,195,206,207,208,57,55,58,59,222,200,201,202,203,188,189,190,204,205,191,84,195,206,207,208,193,57,55,58,59,200,201,202,203,188,189,190,204,205,191,222,200,201,202,203,188,189,190,204,205,191,84,195,206,207,208,193,57,55,58,59,200,201,202,203,188,189,190,204,205,191,57,55,58,59,84,84,188,189,190,191,84,84,200,195,195,206,207,208,57,55,58,59,84,200,201,202,203,188,189,190,204,205,191,215,200,201,202,188,190,204,205,215,200,201,202,188,190,204,205,220,190,205,234,0,0,0,232,231,235,235,232,232,0,0,0,0,232,232,232,234,235,231,232,0,0,235,235,231,231,75,75,75,75,218,75,233,75,75,234,235,218,75,234,235,234,235,234,235,234,235,234,234,235,235,234,235,234,235,75,75,218,231,232,212,233,234,235,75,218,231,232,212,233,234,235,75,75,75,218,231,232,212,233,234,235,75,218,231,232,212,233,234,235,75,218,231,232,233,234,235,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,212,234,235,75,75,75,231,212,231,232,233,234,235,75,75,75,75,75,75,75,75,75,75,234,235,75,218,231,232,234,235,75,218,231,232,234,235,212,234,235,240,75,212,75,75,75,218,231,231,232,232,212,233,234,234,234,234,234,235,235,235,235,235,75,75,218,218,231,232,212,233,234,235,234,235,234,234,235,235,234,235,75,75,75,75,75,75,218,218,218,218,218,218,75,75,75,75,75,75,218,218,218,218,218,218,75,75,75,75,75,75,218,218,218,218,218,218,75,75,75,75,75,75,218,218,218,218,218,218,75,75,75,75,75,75,218,218,218,218,218,218,75,75,75,75,75,75,218,218,218,218,218,218,218,212,234,235,234,235,231,232,231,232,234,235,231,232,233,75,218,231,232,234,235,75,75,233,75,75,218,231,232,234,235,233,233,212,234,235,75,75,234,235,234,235,75,218,231,232,232,212,233,234,235,75,218,231,232,234,235,212,75,234,235,75,234,235,234,235,75,234,235,234,235,75,240,75,75,212,75,218,233,218,212,218,218,75,231,75,218,212,232,234,235,75,75,75,75,75,218,231,232,234,235,75,75,75,218,231,232,75,75,75,75,75,234,235,75,75,75,231,232,233,234,235,75,75,75,75,75,75,75,75,218,231,232,234,235,231,232,233,75,75,75,75,234,235,234,235,233,232,234,235,75,218,231,232,212,233,234,235,231,232,234,235,231,232,231,232,234,235,75,218,231,232,234,235,231,232,233,234,235,75,218,231,232,232,212,233,234,235,75,218,231,232,234,235,75,218,231,232,212,233,234,235,75,233,75,218,231,232,212,233,234,235,75,234,235,218,233,231,232,232,234,235,233,75,212,53,250,250,53,246,245,248,116,249,242,243,250,248,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,241,245,241,245,244,244,246,246,246,246,246,245,248,116,249,242,243,246,245,248,116,249,242,243,53,247,247,247,247,246,245,248,116,249,242,243,53,53,53,53,53,53,53,53,246,245,248,116,249,242,243,246,245,248,116,249,242,243,250,53,246,245,248,116,249,242,243,250,53,246,245,248,116,249,242,243,246,245,248,116,249,242,243,246,245,248,116,249,242,243,250,53,246,245,248,116,249,242,243,250,53,246,245,248,116,249,242,243,250,53,247,247,246,245,248,116,249,242,243,251,251,246,245,248,116,249,242,243,246,245,248,116,249,242,243,252,252,246,245,248,116,249,242,243,247,247,253,253,246,245,248,116,249,242,243,246,245,248,116,249,242,243,246,245,248,116,249,242,243,246,245,248,116,249,242,243,246,245,248,116,249,242,243,247,247,246,245,248,116,249,242,243,246,245,248,116,249,242,243,254,254,53,246,245,248,116,249,242,243,246,53,246,245,248,116,249,242,243,246,245,248,116,249,242,243,246,245,248,116,249,242,243,246,245,248,116,249,242,243,246,245,248,116,249,242,243,246,245,248,116,249,242,243,246,245,248,116,249,242,243,246,245,248,116,249,242,243,246,245,248,116,249,242,243,246,245,248,116,249,242,243,53,246,245,248,116,249,242,243,250,53,246,245,248,116,249,242,243,250,53,53,249,246,245,248,116,249,242,243,246,245,248,116,249,242,243,250,53,53,53,53,53,246,245,248,116,249,242,243,246,245,248,116,249,242,243,250,53,53,53,53,53,53,246,246,246,246,246,246,245,245,245,245,245,245,248,248,248,248,248,248,116,116,116,116,116,116,249,249,249,249,249,249,242,242,242,242,242,242,243,243,243,243,243,243,246,246,246,246,246,246,245,245,245,245,245,245,248,248,248,248,248,248,116,116,116,116,116,116,249,249,249,249,249,249,242,242,242,242,242,242,243,243,243,243,243,243,246,246,246,246,246,246,245,245,245,245,245,245,248,248,248,248,248,248,116,116,116,116,116,116,249,249,249,249,249,249,242,242,242,242,242,242,243,243,243,243,243,243,246,246,246,246,246,246,245,245,245,245,245,245,248,248,248,248,248,248,116,116,116,116,116,116,249,249,249,249,249,249,242,242,242,242,242,242,243,243,243,243,243,243,246,246,246,246,246,246,245,245,245,245,245,245,248,248,248,248,248,248,116,116,116,116,116,116,249,249,249,249,249,249,242,242,242,242,242,242,243,243,243,243,243,243,246,246,246,246,246,246,245,245,245,245,245,245,248,248,248,248,248,248,116,116,116,116,116,116,249,249,249,249,249,249,242,242,242,242,242,242,243,243,243,243,243,243,53,53,250,53,246,245,248,116,249,242,243,250,53,246,245,248,116,249,242,243,246,245,248,116,249,242,243,246,246,245,248,116,249,242,243,246,245,248,116,249,242,243,250,53,247,247,253,253,53,246,245,248,116,249,242,243,53,53,246,245,248,116,249,242,243,250,53,246,245,248,116,249,242,243,250,53,53,246,245,248,116,249,242,243,53,247,247,53,53,53,246,245,248,116,249,242,243,246,254,254,249,53,246,245,248,116,249,242,243,246,245,248,116,249,242,243,246,245,248,116,249,242,243,253,253,246,245,248,116,249,242,243,250,53,246,249,246,249,246,245,248,116,249,242,243,250,244,244,251,251,251,251,247,247,252,252,253,253,247,247,246,245,248,116,249,242,243,246,245,248,116,249,242,243,246,245,248,116,249,242,243,246,245,248,116,249,242,243,246,245,248,116,249,242,243,247,247,249,252,252,253,253,255,255,247,247,53,246,245,248,116,249,242,243,247,247,246,245,248,116,249,242,243,53,246,245,248,116,249,242,243,256,248,256,248,247,247,246,245,248,116,249,242,243,246,245,248,116,249,242,243,246,245,248,116,249,242,243,246,245,248,116,249,242,243,246,245,248,116,249,242,243,246,245,248,116,249,242,243,246,245,248,116,249,242,243,250,53,246,245,248,116,249,242,243,246,245,248,116,249,242,243,246,245,248,116,249,242,243,246,245,248,116,249,242,243,53,53,246,53,246,245,248,116,249,242,243,250,53,250,53,250,53,246,245,248,116,249,242,243,250,53,53,246,245,248,116,249,242,243,250,53,246,245,248,116,249,242,243,250,53,246,245,248,116,249,242,243,250,53,246,245,248,116,249,242,243,246,245,248,116,249,242,243,250,53,246,245,248,116,249,242,243,53,246,250,53,246,245,248,116,249,242,243,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,286,286,286,286,286,286,286,286,0,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,281,286,286,286,286,286,286,286,286,286,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,287,278,279,279,279,279,279,278,279,279,279,278,279,278,279,279,278,279,279,279,278,279,279,279,278,279,281,86,283,86,86,285,86,86,86,280,278,291,86,279,295,286,291,86,295,300,280,278,291,86,279,295,229,285,299,298,297,283,286,300,280,278,291,86,279,295,229,285,299,298,297,283,286,297,297,86,295,299,86,86,280,278,291,86,279,295,229,285,298,283,286,280,278,291,86,279,295,229,285,298,283,286,280,278,291,86,279,295,229,285,283,286,298,86,280,86,280,86,86,298,298,86,295,278,291,279,295,280,278,291,86,279,295,229,285,286,280,86,280,278,291,86,279,295,229,285,283,286,279,86,295,0,86,86,229,229,229,86,291,86,295,300,280,280,278,291,86,279,295,229,285,299,298,297,283,286,86,295,300,280,278,291,86,279,295,229,285,299,298,297,283,283,286,280,280,280,280,280,280,278,278,278,278,278,278,291,291,291,291,291,291,86,86,86,86,86,86,279,279,279,279,279,279,295,295,295,295,295,295,286,286,286,286,286,286,280,280,280,280,280,280,278,278,278,278,278,278,291,291,291,291,291,291,86,86,86,86,86,86,279,279,279,279,279,279,295,295,295,295,295,295,286,286,286,286,286,286,280,280,280,280,280,280,278,278,278,278,278,278,291,291,291,291,291,291,86,86,86,86,86,86,279,279,279,279,279,279,295,295,295,295,295,295,286,286,286,286,286,286,280,280,280,280,280,280,278,278,278,278,278,278,291,291,291,291,291,291,86,86,86,86,86,86,279,279,279,279,279,279,295,295,295,295,295,295,286,286,286,286,286,286,280,280,280,280,280,280,278,278,278,278,278,278,291,291,291,291,291,291,86,86,86,86,86,86,279,279,279,279,279,279,295,295,295,295,295,295,286,286,286,286,286,286,280,280,280,280,280,280,278,278,278,278,278,278,291,291,291,291,291,291,86,86,86,86,86,86,279,279,279,279,279,279,295,295,295,295,295,295,286,286,286,286,286,286,280,278,291,86,279,295,286,286,286,286,86,279,297,229,286,299,297,280,280,285,280,278,291,86,279,295,286,299,298,297,280,278,291,86,279,295,229,285,286,86,295,298,298,291,86,295,300,280,278,291,86,279,295,229,285,299,298,297,283,286,280,278,291,86,279,295,286,229,285,286,299,298,297,297,280,86,280,86,86,86,86,86,86,280,86,86,286,86,286,280,86,86,86,280,291,280,86,286,86,86,86,86,280,86,86,280,86,86,291,0,86,295,299,285,286,300,278,291,279,280,86,86,279,86,86,280,86,86,86,280,86,280,86,86,280,278,291,279,295,86,86,279,280,86,279,295,86,86,285,286,286,280,278,291,86,279,295,286,299,286,280,280,280,280,285,280,278,291,86,279,295,229,285,283,286,295,86,295,298,86,298,86,295,285,86,86,299,86,86,86,86,86,86,86,86,86,86,86,285,280,86,86,86,86,86,86,285,285,86,86,280,278,291,86,279,295,229,285,286,291,86,295,86,86,280,278,291,86,279,295,229,285,298,283,286,86,286,280,280,280,278,291,86,279,295,286,300,280,278,291,86,86,279,295,229,285,299,298,297,283,283,286,286,280,278,291,86,279,295,285,286,229,285,286,300,280,278,291,86,86,279,295,229,285,299,298,297,283,286,300,280,278,291,86,279,295,229,285,299,298,297,283,286,229,229,285,285,285,229,286,86,299,298,297,86,86,86,317,317,0,178,317,0,0,0,0,0,0,0,316,178,316,178,314,314,117,316,178,316,178,316,178,117,317,49,216,316,178,117,317,49,216,316,178,316,178,316,316,178,117,317,316,178,117,317,316,178,117,317,49,216,316,178,316,178,316,178,314,314,316,178,316,178,316,178,316,178,316,178,316,178,316,178,316,178,316,178,49,216,316,178,316,178,316,178,316,178,316,178,316,178,316,178,316,178,316,178,316,178,117,316,178,117,317,316,178,117,317,49,216,316,178,178,316,178,117,317,49,216,316,178,316,178,117,317,49,216,216,316,316,316,316,316,316,178,178,178,178,178,178,117,117,117,117,117,117,316,316,316,316,316,316,178,178,178,178,178,178,117,117,117,117,117,117,316,316,316,316,316,316,178,178,178,178,178,178,117,117,117,117,117,117,316,316,316,316,316,316,178,178,178,178,178,178,117,117,117,117,117,117,316,316,316,316,316,316,178,178,178,178,178,178,117,117,117,117,117,117,316,316,316,316,316,316,178,178,178,178,178,178,117,117,117,117,117,117,117,117,216,317,316,178,117,317,314,314,316,178,316,178,316,178,316,178,117,317,49,216,49,216,316,178,316,178,117,317,49,216,316,178,117,317,49,216,117,49,216,49,316,178,314,314,316,178,316,316,316,316,216,178,117,117,216,316,178,316,178,316,178,316,178,117,317,316,178,316,178,316,178,117,317,49,216,316,178,316,178,316,178,316,178,316,178,316,178,117,216,323,178,316,178,316,316,178,316,178,316,178,316,178,316,178,316,178,316,178,314,314,316,178,117,317,316,178,316,178,316,178,316,178,316,178,117,317,317,317,316,178,117,317,316,178,117,317,49,216,316,178,117,317,316,178,117,317,49,216,316,178,316,178,117,317,49,216,316,178,49,216,117,317,316,178,117,49,216,117],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],3],[[1,2],3],[[1,4,[5,[-1]],-2],3,[[7,[6]]],[[10,[[9,[3,8]]]]]],[[1,4,[5,[-1]],-2],3,[[7,[6]]],[[10,[[9,[3,8]]]]]],[[1,4,[5,[-1]],11],3,[[7,[6]]]],[[1,4,[5,[-1]],11],3,[[7,[6]]]],[[12,-1,13,14,4],3,[]],[[12,-1,13,14,4],3,[]],[[1,4],[[17,[[16,[15]]]]]],[[1,4],[[17,[[16,[15]]]]]],[[12,-1,13,14,4],14,[]],[[12,-1,13,14,4],14,[]],[1,4],[1,4],[[-1,-2],[[18,[-3]]],[],[10,19],[]],[[-1,-2],[[18,[-3]]],[],[10,19],[]],[[-1,-2],[[18,[-3]]],[],[10,19],[]],[[-1,-2],[[18,[-3]]],[],[10,19],[]],[[-1,-2],[[18,[-3]]],[],10,[]],[[-1,-2],[[18,[-3]]],[],10,[]],[[-1,-2],[[18,[-3]]],[],10,[]],[[-1,-2],[[18,[-3]]],[],10,[]],[[],20],[[-1,2,-2,2],21,[],22],[[-1,2,-2,2],21,[],22],[[-1,2,-2,2],21,[],22],[[-1,2,-2,2],21,[],22],[[20,20],20],[[20,20],3],[[20,20],20],[[20,20],3],[4,14],[20,14],[20,14],[[20,20],20],[[20,20],3],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[24,[-2]]],[],25],[-1,[[24,[-2]]],[],25],[-1,[[24,[-2]]],[],25],[-1,[[24,[-2]]],[],25],[[[24,[26]]],3],[-1,[[5,[[24,[-2]]]]],[],25],[-1,[[5,[[24,[-2]]]]],[],25],[-1,[[5,[[24,[-2]]]]],[],25],[-1,[[5,[[24,[-2]]]]],[],25],[27,27],[28,28],[13,13],[26,26],[4,4],[20,20],[27,[[5,[27]]]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[27,27],29],[[28,28],29],[[13,13],29],[[26,26],29],[[4,4],29],[20,20],[[],30],[27,31],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[1,-1],23,[[35,[1]]]],[[1,-1],23,[[35,[1]]]],[[-1,2,31,37],23,[]],[[-1,2,31,37],23,[]],[[-1,2,31,37],23,[]],[[-1,2,31,37],23,[]],[[-1,38,[5,[39]],31,37],23,[]],[[-1,38,[5,[39]],31,37],23,[]],[[-1,38,[5,[39]],31,37],23,[]],[[-1,38,[5,[39]],31,37],23,[]],[[27,-1],23,[[35,[27]]]],[[27,-1],23,[[35,[27]]]],[27,[[0,[[15,[],[[34,[[9,[3,8]]]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]],19,36]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]],19,36]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]],19,36]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]],19,36]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[27,-1],23,[[35,[27]]]],[[1,-1],23,[[35,[1]]]],[[1,-1],23,[[35,[1]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[20,20],31],[1,[[5,[27]]]],[1,[[5,[27]]]],[[-1,2],[[5,[[41,[-2]]]]],[],[]],[[-1,2],[[5,[[41,[-2]]]]],[],[]],[[-1,2],[[5,[[41,[-2]]]]],[],[]],[[-1,2],[[5,[[41,[-2]]]]],[],[]],[[],30],[[12,-1,4],3,[]],[[12,-1,4],3,[]],[[1,4],3],[[1,4],3],[[],4],[27,42],[[20,20],20],[27,3],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[[-1,38,[33,[44]]],-2,[],45],[[-1,38,[33,[44]]],-2,[],45],[[-1,38,[33,[44]]],-2,[],45],[[-1,38,[33,[44]]],-2,[],45],[[-1,2,[33,[44]]],-2,[],45],[[-1,2,[33,[44]]],-2,[],45],[[-1,2,[33,[44]]],-2,[],45],[[-1,2,[33,[44]]],-2,[],45],[[-1,2,39,[33,[44]]],-2,[],45],[[-1,2,39,[33,[44]]],-2,[],45],[[-1,2,39,[33,[44]]],-2,[],45],[[-1,2,39,[33,[44]]],-2,[],45],[[-1,2,39,[33,[32]]],[[5,[32]]],[]],[[-1,2,39,[33,[32]]],[[5,[32]]],[]],[[-1,2,39,[33,[32]]],[[5,[32]]],[]],[[-1,2,39,[33,[32]]],[[5,[32]]],[]],[[-1,2,[33,[32]]],[[5,[32]]],[]],[[-1,2,[33,[32]]],[[5,[32]]],[]],[[-1,2,[33,[32]]],[[5,[32]]],[]],[[-1,2,[33,[32]]],[[5,[32]]],[]],[[-1,38,39,[33,[44]]],-2,[],45],[[-1,38,39,[33,[44]]],-2,[],45],[[-1,38,39,[33,[44]]],-2,[],45],[[-1,38,39,[33,[44]]],-2,[],45],[[-1,38,39,[33,[32]]],[[5,[32]]],[]],[[-1,38,39,[33,[32]]],[[5,[32]]],[]],[[-1,38,39,[33,[32]]],[[5,[32]]],[]],[[-1,38,39,[33,[32]]],[[5,[32]]],[]],[[-1,38,[33,[32]]],[[5,[32]]],[]],[[-1,38,[33,[32]]],[[5,[32]]],[]],[[-1,38,[33,[32]]],[[5,[32]]],[]],[[-1,38,[33,[32]]],[[5,[32]]],[]],[[],20],[[],3],[[],3],[[],3],[[],3],[[],3],[[27,-1],31,22],[[28,-1],31,22],[[13,-1],31,22],[[26,-1],31,22],[[4,4],31],[[20,20],31],[[20,-1],3,[[47,[],[[46,[20]]]]]],[[48,2,[5,[2]]],[[5,[30]]]],[[48,[5,[2]],[5,[2]]],[[49,[30]]]],[[-1,2],[[5,[40]]],[]],[[-1,2],[[5,[40]]],[]],[[-1,2],[[5,[40]]],[]],[[-1,2],[[5,[40]]],[]],[[27,50],51],[[28,50],51],[[13,50],51],[[26,50],51],[[4,50],51],[[20,50],51],[[20,50],51],[[20,50],51],[[20,50],51],[[20,50],51],[-1,52,[]],[-1,52,[]],[-1,52,[]],[-1,52,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[53,4],[54,4],[-1,-1,[]],[14,4],[55,4],[56,4],[57,4],[58,4],[59,4],[60,4],[-1,-1,[]],[14,[[5,[20]]]],[14,20],[14,20],[14,20],[14,4],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[-1,20,[[47,[],[[46,[20]]]]]],[2,[[5,[20]]]],[32,20],[27,[[5,[42]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,2],[[5,[30]]],[]],[[-1,2],[[5,[66]]],[]],[[-1,-3,-5],23,[],67,[[69,[[68,[-2]]]]],70,[[35,[-4],[[34,[]]]]]],[[-1,-3,-5],23,[],67,[[69,[[68,[-2]]]]],70,[[35,[-4],[[34,[]]]]]],[[-1,-3,-5],23,[],67,[[69,[[68,[-2]]]]],70,[[35,[-4],[[34,[]]]]]],[[-1,-3,-5],23,[],67,[[69,[[68,[-2]]]]],70,[[35,[-4],[[34,[]]]]]],[[-1,68,11],[[9,[23,71]]],[]],[[-1,68,11],[[9,[23,71]]],[]],[[-1,68,11],[[9,[23,71]]],[]],[[-1,68,11],[[9,[23,71]]],[]],[[-1,2,[5,[72]]],31,[]],[[-1,2,[5,[72]]],31,[]],[[-1,2,[5,[72]]],31,[]],[[-1,2,[5,[72]]],31,[]],[[27,-1],3,73],[[28,-1],3,73],[[13,-1],3,73],[[26,-1],3,73],[[4,-1],3,73],[[20,-1],3,73],[[27,-1],74,[[35,[],[[34,[31]]]]]],[[27,11],74],[[],3],[20,3],[[20,20],3],[[27,75],3],[-1,[[5,[[76,[-2]]]]],[],77],[-1,[[5,[[76,[-2]]]]],[],77],[-1,[[5,[[76,[-2]]]]],[],77],[-1,[[5,[[76,[-2]]]]],[],77],[[20,20],20],[[20,20],31],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[4,14],[-1,-2,[],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[4,-1,[]],[20,-1,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[20,31],[27,31],[20,31],[20,[[78,[20]]]],[20,[[79,[20]]]],[[],30],[[],30],[-1,[[80,[40]]],[]],[-1,[[80,[40]]],[]],[-1,[[80,[40]]],[]],[-1,[[80,[40]]],[]],[[27,2,2,[5,[81]]],[[9,[3,8]]]],[[27,2,-1],[[9,[3,8]]],82],[[],30],[-1,83,[]],[[[5,[42]],[5,[84]]],27],[20,20],[[-1,2],3,[]],[[-1,2],3,[]],[[-1,2],3,[]],[[-1,2],3,[]],[[-1,40],3,[]],[[-1,40],3,[]],[[-1,40],3,[]],[[-1,40],3,[]],[-1,[[24,[85]]],[]],[-1,[[24,[85]]],[]],[-1,[[24,[85]]],[]],[-1,[[24,[85]]],[]],[-1,[[9,[14,8]]],[]],[27,14],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[-1,[5,[2]],[5,[86]]],[[17,[[16,[15]]]]],[]],[[87,-1,13,14,4],3,[]],[[87,-1,13,14,4],14,[]],[87,88],[[[24,[-1]]],3,[]],[[[24,[-1]]],3,[]],[[[24,[-1]]],3,[]],[[[24,[-1]]],3,[]],[[87,-1,4],3,[]],[[[89,[-1]]],3,90],[[[89,[-1]]],3,90],[[[89,[-1]]],3,90],[[[89,[-1]]],3,90],[[87,-1],4,[]],[[27,-1],[[5,[29]]],22],[[28,-1],[[5,[29]]],22],[[13,-1],[[5,[29]]],22],[[26,-1],[[5,[29]]],22],[[4,4],[[5,[29]]]],[27,[[5,[84]]]],[[-1,2],-2,[],91],[[-1,2],-2,[],91],[[-1,2],-2,[],91],[[-1,2],-2,[],91],[[-1,2],[[5,[72]]],[]],[[-1,2],[[5,[72]]],[]],[[-1,2],[[5,[72]]],[]],[[-1,2],[[5,[72]]],[]],[[-1,2],32,[]],[[-1,2],32,[]],[[-1,2],32,[]],[[-1,2],32,[]],[27,[[41,[92]]]],[27,93],[[-1,2],[[9,[-2,8]]],[],94],[[-1,2],[[9,[[5,[-2]],8]]],[],94],[-1,95,[]],[[-1,39],[[5,[[41,[-2]]]]],[],[]],[[-1,39],[[5,[[41,[-2]]]]],[],[]],[[-1,39],[[5,[[41,[-2]]]]],[],[]],[[-1,39],[[5,[[41,[-2]]]]],[],[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[27,14],[27,[[5,[96]]]],[27,[[5,[96]]]],[27,[[5,[84]]]],[27,[[5,[96]]]],[27,[[5,[96]]]],[[20,20],3],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[13,4],[[-1,8],3,[]],[[[5,[84]],-1],3,[[10,[42,97,27]]]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[[20,20,31],3],[[-1,2,-2],3,[],[]],[[-1,2,-2],3,[],[]],[[-1,2,-2],3,[],[]],[[-1,2,-2],3,[],[]],[[-1,[33,[[3,[2,44]]]]],3,[]],[[-1,[33,[[3,[2,44]]]]],3,[]],[[-1,[33,[[3,[2,44]]]]],3,[]],[[-1,[33,[[3,[2,44]]]]],3,[]],[[-1,[33,[[3,[2,32]]]]],3,[]],[[-1,[33,[[3,[2,32]]]]],3,[]],[[-1,[33,[[3,[2,32]]]]],3,[]],[[-1,[33,[[3,[2,32]]]]],3,[]],[[-1,2,-2],3,[],[[69,[32]]]],[[-1,2,-2],3,[],[[69,[32]]]],[[-1,2,-2],3,[],[[69,[32]]]],[[-1,2,-2],3,[],[[69,[32]]]],[[-1,2,32],3,[]],[[-1,2,32],3,[]],[[-1,2,32],3,[]],[[-1,2,32],3,[]],[[-1,95],3,[]],[[-1,39,-2],3,[],[]],[[-1,39,-2],3,[],[]],[[-1,39,-2],3,[],[]],[[-1,39,-2],3,[],[]],[[-1,-3],[[98,[-4]]],[],67,[[69,[[68,[-2]]]]],70],[[-1,-3],[[98,[-4]]],[],67,[[69,[[68,[-2]]]]],70],[[-1,-3],[[98,[-4]]],[],67,[[69,[[68,[-2]]]]],70],[[-1,-3],[[98,[-4]]],[],67,[[69,[[68,[-2]]]]],70],[[],72],[[],72],[[],72],[[],72],[[],72],[[-1,2],[[5,[-2]]],[],[]],[[-1,2],[[5,[-2]]],[],[]],[[-1,2],[[5,[-2]]],[],[]],[[-1,2],[[5,[-2]]],[],[]],[[-1,39],[[5,[-2]]],[],[]],[[-1,39],[[5,[-2]]],[],[]],[[-1,39],[[5,[-2]]],[],[]],[[-1,39],[[5,[-2]]],[],[]],[[-1,38,[5,[39]]],3,[]],[[-1,38,[5,[39]]],3,[]],[[-1,38,[5,[39]]],3,[]],[[-1,38,[5,[39]]],3,[]],[[-1,2],3,[]],[[-1,2],3,[]],[[-1,2],3,[]],[[-1,2],3,[]],[[20,20],20],[[20,20],3],[[12,-1],4,[]],[[12,-1],4,[]],[1,4],[1,4],[[20,20],20],[[27,[5,[-1]],-2],31,[[7,[6]]],[[10,[[9,[3,8]]]]]],[[27,[5,[-1]],11],31,[[7,[6]]]],[27,[[17,[[16,[15]]]]]],[[27,14,-1],74,[[35,[],[[34,[31]]]]]],[[27,14,11],74],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,99,[]],[20,32],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[[20,20],3],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[20,20],20],[[1,4,4],3],[[1,4,4],3],[[27,84],3],[20,72],[27,[[5,[96]]]],[[-1,-2],3,[],[[101,[11]]]],[[-1,-2],3,[],[[101,[11]]]],[[-1,-2],3,[],[[101,[11]]]],[[-1,-2],3,[],[[101,[11]]]],[14,4],[[-1,2,-3],[[5,[-2]]],[],[],[[10,[2],[[34,[-2]]]]]],[[-1,2,-3],[[5,[-2]]],[],[],[[10,[102],[[34,[-2]]]]]],0,0,0,0,0,0,0,[[103,-1,[5,[-2]],-3],3,[[69,[54]]],[[7,[6]]],[[10,[[9,[3,8]]]],19]],[[103,-1,[5,[-2]],11],3,[[69,[54]]],[[7,[6]]]],[[103,-1],[[0,[[15,[],[[34,[[9,[3,8]]]]]],104]]],[[69,[54]]]],[103,54],[[-1,-2],[[18,[-3]]],[],[10,19],[]],[[-1,-2],[[18,[-3]]],[],10,[]],[[],54],[[-1,2,-2,2],21,[],22],[[54,54],54],[[54,54],3],[[54,54],54],[[54,54],3],[54,14],[54,14],[[54,54],54],[[54,54],3],[[-1,23],3,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[103,105],[-1,[[24,[-2]]],[],25],[-1,[[5,[[24,[-2]]]]],[],25],[103,103],[106,106],[54,54],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[103,103],29],[[106,106],29],[54,54],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,2,31,37],23,[]],[[-1,38,[5,[39]],31,37],23,[]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]],19,36]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[103,-1],23,[[35,[103]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[103,[[5,[107]]]],[[54,54],31],[[-1,2],[[5,[[41,[-2]]]]],[],[]],[[103,-1],3,[[69,[54]]]],[[54,54],54],[[-1,23],3,[]],[-1,[[43,[-2]]],[],[]],[[-1,38,[33,[44]]],-2,[],45],[[-1,2,[33,[44]]],-2,[],45],[[-1,2,39,[33,[44]]],-2,[],45],[[-1,2,39,[33,[32]]],[[5,[32]]],[]],[[-1,2,[33,[32]]],[[5,[32]]],[]],[[-1,38,39,[33,[44]]],-2,[],45],[[-1,38,39,[33,[32]]],[[5,[32]]],[]],[[-1,38,[33,[32]]],[[5,[32]]],[]],[[],54],[[],3],[[],3],[[],3],[[103,-1],31,22],[[106,106],31],[[54,54],31],[[54,-1],3,[[47,[],[[46,[54]]]]]],[[-1,2],[[5,[40]]],[]],[[103,50],51],[[106,50],51],[[54,50],51],[[54,50],51],[[54,50],51],[[54,50],51],[[54,50],51],[-1,52,[]],[-1,-1,[]],[-1,-1,[]],[4,54],[-1,-1,[]],[14,[[5,[54]]]],[14,54],[14,54],[14,54],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[-1,54,[[47,[],[[46,[54]]]]]],[2,[[5,[54]]]],[32,106],[32,54],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[103,105],[103,106],[[-1,-3,-5],23,[],67,[[69,[[68,[-2]]]]],70,[[35,[-4],[[34,[]]]]]],[[-1,68,11],[[9,[23,71]]],[]],[[-1,2,[5,[72]]],31,[]],[[103,-1],3,73],[[106,-1],3,73],[[54,-1],3,73],[[54,54],3],[[27,105],[[5,[103]]]],[-1,[[5,[[76,[-2]]]]],[],77],[[54,54],54],[[54,54],31],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[54,-1,[]],[-1,31,[]],[54,31],[54,31],[54,[[78,[54]]]],[54,[[79,[54]]]],[-1,[[80,[40]]],[]],[54,54],[[-1,2],3,[]],[[-1,40],3,[]],[-1,[[24,[85]]],[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[[24,[-1]]],3,[]],[[[89,[-1]]],3,90],[[103,-1],[[5,[29]]],22],[[106,106],[[5,[29]]]],[[-1,2],-2,[],91],[[-1,2],[[5,[72]]],[]],[[-1,2],32,[]],[[-1,39],[[5,[[41,[-2]]]]],[],[]],[-1,14,[]],[[54,54],3],[[-1,23],3,[]],[-1,3,[]],[[54,54,31],3],[[-1,2,-2],3,[],[]],[[-1,[33,[[3,[2,44]]]]],3,[]],[[-1,[33,[[3,[2,32]]]]],3,[]],[[-1,2,-2],3,[],[[69,[32]]]],[[-1,2,32],3,[]],[[-1,39,-2],3,[],[]],[[-1,-3],[[98,[-4]]],[],67,[[69,[[68,[-2]]]]],70],[103,106],[[],72],[[],72],[[],72],[[-1,2],[[5,[-2]]],[],[]],[[-1,39],[[5,[-2]]],[],[]],[[-1,38,[5,[39]]],3,[]],[[-1,2],3,[]],[[54,54],54],[[54,54],3],[103,54],[[54,54],54],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,99,[]],[-1,99,[]],[106,32],[54,32],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[[54,54],3],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,72,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[[-1,23],3,[]],[[54,54],54],[[103,-1,-2],3,[[69,[54]]],[[69,[54]]]],[106,72],[54,72],[[-1,-2],3,[],[[101,[11]]]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[108,108],[[-1,-2],3,[],[]],[[108,108],29],[108,109],[[],39],[[],3],[[108,108],31],[[108,50],51],[[108,50],51],[-1,-1,[]],[109,[[5,[108]]]],[32,108],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[108,-1],3,73],[-1,-2,[],[]],[-1,[[5,[32]]],[]],[-1,8,110],[-1,8,110],[-1,8,110],[[],-1,[]],[[108,108],[[5,[29]]]],[[],72],[-1,-2,[],[]],[-1,99,[]],[-1,30,[]],[108,32],[-1,[[5,[32]]],[]],[-1,[[9,[-2]]],[],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[-1,[[9,[-2]]],[],[]],[-1,100,[]],[108,72],0,0,0,0,0,0,0,0,0,0,[[111,-1,[5,[-2]],-3],3,[[69,[56]]],[[7,[6]]],[[10,[[9,[3,8]]]],19]],[[111,-1,[5,[-2]],11],3,[[69,[56]]],[[7,[6]]]],[[111,-1],[[0,[[15,[],[[34,[[9,[3,8]]]]]],104]]],[[69,[56]]]],[111,56],[[-1,-2],[[18,[-3]]],[],[10,19],[]],[[-1,-2],[[18,[-3]]],[],[10,19],[]],[[-1,-2],[[18,[-3]]],[],[10,19],[]],[[-1,-2],[[18,[-3]]],[],[10,19],[]],[[-1,-2],[[18,[-3]]],[],[10,19],[]],[[-1,-2],[[18,[-3]]],[],10,[]],[[-1,-2],[[18,[-3]]],[],10,[]],[[-1,-2],[[18,[-3]]],[],10,[]],[[-1,-2],[[18,[-3]]],[],10,[]],[[-1,-2],[[18,[-3]]],[],10,[]],[[],56],[112,[[5,[96]]]],[[-1,2,-2,2],21,[],22],[[-1,2,-2,2],21,[],22],[[-1,2,-2,2],21,[],22],[[-1,2,-2,2],21,[],22],[[-1,2,-2,2],21,[],22],[[56,56],56],[[56,56],3],[[56,56],56],[[56,56],3],[56,14],[56,14],[[56,56],56],[[56,56],3],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[24,[-2]]],[],25],[-1,[[24,[-2]]],[],25],[-1,[[24,[-2]]],[],25],[-1,[[24,[-2]]],[],25],[-1,[[24,[-2]]],[],25],[-1,[[5,[[24,[-2]]]]],[],25],[-1,[[5,[[24,[-2]]]]],[],25],[-1,[[5,[[24,[-2]]]]],[],25],[-1,[[5,[[24,[-2]]]]],[],25],[-1,[[5,[[24,[-2]]]]],[],25],[113,113],[114,114],[112,112],[115,115],[111,111],[56,56],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[113,113],29],[[114,114],29],[[112,112],29],[[115,115],29],[[111,111],29],[56,56],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,2,31,37],23,[]],[[-1,2,31,37],23,[]],[[-1,2,31,37],23,[]],[[-1,2,31,37],23,[]],[[-1,2,31,37],23,[]],[[-1,38,[5,[39]],31,37],23,[]],[[-1,38,[5,[39]],31,37],23,[]],[[-1,38,[5,[39]],31,37],23,[]],[[-1,38,[5,[39]],31,37],23,[]],[[-1,38,[5,[39]],31,37],23,[]],[[111,-1],23,[[35,[111,14,2,2,84]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]],19,36]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]],19,36]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]],19,36]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]],19,36]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]],19,36]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[111,-1],23,[[35,[111,14]]]],[[112,-1],23,[[35,[112]]]],[[112,-1],23,[[35,[112]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[56,56],31],[[-1,2],[[5,[[41,[-2]]]]],[],[]],[[-1,2],[[5,[[41,[-2]]]]],[],[]],[[-1,2],[[5,[[41,[-2]]]]],[],[]],[[-1,2],[[5,[[41,[-2]]]]],[],[]],[[-1,2],[[5,[[41,[-2]]]]],[],[]],[[111,-1],3,[[69,[56]]]],[[56,56],56],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[[-1,38,[33,[44]]],-2,[],45],[[-1,38,[33,[44]]],-2,[],45],[[-1,38,[33,[44]]],-2,[],45],[[-1,38,[33,[44]]],-2,[],45],[[-1,38,[33,[44]]],-2,[],45],[[-1,2,[33,[44]]],-2,[],45],[[-1,2,[33,[44]]],-2,[],45],[[-1,2,[33,[44]]],-2,[],45],[[-1,2,[33,[44]]],-2,[],45],[[-1,2,[33,[44]]],-2,[],45],[[-1,2,39,[33,[44]]],-2,[],45],[[-1,2,39,[33,[44]]],-2,[],45],[[-1,2,39,[33,[44]]],-2,[],45],[[-1,2,39,[33,[44]]],-2,[],45],[[-1,2,39,[33,[44]]],-2,[],45],[[-1,2,39,[33,[32]]],[[5,[32]]],[]],[[-1,2,39,[33,[32]]],[[5,[32]]],[]],[[-1,2,39,[33,[32]]],[[5,[32]]],[]],[[-1,2,39,[33,[32]]],[[5,[32]]],[]],[[-1,2,39,[33,[32]]],[[5,[32]]],[]],[[-1,2,[33,[32]]],[[5,[32]]],[]],[[-1,2,[33,[32]]],[[5,[32]]],[]],[[-1,2,[33,[32]]],[[5,[32]]],[]],[[-1,2,[33,[32]]],[[5,[32]]],[]],[[-1,2,[33,[32]]],[[5,[32]]],[]],[[-1,38,39,[33,[44]]],-2,[],45],[[-1,38,39,[33,[44]]],-2,[],45],[[-1,38,39,[33,[44]]],-2,[],45],[[-1,38,39,[33,[44]]],-2,[],45],[[-1,38,39,[33,[44]]],-2,[],45],[[-1,38,39,[33,[32]]],[[5,[32]]],[]],[[-1,38,39,[33,[32]]],[[5,[32]]],[]],[[-1,38,39,[33,[32]]],[[5,[32]]],[]],[[-1,38,39,[33,[32]]],[[5,[32]]],[]],[[-1,38,39,[33,[32]]],[[5,[32]]],[]],[[-1,38,[33,[32]]],[[5,[32]]],[]],[[-1,38,[33,[32]]],[[5,[32]]],[]],[[-1,38,[33,[32]]],[[5,[32]]],[]],[[-1,38,[33,[32]]],[[5,[32]]],[]],[[-1,38,[33,[32]]],[[5,[32]]],[]],[[],56],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[113,-1],31,22],[[114,-1],31,22],[[112,-1],31,22],[[115,-1],31,22],[[111,-1],31,22],[[56,56],31],[[56,-1],3,[[47,[],[[46,[56]]]]]],[[-1,2],[[5,[40]]],[]],[[-1,2],[[5,[40]]],[]],[[-1,2],[[5,[40]]],[]],[[-1,2],[[5,[40]]],[]],[[-1,2],[[5,[40]]],[]],[[113,50],51],[[114,50],51],[[112,50],51],[[115,50],51],[[111,50],51],[[56,50],51],[[56,50],51],[[56,50],51],[[56,50],51],[[56,50],51],[-1,52,[]],[-1,52,[]],[-1,52,[]],[-1,52,[]],[-1,52,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[57,56],[-1,-1,[]],[4,56],[14,[[5,[56]]]],[14,56],[14,56],[14,56],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[-1,56,[[47,[],[[46,[56]]]]]],[2,[[5,[56]]]],[[27,2,[5,[84]]],[[5,[115]]]],[[27,2,[5,[84]]],[[5,[111]]]],[32,56],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,2],[[5,[30]]],[]],[[-1,2],[[5,[30]]],[]],[[-1,2],[[5,[66]]],[]],[[-1,2],[[5,[66]]],[]],[[-1,-3,-5],23,[],67,[[69,[[68,[-2]]]]],70,[[35,[-4],[[34,[]]]]]],[[-1,-3,-5],23,[],67,[[69,[[68,[-2]]]]],70,[[35,[-4],[[34,[]]]]]],[[-1,-3,-5],23,[],67,[[69,[[68,[-2]]]]],70,[[35,[-4],[[34,[]]]]]],[[-1,-3,-5],23,[],67,[[69,[[68,[-2]]]]],70,[[35,[-4],[[34,[]]]]]],[[-1,-3,-5],23,[],67,[[69,[[68,[-2]]]]],70,[[35,[-4],[[34,[]]]]]],[[-1,68,11],[[9,[23,71]]],[]],[[-1,68,11],[[9,[23,71]]],[]],[[-1,68,11],[[9,[23,71]]],[]],[[-1,68,11],[[9,[23,71]]],[]],[[-1,68,11],[[9,[23,71]]],[]],[[-1,2,[5,[72]]],31,[]],[[-1,2,[5,[72]]],31,[]],[[-1,2,[5,[72]]],31,[]],[[-1,2,[5,[72]]],31,[]],[[-1,2,[5,[72]]],31,[]],[[113,-1],3,73],[[114,-1],3,73],[[112,-1],3,73],[[115,-1],3,73],[[111,-1],3,73],[[56,-1],3,73],[[56,56],3],[-1,[[5,[[76,[-2]]]]],[],77],[-1,[[5,[[76,[-2]]]]],[],77],[-1,[[5,[[76,[-2]]]]],[],77],[-1,[[5,[[76,[-2]]]]],[],77],[-1,[[5,[[76,[-2]]]]],[],77],[[56,56],56],[[56,56],31],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[56,-1,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[56,31],[56,31],[113,[[5,[116]]]],[56,[[78,[56]]]],[56,[[79,[56]]]],[-1,[[80,[40]]],[]],[-1,[[80,[40]]],[]],[-1,[[80,[40]]],[]],[-1,[[80,[40]]],[]],[-1,[[80,[40]]],[]],[[27,2,[5,[2]],[5,[84]]],[[5,[112]]]],[[27,2,2,[5,[84]]],[[5,[112]]]],[[111,14],[[5,[85]]]],[111,[[5,[117]]]],[114,[[5,[96]]]],[112,[[5,[96]]]],[-1,83,[]],[-1,83,[]],[[27,-1],113,[[7,[116]]]],[27,114],[[27,118],115],[[27,[41,[119]],[5,[84]]],111],[56,56],[[-1,2],3,[]],[[-1,2],3,[]],[[-1,2],3,[]],[[-1,2],3,[]],[[-1,2],3,[]],[[-1,40],3,[]],[[-1,40],3,[]],[[-1,40],3,[]],[[-1,40],3,[]],[[-1,40],3,[]],[-1,[[24,[85]]],[]],[-1,[[24,[85]]],[]],[-1,[[24,[85]]],[]],[-1,[[24,[85]]],[]],[-1,[[24,[85]]],[]],[-1,[[9,[14,8]]],[]],[-1,[[9,[14,8]]],[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[-1,[5,[2]],[5,[86]]],[[17,[[16,[15]]]]],[]],[[-1,[5,[2]],[5,[86]]],[[17,[[16,[15]]]]],[]],[[[24,[-1]]],3,[]],[[[24,[-1]]],3,[]],[[[24,[-1]]],3,[]],[[[24,[-1]]],3,[]],[[[24,[-1]]],3,[]],[[[89,[-1]]],3,90],[[[89,[-1]]],3,90],[[[89,[-1]]],3,90],[[[89,[-1]]],3,90],[[[89,[-1]]],3,90],[[113,-1],[[5,[29]]],22],[[114,-1],[[5,[29]]],22],[[112,-1],[[5,[29]]],22],[[115,-1],[[5,[29]]],22],[[111,-1],[[5,[29]]],22],[114,[[5,[84]]]],[112,[[5,[84]]]],[111,[[5,[84]]]],[[-1,2],-2,[],91],[[-1,2],-2,[],91],[[-1,2],-2,[],91],[[-1,2],-2,[],91],[[-1,2],-2,[],91],[[-1,2],[[5,[72]]],[]],[[-1,2],[[5,[72]]],[]],[[-1,2],[[5,[72]]],[]],[[-1,2],[[5,[72]]],[]],[[-1,2],[[5,[72]]],[]],[[-1,2],32,[]],[[-1,2],32,[]],[[-1,2],32,[]],[[-1,2],32,[]],[[-1,2],32,[]],[115,[[5,[[41,[118]]]]]],[[-1,2],[[9,[-2,8]]],[],94],[[-1,2],[[9,[-2,8]]],[],94],[[-1,2],[[9,[[5,[-2]],8]]],[],94],[[-1,2],[[9,[[5,[-2]],8]]],[],94],[-1,95,[]],[-1,95,[]],[-1,95,[]],[-1,95,[]],[[-1,39],[[5,[[41,[-2]]]]],[],[]],[[-1,39],[[5,[[41,[-2]]]]],[],[]],[[-1,39],[[5,[[41,[-2]]]]],[],[]],[[-1,39],[[5,[[41,[-2]]]]],[],[]],[[-1,39],[[5,[[41,[-2]]]]],[],[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[[56,56],3],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[[56,56,31],3],[[-1,2,-2],3,[],[]],[[-1,2,-2],3,[],[]],[[-1,2,-2],3,[],[]],[[-1,2,-2],3,[],[]],[[-1,2,-2],3,[],[]],[[-1,[33,[[3,[2,44]]]]],3,[]],[[-1,[33,[[3,[2,44]]]]],3,[]],[[-1,[33,[[3,[2,44]]]]],3,[]],[[112,[5,[84]]],3],[[-1,[33,[[3,[2,44]]]]],3,[]],[[-1,[33,[[3,[2,44]]]]],3,[]],[[-1,[33,[[3,[2,32]]]]],3,[]],[[-1,[33,[[3,[2,32]]]]],3,[]],[[-1,[33,[[3,[2,32]]]]],3,[]],[[-1,[33,[[3,[2,32]]]]],3,[]],[[-1,[33,[[3,[2,32]]]]],3,[]],[[-1,2,-2],3,[],[[69,[32]]]],[[-1,2,-2],3,[],[[69,[32]]]],[[-1,2,-2],3,[],[[69,[32]]]],[[-1,2,-2],3,[],[[69,[32]]]],[[-1,2,-2],3,[],[[69,[32]]]],[[-1,2,32],3,[]],[[-1,2,32],3,[]],[[-1,2,32],3,[]],[[-1,2,32],3,[]],[[-1,2,32],3,[]],[[-1,95],3,[]],[[-1,95],3,[]],[[-1,95],3,[]],[[-1,95],3,[]],[[-1,39,-2],3,[],[]],[[-1,39,-2],3,[],[]],[[-1,39,-2],3,[],[]],[[-1,39,-2],3,[],[]],[[-1,39,-2],3,[],[]],[[-1,-3],[[98,[-4]]],[],67,[[69,[[68,[-2]]]]],70],[[-1,-3],[[98,[-4]]],[],67,[[69,[[68,[-2]]]]],70],[[-1,-3],[[98,[-4]]],[],67,[[69,[[68,[-2]]]]],70],[[-1,-3],[[98,[-4]]],[],67,[[69,[[68,[-2]]]]],70],[[-1,-3],[[98,[-4]]],[],67,[[69,[[68,[-2]]]]],70],[111,[[5,[[41,[119]]]]]],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[-1,2],[[5,[-2]]],[],[]],[[-1,2],[[5,[-2]]],[],[]],[[-1,2],[[5,[-2]]],[],[]],[[-1,2],[[5,[-2]]],[],[]],[[-1,2],[[5,[-2]]],[],[]],[[-1,39],[[5,[-2]]],[],[]],[[-1,39],[[5,[-2]]],[],[]],[[-1,39],[[5,[-2]]],[],[]],[[-1,39],[[5,[-2]]],[],[]],[[-1,39],[[5,[-2]]],[],[]],[[-1,38,[5,[39]]],3,[]],[[-1,38,[5,[39]]],3,[]],[[-1,38,[5,[39]]],3,[]],[[-1,38,[5,[39]]],3,[]],[[-1,38,[5,[39]]],3,[]],[[-1,2],3,[]],[[-1,2],3,[]],[[-1,2],3,[]],[[-1,2],3,[]],[[-1,2],3,[]],[[111,14,[5,[-1]]],3,[[7,[85]]]],[[56,56],56],[[56,56],3],[111,56],[[56,56],56],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,99,[]],[56,32],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[[56,56],3],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[56,56],56],[[111,-1,-2],3,[[69,[56]]],[[69,[56]]]],[56,72],[[-1,-2],3,[],[[101,[11]]]],[[-1,-2],3,[],[[101,[11]]]],[[-1,-2],3,[],[[101,[11]]]],[[-1,-2],3,[],[[101,[11]]]],[[-1,-2],3,[],[[101,[11]]]],[[27,[5,[2]],[5,[84]]],114],[[-1,2,-3],[[5,[-2]]],[],[],[[10,[2],[[34,[-2]]]]]],[[-1,2,-3],[[5,[-2]]],[],[],[[10,[2],[[34,[-2]]]]]],[[-1,2,-3],[[5,[-2]]],[],[],[[10,[102],[[34,[-2]]]]]],[[-1,2,-3],[[5,[-2]]],[],[],[[10,[102],[[34,[-2]]]]]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[120,[-1]]],[[120,[-1]]],121],[[-1,-2],3,[],[]],0,0,[[],[[120,[-1]]],122],[[],2],0,0,[[[120,[-1]],50],51,123],[-1,-1,[]],[-1,-1,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,31,[[69,[124]]]],0,0,[[-1,[120,[-2]],125],3,[[69,[124]]],[[101,[85]]]],[[-1,120,-2],3,[[69,[124]]],[[69,[96]]]],0,0,0,[2,3],[2,3],[[],126],[-1,-2,[],[]],0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,100,[]],[-1,100,[]],0,[[-1,[33,[127]],128],129,[[69,[124]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[130,[[62,[[3,[65,131]]]]]],[130,131],[132,[[33,[133]]]],[132,[[33,[133]]]],[134,81],[130,81],[132,[[9,[2,135]]]],[134,81],[130,81],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[33,[133]]],132],[81,[[9,[134,136]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[81,[[9,[130,136]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[132,132],[134,134],[130,130],[[130,134],[[5,[134]]]],[136,136],[132,132],[134,134],[137,137],[130,130],[138,138],[139,139],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[132,132],29],[[137,137],29],[81,[[9,[134,136]]]],[-1,136,110],[-1,136,110],[[],139],[132,-1,[]],[-1,[[9,[134]]],140],[-1,[[9,[130]]],140],[[138,-1],[[9,[-2]]],141,[]],[[138,-1],[[9,[-2]]],141,[]],[[138,-1],[[9,[-2]]],141,[]],[[138,-1],[[9,[-2]]],141,[]],[[138,-1],[[9,[-2]]],141,[]],[[138,2,[33,[2]],-1],[[9,[-2]]],141,[]],[[138,-1],[[9,[-2]]],141,[]],[[138,-1],[[9,[-2]]],141,[]],[[138,-1],[[9,[-2]]],141,[]],[[138,-1],[[9,[-2]]],141,[]],[[138,-1],[[9,[-2]]],141,[]],[[138,-1],[[9,[-2]]],141,[]],[[138,-1],[[9,[-2]]],141,[]],[[138,-1],[[9,[-2]]],141,[]],[[138,-1],[[9,[-2]]],141,[]],[[138,2,-1],[[9,[-2]]],141,[]],[[138,-1],[[9,[-2]]],141,[]],[[138,-1],[[9,[-2]]],141,[]],[[138,-1],[[9,[-2]]],141,[]],[[138,-1],[[9,[-2]]],141,[]],[[138,2,[33,[2]],-1],[[9,[-2]]],141,[]],[[138,65,-1],[[9,[-2]]],141,[]],[[138,2,65,-1],[[9,[-2]]],141,[]],[[138,-1],[[9,[-2]]],141,[]],[[138,-1],[[9,[-2]]],141,[]],[[138,-1],[[9,[-2]]],141,[]],[[138,-1],[[9,[-2]]],141,[]],[[138,-1],[[9,[-2]]],141,[]],[[138,2,-1],[[9,[-2]]],141,[]],[130,65],[[136,136],31],[[132,-1],31,[[101,[[33,[133]]]]]],[[134,-1],31,[[101,[81]]]],[[137,137],31],[[130,-1],31,[[101,[81]]]],[134,134],[[136,50],51],[[136,50],51],[[132,50],51],[[132,50],51],[[134,50],51],[[134,50],51],[[137,50],51],[[130,50],51],[[130,50],51],[[138,50],51],[[139,50],51],[-1,-1,[]],[142,136],[143,136],[-1,-1,[]],[135,136],[8,136],[144,136],[145,136],[[[33,[133]]],132],[[[146,[[33,[133]]]]],132],[2,132],[30,132],[-1,-1,[]],[[[62,[133]]],132],[-1,134,[[69,[132]]]],[14,134],[147,134],[148,134],[-1,-1,[]],[109,134],[3,134],[31,134],[149,134],[130,134],[131,134],[150,134],[-1,-1,[]],[-1,-1,[]],[130,138],[-1,-1,[]],[134,138],[-1,-1,[]],[-3,134,[151,[69,[134]]],[151,[69,[134]]],[[47,[],[[46,[[3,[-1,-2]]]]]]]],[-1,134,[[47,[],[[46,[134]]]]]],[-2,130,[151,[69,[134]]],[[47,[],[[46,[-1]]]]]],[-3,130,[151,[69,[134]]],[151,[69,[134]]],[[47,[],[[46,[[3,[-1,-2]]]]]]]],[2,[[9,[134,-1]]],[]],[2,[[9,[130,-1]]],[]],[-1,[[9,[-2,136]]],[[101,[81]]],152],[81,[[5,[134]]]],[81,[[5,[130]]]],[134,[[5,[31]]]],[134,[[5,[[9,[150,136]]]]]],[134,[[5,[[9,[-1,136]]]]],[[153,[31]],[153,[133]],[153,[148]],[153,[14]],[153,[131]],[153,[149]],[153,[109]],[153,[147]]]],[134,[[5,[3]]]],[134,[[5,[132]]]],[134,[[5,[130]]]],[[132,-1],3,73],[[134,-1],3,73],[[137,-1],3,73],[[130,-1],3,73],[138,138],[139,139],[132,[[33,[133]]]],[134,81],[130,81],[132,[[9,[[33,[133]],[33,[133]]]]]],[134,[[9,[81,81]]]],[130,[[9,[81,81]]]],[-1,-2,[],[]],[-1,-2,[],[]],[132,[[146,[[33,[133]]]]]],[-1,-2,[],[]],[132,81],[132,[[62,[133]]]],[134,81],[-1,-2,[],[]],[134,[[146,[81]]]],[-1,-2,[],[]],[130,[[146,[81]]]],[130,81],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[132,[[62,[133]]]],[134,-1,[]],[134,-1,[]],[130,-1,[]],[130,-1,[]],[132,[[146,[[33,[133]]]]]],[134,[[146,[81]]]],[130,[[146,[81]]]],[130,134],[132,[[9,[30,135]]]],[130,[[9,[130,136]]]],[134,81],[130,81],[[65,154],136],[130,[[5,[31]]]],[130,31],[138,31],[139,31],[137,31],[137,31],[137,31],[130,31],[130,[[0,[[155,[],[[46,[[5,[134]]]]]]]]]],[130,[[0,[[155,[],[[46,[[3,[131,134]]]]]]]]]],[130,[[0,[[155,[],[[46,[[5,[131]]]]]]]]]],[130,[[0,[[155,[],[[46,[[156,[134,134]]]]]]]]]],[[130,65],[[5,[134]]]],[157,137],[134,137],[134,157],[130,134],[134,138],[[],139],[[],134],[132,132],[134,134],[130,130],[132,[[9,[-1,136]]],158],[[132,-1],[[5,[29]]],[[101,[[33,[133]]]]]],[[134,-1],[[5,[29]]],[[101,[81]]]],[[137,137],[[5,[29]]]],[[130,-1],[[5,[29]]],[[101,[81]]]],[[134,-1],9,159],[[130,-1],9,159],[[139,31],[[9,[-1,-2]]],[],[]],[[139,[33,[133]]],[[9,[-1,-2]]],[],[]],[[139,160],[[9,[-1,-2]]],[],[]],[[139,161],[[9,[-1,-2]]],[],[]],[[139,150],[[9,[-1,-2]]],[],[]],[[139,149],[[9,[-1,-2]]],[],[]],[[139,109],[[9,[-1,-2]]],[],[]],[[139,147],[[9,[-1,-2]]],[],[]],[[139,162],[[9,[-1,-2]]],[],[]],[[139,[5,[65]]],[[9,[-1,-2]]],[],[]],[[139,2,-1],[[9,[-2,-3]]],[163,164],[],[]],[[139,2,14,2,-1],[[9,[-2,-3]]],[163,164],[],[]],[139,[[9,[-1,-2]]],[],[]],[[139,[5,[65]]],[[9,[-1,-2]]],[],[]],[[139,-1],[[9,[-2,-3]]],[163,164],[],[]],[[139,2],[[9,[-1,-2]]],[],[]],[[139,2,65],[[9,[-1,-2]]],[],[]],[[139,2,14,2,65],[[9,[-1,-2]]],[],[]],[[139,65],[[9,[-1,-2]]],[],[]],[[139,2,65],[[9,[-1,-2]]],[],[]],[[139,2,14,2,65],[[9,[-1,-2]]],[],[]],[[139,148],[[9,[-1,-2]]],[],[]],[[139,14],[[9,[-1,-2]]],[],[]],[[139,131],[[9,[-1,-2]]],[],[]],[[139,133],[[9,[-1,-2]]],[],[]],[139,[[9,[-1,-2]]],[],[]],[[139,2],[[9,[-1,-2]]],[],[]],[[139,2,14,2],[[9,[-1,-2]]],[],[]],[136,[[5,[165]]]],[[],[[146,[166]]]],[[],[[146,[166]]]],[130,[[5,[131]]]],[157,[[9,[147,136]]]],[157,[[9,[132,136]]]],[82,[[9,[[5,[130]],136]]]],[-1,[[9,[[5,[130]],136]]],[]],[-1,[[9,[[5,[130]],136]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,[[9,[134,136]]],163],[132,81],[134,81],[130,81],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[81,[[9,[132,-1]]],[]],[-1,[[9,[-2]]],[],[]],[81,[[9,[132,-1]]],[]],[81,[[9,[134,136]]]],[81,[[9,[134,136]]]],[-1,[[9,[-2]]],[],[]],[[[146,[81]]],[[9,[134,136]]]],[-1,[[9,[-2]]],[],[]],[[[146,[81]]],[[9,[130,136]]]],[81,[[9,[130,136]]]],[134,[[9,[130,-1]]],[]],[-1,[[9,[-2]]],[],[]],[81,[[9,[130,136]]]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[81,134],[[[146,[81]]],134],[81,134],[134,130],[81,130],[81,130],[[[146,[81]]],130],[[130,65],[[5,[134]]]],[130,31],[-1,134,[[101,[[33,[133]]]]]],[134,137],[81,[[9,[137,136]]]],[166,[[5,[137]]]],[[[62,[133]]],132],[81,[[9,[134,136]]]],[81,[[9,[130,136]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[167,-1,[5,[-2]],-3],3,[[69,[60]]],[[7,[6]]],[[10,[[9,[3,8]]]],19]],[[167,-1,[5,[-2]],11],3,[[69,[60]]],[[7,[6]]]],[[167,-1],[[0,[[15,[],[[34,[[9,[3,8]]]]]],104]]],[[69,[60]]]],[167,60],[[-1,-2],[[18,[-3]]],[],[10,19],[]],[[-1,-2],[[18,[-3]]],[],[10,19],[]],[[-1,-2],[[18,[-3]]],[],[10,19],[]],[[-1,-2],[[18,[-3]]],[],10,[]],[[-1,-2],[[18,[-3]]],[],10,[]],[[-1,-2],[[18,[-3]]],[],10,[]],[[],60],[[],48],[168,167],[[-1,2,-2,2],21,[],22],[[-1,2,-2,2],21,[],22],[[-1,2,-2,2],21,[],22],[[60,60],60],[[48,48],48],[[60,60],3],[[48,48],3],[[60,60],60],[[48,48],48],[[60,60],3],[[48,48],3],[60,14],[60,14],[48,14],[48,14],[[60,60],60],[[48,48],48],[[60,60],3],[[48,48],3],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[169,-2],-1,[],[[10,[170],[[34,[-1]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[169,[[171,[[5,[170]]]]]],[-1,[[24,[-2]]],[],25],[-1,[[24,[-2]]],[],25],[-1,[[24,[-2]]],[],25],[[[24,[172]]],3],[[[24,[167]]],3],[-1,[[5,[[24,[-2]]]]],[],25],[-1,[[5,[[24,[-2]]]]],[],25],[-1,[[5,[[24,[-2]]]]],[],25],[170,3],[169,3],[172,172],[167,167],[[[173,[-1]]],[[173,[-1]]],174],[60,60],[48,48],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[172,172],29],[[167,167],29],[[[173,[-1]],[173,[-1]]],29,174],[60,60],[48,48],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,2,31,37],23,[]],[[-1,2,31,37],23,[]],[[-1,2,31,37],23,[]],[[-1,38,[5,[39]],31,37],23,[]],[[-1,38,[5,[39]],31,37],23,[]],[[-1,38,[5,[39]],31,37],23,[]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]],19,36]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]],19,36]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]],19,36]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[60,60],31],[[48,48],31],[167,27],[[-1,2],[[5,[[41,[-2]]]]],[],[]],[[-1,2],[[5,[[41,[-2]]]]],[],[]],[[-1,2],[[5,[[41,[-2]]]]],[],[]],[[167,-1],3,[[69,[60]]]],[[[5,[81]]],[[9,[-1,8]]],[]],[[],169],[[[173,[-1]]],-2,[],[]],[[60,60],60],[[48,48],48],[[175,-1],3,[]],[[175,-1],3,[]],[[[177,[],[[176,[-1]]]]],3,[[15,[],[[34,[[9,[3,8]]]]]]]],[[[177,[],[[176,[-1]]]]],3,[[15,[],[[34,[[9,[3,8]]]]]]]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[[-1,38,[33,[44]]],-2,[],45],[[-1,38,[33,[44]]],-2,[],45],[[-1,38,[33,[44]]],-2,[],45],[[-1,2,[33,[44]]],-2,[],45],[[-1,2,[33,[44]]],-2,[],45],[[-1,2,[33,[44]]],-2,[],45],[[-1,2,39,[33,[44]]],-2,[],45],[[-1,2,39,[33,[44]]],-2,[],45],[[-1,2,39,[33,[44]]],-2,[],45],[[-1,2,39,[33,[32]]],[[5,[32]]],[]],[[-1,2,39,[33,[32]]],[[5,[32]]],[]],[[-1,2,39,[33,[32]]],[[5,[32]]],[]],[[-1,2,[33,[32]]],[[5,[32]]],[]],[[-1,2,[33,[32]]],[[5,[32]]],[]],[[-1,2,[33,[32]]],[[5,[32]]],[]],[[-1,38,39,[33,[44]]],-2,[],45],[[-1,38,39,[33,[44]]],-2,[],45],[[-1,38,39,[33,[44]]],-2,[],45],[[-1,38,39,[33,[32]]],[[5,[32]]],[]],[[-1,38,39,[33,[32]]],[[5,[32]]],[]],[[-1,38,39,[33,[32]]],[[5,[32]]],[]],[[-1,38,[33,[32]]],[[5,[32]]],[]],[[-1,38,[33,[32]]],[[5,[32]]],[]],[[-1,38,[33,[32]]],[[5,[32]]],[]],[[],60],[[],48],[[[177,[],[[176,[-1]]]],-2],-1,[[15,[],[[34,[[9,[3,8]]]]]]],[]],[[175,-1,178],3,[]],[[175,-1,178],3,[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[172,-1],31,22],[[167,-1],31,22],[[[173,[-1]],-2],31,174,22],[[60,60],31],[[48,48],31],[[60,-1],3,[[47,[],[[46,[60]]]]]],[[48,-1],3,[[47,[],[[46,[48]]]]]],[[27,2],[[5,[167]]]],[[-1,2],[[5,[40]]],[]],[[-1,2],[[5,[40]]],[]],[[-1,2],[[5,[40]]],[]],[[172,50],51],[[167,50],51],[[170,50],51],[[169,50],51],[[[173,[-1]],50],51,174],[[60,50],51],[[60,50],51],[[60,50],51],[[60,50],51],[[60,50],51],[[48,50],51],[[48,50],51],[[48,50],51],[[48,50],51],[[48,50],51],[-1,52,[]],[-1,52,[]],[-1,52,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[4,60],[-1,-1,[]],[14,[[5,[60]]]],[14,[[5,[48]]]],[14,60],[14,60],[14,48],[14,48],[14,60],[14,48],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[-1,60,[[47,[],[[46,[60]]]]]],[-1,48,[[47,[],[[46,[48]]]]]],[2,[[5,[60]]]],[2,[[5,[48]]]],[32,60],[32,48],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3,-5],23,[],67,[[69,[[68,[-2]]]]],70,[[35,[-4],[[34,[]]]]]],[[-1,-3,-5],23,[],67,[[69,[[68,[-2]]]]],70,[[35,[-4],[[34,[]]]]]],[[-1,-3,-5],23,[],67,[[69,[[68,[-2]]]]],70,[[35,[-4],[[34,[]]]]]],[[-1,68,11],[[9,[23,71]]],[]],[[-1,68,11],[[9,[23,71]]],[]],[[-1,68,11],[[9,[23,71]]],[]],[[-1,2,[5,[72]]],31,[]],[[-1,2,[5,[72]]],31,[]],[[-1,2,[5,[72]]],31,[]],[[172,-1],3,73],[[167,-1],3,73],[[[173,[-1]],-2],3,174,73],[[60,-1],3,73],[[48,-1],3,73],[-1,[],[]],[[27,[5,[81]]],[[9,[3,8]]]],[[27,[5,[81]]],[[9,[3,8]]]],[[169,42],3],[[[174,[],[[179,[-1]]]],-1],3,[]],[[[174,[],[[179,[-1]]]],-1],3,[]],[[60,60],3],[[48,48],3],[[[174,[],[[179,[-1]]]]],[[180,[-2]]],[],[]],[[[174,[],[[179,[-1]]]]],[[180,[-2]]],[],[]],[-1,[[5,[[76,[-2]]]]],[],77],[-1,[[5,[[76,[-2]]]]],[],77],[-1,[[5,[[76,[-2]]]]],[],77],[[60,60],60],[[48,48],48],[[60,60],31],[[48,48],31],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[60,-1,[]],[48,-1,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[60,31],[48,31],[60,31],[48,31],[60,[[78,[60]]]],[48,[[78,[48]]]],[60,[[79,[60]]]],[48,[[79,[48]]]],[-1,[[80,[40]]],[]],[-1,[[80,[40]]],[]],[-1,[[80,[40]]],[]],[[181,-1,30,30,[5,[81]]],[[9,[3,8]]],[]],[[181,-1,30,30,[5,[81]]],[[9,[3,8]]],[]],[182,[[5,[96]]]],[182,[[5,[96]]]],[42,170],[[27,-1],-2,[],[]],[[27,-1],-2,[],[]],[60,60],[48,48],[[-1,2],3,[]],[[-1,2],3,[]],[[-1,2],3,[]],[[-1,40],3,[]],[[-1,40],3,[]],[[-1,40],3,[]],[-1,[[24,[85]]],[]],[-1,[[24,[85]]],[]],[-1,[[24,[85]]],[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[183,184],[185,186],[[[24,[-1]]],3,[]],[[[24,[-1]]],3,[]],[[[24,[-1]]],3,[]],[[185,-1],3,[]],[[185,-1,178],3,[]],[[[89,[-1]]],3,90],[[[89,[-1]]],3,90],[[[89,[-1]]],3,90],[[183,-1,30,30,[5,[81]]],[[9,[3,8]]],[]],[[183,-1,30],31,[]],[[172,-1],[[5,[29]]],22],[[167,-1],[[5,[29]]],22],[[[173,[-1]],-2],[[5,[29]]],174,22],[168,42],[168,27],0,[[-1,2],-2,[],91],[[-1,2],-2,[],91],[[-1,2],-2,[],91],[[-1,2],[[5,[72]]],[]],[[-1,2],[[5,[72]]],[]],[[-1,2],[[5,[72]]],[]],[[-1,2],32,[]],[[-1,2],32,[]],[[-1,2],32,[]],[[170,187],3],[[169,187],3],[[-1,39],[[5,[[41,[-2]]]]],[],[]],[[-1,39],[[5,[[41,[-2]]]]],[],[]],[[-1,39],[[5,[[41,[-2]]]]],[],[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[182,3],[182,3],[[[177,[],[[176,[-1]]]],187],3,[[15,[],[[34,[[9,[3,8]]]]]]]],[[[177,[],[[176,[-1]]]],187],3,[[15,[],[[34,[[9,[3,8]]]]]]]],[[60,60],3],[[48,48],3],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[[60,60,31],3],[[48,48,31],3],[[-1,2,-2],3,[],[]],[[-1,2,-2],3,[],[]],[[-1,2,-2],3,[],[]],[[-1,[33,[[3,[2,44]]]]],3,[]],[[-1,[33,[[3,[2,44]]]]],3,[]],[[-1,[33,[[3,[2,44]]]]],3,[]],[[-1,[33,[[3,[2,32]]]]],3,[]],[[-1,[33,[[3,[2,32]]]]],3,[]],[[-1,[33,[[3,[2,32]]]]],3,[]],[[-1,2,-2],3,[],[[69,[32]]]],[[-1,2,-2],3,[],[[69,[32]]]],[[-1,2,-2],3,[],[[69,[32]]]],[[-1,2,32],3,[]],[[-1,2,32],3,[]],[[-1,2,32],3,[]],[[-1,39,-2],3,[],[]],[[-1,39,-2],3,[],[]],[[-1,39,-2],3,[],[]],[[-1,-3],[[98,[-4]]],[],67,[[69,[[68,[-2]]]]],70],[[-1,-3],[[98,[-4]]],[],67,[[69,[[68,[-2]]]]],70],[[-1,-3],[[98,[-4]]],[],67,[[69,[[68,[-2]]]]],70],0,[[168,-1],3,[[15,[],[[34,[3]]]]]],[[],72],[[],72],[[],72],[[],72],[[],72],[[-1,2],[[5,[-2]]],[],[]],[[-1,2],[[5,[-2]]],[],[]],[[-1,2],[[5,[-2]]],[],[]],[[-1,39],[[5,[-2]]],[],[]],[[-1,39],[[5,[-2]]],[],[]],[[-1,39],[[5,[-2]]],[],[]],[[-1,38,[5,[39]]],3,[]],[[-1,38,[5,[39]]],3,[]],[[-1,38,[5,[39]]],3,[]],[[-1,2],3,[]],[[-1,2],3,[]],[[-1,2],3,[]],[[60,60],60],[[48,48],48],[[60,60],3],[[48,48],3],[167,60],[[181,-1,30],31,[]],[[181,-1,30],31,[]],[[60,60],60],[[48,48],48],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,99,[]],[-1,99,[]],[-1,99,[]],[60,32],[48,32],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[[60,60],3],[[48,48],3],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[169,42],[[9,[3,42]]]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[60,60],60],[[48,48],48],[[167,-1,-2],3,[[69,[60]]],[[69,[60]]]],[60,72],[48,72],[[-1,-2],3,[],[[101,[11]]]],[[-1,-2],3,[],[[101,[11]]]],[[-1,-2],3,[],[[101,[11]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[188,-1,[5,[-2]],-3],3,[[69,[59]]],[[7,[6]]],[[10,[[9,[3,8]]]],19]],[[189,-1,[5,[-2]],-3],3,[[69,[58]]],[[7,[6]]],[[10,[[9,[3,8]]]],19]],[[190,-1,[5,[-2]],-3],3,[[69,[55]]],[[7,[6]]],[[10,[[9,[3,8]]]],19]],[[191,-1,[5,[-2]],-3],3,[[69,[57]]],[[7,[6]]],[[10,[[9,[3,8]]]],19]],[[188,-1,[5,[-2]],11],3,[[69,[59]]],[[7,[6]]]],[[189,-1,[5,[-2]],11],3,[[69,[58]]],[[7,[6]]]],[[190,-1,[5,[-2]],11],3,[[69,[55]]],[[7,[6]]]],[[191,-1,[5,[-2]],11],3,[[69,[57]]],[[7,[6]]]],[[188,-1],[[0,[[15,[],[[34,[[9,[3,8]]]]]],104]]],[[69,[59]]]],[[189,-1],[[0,[[15,[],[[34,[[9,[3,8]]]]]],104]]],[[69,[58]]]],[[190,-1],[[0,[[15,[],[[34,[[9,[3,8]]]]]],104]]],[[69,[55]]]],[[191,-1],[[0,[[15,[],[[34,[[9,[3,8]]]]]],104]]],[[69,[57]]]],[188,59],[189,58],[190,55],[191,57],[[84,84],109],[[84,192],65],[[84,84,[33,[2]]],109],[[-1,-2],[[18,[-3]]],[],[10,19],[]],[[-1,-2],[[18,[-3]]],[],[10,19],[]],[[-1,-2],[[18,[-3]]],[],[10,19],[]],[[-1,-2],[[18,[-3]]],[],[10,19],[]],[[-1,-2],[[18,[-3]]],[],[10,19],[]],[[-1,-2],[[18,[-3]]],[],[10,19],[]],[[-1,-2],[[18,[-3]]],[],[10,19],[]],[[-1,-2],[[18,[-3]]],[],[10,19],[]],[[-1,-2],[[18,[-3]]],[],[10,19],[]],[[-1,-2],[[18,[-3]]],[],[10,19],[]],[[-1,-2],[[18,[-3]]],[],10,[]],[[-1,-2],[[18,[-3]]],[],10,[]],[[-1,-2],[[18,[-3]]],[],10,[]],[[-1,-2],[[18,[-3]]],[],10,[]],[[-1,-2],[[18,[-3]]],[],10,[]],[[-1,-2],[[18,[-3]]],[],10,[]],[[-1,-2],[[18,[-3]]],[],10,[]],[[-1,-2],[[18,[-3]]],[],10,[]],[[-1,-2],[[18,[-3]]],[],10,[]],[[-1,-2],[[18,[-3]]],[],10,[]],[[],57],[[],55],[[],58],[[],59],[193,102],[84,194],[195,196],[193,2],[193,2],[197,31],[197,31],[[-1,2,-2,2],21,[],22],[[-1,2,-2,2],21,[],22],[[-1,2,-2,2],21,[],22],[[-1,2,-2,2],21,[],22],[[-1,2,-2,2],21,[],22],[[-1,2,-2,2],21,[],22],[[-1,2,-2,2],21,[],22],[[-1,2,-2,2],21,[],22],[[-1,2,-2,2],21,[],22],[[-1,2,-2,2],21,[],22],[[57,57],57],[[55,55],55],[[58,58],58],[[59,59],59],[[57,57],3],[[55,55],3],[[58,58],3],[[59,59],3],[[57,57],57],[[55,55],55],[[58,58],58],[[59,59],59],[[57,57],3],[[55,55],3],[[58,58],3],[[59,59],3],[57,14],[57,14],[55,14],[55,14],[58,14],[58,14],[59,14],[59,14],[[57,57],57],[[55,55],55],[[58,58],58],[[59,59],59],[[57,57],3],[[55,55],3],[[58,58],3],[[59,59],3],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[198,14],[198,14],[-1,[[24,[-2]]],[],25],[-1,[[24,[-2]]],[],25],[-1,[[24,[-2]]],[],25],[-1,[[24,[-2]]],[],25],[-1,[[24,[-2]]],[],25],[-1,[[24,[-2]]],[],25],[-1,[[24,[-2]]],[],25],[-1,[[24,[-2]]],[],25],[-1,[[24,[-2]]],[],25],[-1,[[24,[-2]]],[],25],[-1,[[5,[[24,[-2]]]]],[],25],[-1,[[5,[[24,[-2]]]]],[],25],[-1,[[5,[[24,[-2]]]]],[],25],[-1,[[5,[[24,[-2]]]]],[],25],[-1,[[5,[[24,[-2]]]]],[],25],[-1,[[5,[[24,[-2]]]]],[],25],[-1,[[5,[[24,[-2]]]]],[],25],[-1,[[5,[[24,[-2]]]]],[],25],[-1,[[5,[[24,[-2]]]]],[],25],[-1,[[5,[[24,[-2]]]]],[],25],[199,3],[199,3],[200,200],[201,201],[202,202],[203,203],[188,188],[189,189],[190,190],[204,204],[205,205],[191,191],[84,84],[195,195],[206,206],[207,207],[208,208],[193,193],[57,57],[55,55],[58,58],[59,59],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[200,200],29],[[201,201],29],[[202,202],29],[[203,203],29],[[188,188],29],[[189,189],29],[[190,190],29],[[204,204],29],[[205,205],29],[[191,191],29],[[84,84],29],[[195,195],29],[[206,206],29],[[207,207],29],[[208,208],29],[57,57],[55,55],[58,58],[59,59],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[198,-1],23,[[35,[198,14]]]],[[198,-1],23,[[35,[198,14]]]],[[198,-1],23,[[35,[198]]]],[[198,-1],23,[[35,[198]]]],[[199,-1],23,[[35,[199,14,[5,[2]],[5,[2]],[5,[2]]]]]],[[199,-1],23,[[35,[199,14,[5,[2]],[5,[2]],[5,[2]]]]]],[[-1,2,31,37],23,[]],[[-1,2,31,37],23,[]],[[-1,2,31,37],23,[]],[[-1,2,31,37],23,[]],[[-1,2,31,37],23,[]],[[-1,2,31,37],23,[]],[[-1,2,31,37],23,[]],[[-1,2,31,37],23,[]],[[-1,2,31,37],23,[]],[[-1,2,31,37],23,[]],[[-1,38,[5,[39]],31,37],23,[]],[[-1,38,[5,[39]],31,37],23,[]],[[-1,38,[5,[39]],31,37],23,[]],[[-1,38,[5,[39]],31,37],23,[]],[[-1,38,[5,[39]],31,37],23,[]],[[-1,38,[5,[39]],31,37],23,[]],[[-1,38,[5,[39]],31,37],23,[]],[[-1,38,[5,[39]],31,37],23,[]],[[-1,38,[5,[39]],31,37],23,[]],[[-1,38,[5,[39]],31,37],23,[]],[[209,-1],23,[[35,[209]]]],[[209,-1],23,[[35,[209]]]],[[198,-1],23,[[35,[198,109,109,2]]]],[[198,-1],23,[[35,[198,109,109,2]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[190,-1],23,[[35,[190]]]],[[190,-1],23,[[35,[190]]]],[[209,-1],23,[[35,[209]]]],[[209,-1],23,[[35,[209]]]],[[190,-1],23,[[35,[190]]]],[[190,-1],23,[[35,[190]]]],[[209,-1],23,[[35,[209]]]],[[209,-1],23,[[35,[209]]]],[[210,-1],23,[[35,[210]]]],[[210,-1],23,[[35,[210]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]],19,36]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]],19,36]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]],19,36]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]],19,36]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]],19,36]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]],19,36]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]],19,36]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]],19,36]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]],19,36]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]],19,36]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[210,-1],23,[[35,[210]]]],[[210,-1],23,[[35,[210]]]],[[210,-1],23,[[35,[210,2]]]],[[210,-1],23,[[35,[210,2]]]],[[197,-1],23,[[35,[197]]]],[[197,-1],23,[[35,[197]]]],[[190,-1],23,[[35,[190]]]],[[210,-1],23,[[35,[210]]]],[[210,-1],23,[[35,[210]]]],[[198,-1],23,[[35,[198]]]],[[198,-1],23,[[35,[198]]]],[[198,-1],23,[[35,[198]]]],[[198,-1],23,[[35,[198]]]],[[188,-1],23,[[35,[188,207,207]]]],[[190,-1],23,[[35,[190,208,208]]]],[[188,-1],23,[[35,[188]]]],[[190,-1],23,[[35,[190]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[57,57],31],[[55,55],31],[[58,58],31],[[59,59],31],[84,[[5,[84]]]],[84,14],[[-1,2],[[5,[[41,[-2]]]]],[],[]],[[-1,2],[[5,[[41,[-2]]]]],[],[]],[[-1,2],[[5,[[41,[-2]]]]],[],[]],[[-1,2],[[5,[[41,[-2]]]]],[],[]],[[-1,2],[[5,[[41,[-2]]]]],[],[]],[[-1,2],[[5,[[41,[-2]]]]],[],[]],[[-1,2],[[5,[[41,[-2]]]]],[],[]],[[-1,2],[[5,[[41,[-2]]]]],[],[]],[[-1,2],[[5,[[41,[-2]]]]],[],[]],[[-1,2],[[5,[[41,[-2]]]]],[],[]],[[188,-1],3,[[69,[59]]]],[[189,-1],3,[[69,[58]]]],[[190,-1],3,[[69,[55]]]],[[191,-1],3,[[69,[57]]]],[[],84],[193,-1,[]],[190,[[9,[[5,[[3,[14,[5,[14]]]]]],8]]]],[190,[[9,[[5,[14]],8]]]],[190,[[9,[[5,[14]],8]]]],[[57,57],57],[[55,55],55],[[58,58],58],[[59,59],59],[209,206],[209,206],[205,206],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[[-1,38,[33,[44]]],-2,[],45],[[-1,38,[33,[44]]],-2,[],45],[[-1,38,[33,[44]]],-2,[],45],[[-1,38,[33,[44]]],-2,[],45],[[-1,38,[33,[44]]],-2,[],45],[[-1,38,[33,[44]]],-2,[],45],[[-1,38,[33,[44]]],-2,[],45],[[-1,38,[33,[44]]],-2,[],45],[[-1,38,[33,[44]]],-2,[],45],[[-1,38,[33,[44]]],-2,[],45],[[-1,2,[33,[44]]],-2,[],45],[[-1,2,[33,[44]]],-2,[],45],[[-1,2,[33,[44]]],-2,[],45],[[-1,2,[33,[44]]],-2,[],45],[[-1,2,[33,[44]]],-2,[],45],[[-1,2,[33,[44]]],-2,[],45],[[-1,2,[33,[44]]],-2,[],45],[[-1,2,[33,[44]]],-2,[],45],[[-1,2,[33,[44]]],-2,[],45],[[-1,2,[33,[44]]],-2,[],45],[[-1,2,39,[33,[44]]],-2,[],45],[[-1,2,39,[33,[44]]],-2,[],45],[[-1,2,39,[33,[44]]],-2,[],45],[[-1,2,39,[33,[44]]],-2,[],45],[[-1,2,39,[33,[44]]],-2,[],45],[[-1,2,39,[33,[44]]],-2,[],45],[[-1,2,39,[33,[44]]],-2,[],45],[[-1,2,39,[33,[44]]],-2,[],45],[[-1,2,39,[33,[44]]],-2,[],45],[[-1,2,39,[33,[44]]],-2,[],45],[[-1,2,39,[33,[32]]],[[5,[32]]],[]],[[-1,2,39,[33,[32]]],[[5,[32]]],[]],[[-1,2,39,[33,[32]]],[[5,[32]]],[]],[[-1,2,39,[33,[32]]],[[5,[32]]],[]],[[-1,2,39,[33,[32]]],[[5,[32]]],[]],[[-1,2,39,[33,[32]]],[[5,[32]]],[]],[[-1,2,39,[33,[32]]],[[5,[32]]],[]],[[-1,2,39,[33,[32]]],[[5,[32]]],[]],[[-1,2,39,[33,[32]]],[[5,[32]]],[]],[[-1,2,39,[33,[32]]],[[5,[32]]],[]],[[-1,2,[33,[32]]],[[5,[32]]],[]],[[-1,2,[33,[32]]],[[5,[32]]],[]],[[-1,2,[33,[32]]],[[5,[32]]],[]],[[-1,2,[33,[32]]],[[5,[32]]],[]],[[-1,2,[33,[32]]],[[5,[32]]],[]],[[-1,2,[33,[32]]],[[5,[32]]],[]],[[-1,2,[33,[32]]],[[5,[32]]],[]],[[-1,2,[33,[32]]],[[5,[32]]],[]],[[-1,2,[33,[32]]],[[5,[32]]],[]],[[-1,2,[33,[32]]],[[5,[32]]],[]],[[-1,38,39,[33,[44]]],-2,[],45],[[-1,38,39,[33,[44]]],-2,[],45],[[-1,38,39,[33,[44]]],-2,[],45],[[-1,38,39,[33,[44]]],-2,[],45],[[-1,38,39,[33,[44]]],-2,[],45],[[-1,38,39,[33,[44]]],-2,[],45],[[-1,38,39,[33,[44]]],-2,[],45],[[-1,38,39,[33,[44]]],-2,[],45],[[-1,38,39,[33,[44]]],-2,[],45],[[-1,38,39,[33,[44]]],-2,[],45],[[-1,38,39,[33,[32]]],[[5,[32]]],[]],[[-1,38,39,[33,[32]]],[[5,[32]]],[]],[[-1,38,39,[33,[32]]],[[5,[32]]],[]],[[-1,38,39,[33,[32]]],[[5,[32]]],[]],[[-1,38,39,[33,[32]]],[[5,[32]]],[]],[[-1,38,39,[33,[32]]],[[5,[32]]],[]],[[-1,38,39,[33,[32]]],[[5,[32]]],[]],[[-1,38,39,[33,[32]]],[[5,[32]]],[]],[[-1,38,39,[33,[32]]],[[5,[32]]],[]],[[-1,38,39,[33,[32]]],[[5,[32]]],[]],[[-1,38,[33,[32]]],[[5,[32]]],[]],[[-1,38,[33,[32]]],[[5,[32]]],[]],[[-1,38,[33,[32]]],[[5,[32]]],[]],[[-1,38,[33,[32]]],[[5,[32]]],[]],[[-1,38,[33,[32]]],[[5,[32]]],[]],[[-1,38,[33,[32]]],[[5,[32]]],[]],[[-1,38,[33,[32]]],[[5,[32]]],[]],[[-1,38,[33,[32]]],[[5,[32]]],[]],[[-1,38,[33,[32]]],[[5,[32]]],[]],[[-1,38,[33,[32]]],[[5,[32]]],[]],[[],57],[[],55],[[],58],[[],59],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[84,[[5,[84]]]],[[210,[5,[2]],[5,[86]],[5,[-1]],-2],3,[[7,[6]]],[[10,[[9,[[5,[117]],8]]]]]],[[210,[5,[2]],[5,[86]],[5,[-1]],-2],3,[[7,[6]]],[[10,[[9,[[5,[117]],8]]]]]],[[210,[5,[2]],[5,[86]]],[[17,[[16,[15]]]]]],[[210,[5,[2]],[5,[86]]],[[17,[[16,[15]]]]]],[[210,2,[5,[86]]],[[5,[117]]]],[[210,2,[5,[86]]],[[5,[117]]]],[[200,-1],31,22],[[201,-1],31,22],[[202,-1],31,22],[[203,-1],31,22],[[188,-1],31,22],[[189,-1],31,22],[[190,-1],31,22],[[204,-1],31,22],[[205,-1],31,22],[[191,-1],31,22],[[84,84],31],[[195,195],31],[[206,206],31],[[207,207],31],[[208,208],31],[[57,57],31],[[55,55],31],[[58,58],31],[[59,59],31],[8,31],[[84,-3],3,[[101,[2]]],211,[[47,[],[[46,[[3,[-1,-2]]]]]]]],[[57,-1],3,[[47,[],[[46,[57]]]]]],[[55,-1],3,[[47,[],[[46,[55]]]]]],[[58,-1],3,[[47,[],[[46,[58]]]]]],[[59,-1],3,[[47,[],[[46,[59]]]]]],0,[[190,[212,[205]]],[[49,[205]]]],[[199,14,2],[[3,[[5,[96]],[5,[96]]]]]],[[199,14,2],[[3,[[5,[96]],[5,[96]]]]]],[[-1,2],[[5,[40]]],[]],[[-1,2],[[5,[40]]],[]],[[-1,2],[[5,[40]]],[]],[[-1,2],[[5,[40]]],[]],[[-1,2],[[5,[40]]],[]],[[-1,2],[[5,[40]]],[]],[[-1,2],[[5,[40]]],[]],[[-1,2],[[5,[40]]],[]],[[-1,2],[[5,[40]]],[]],[[-1,2],[[5,[40]]],[]],[[200,50],51],[[201,50],51],[[202,50],51],[[203,50],51],[[188,50],51],[[189,50],51],[[190,50],51],[[190,50],51],[[204,50],51],[[204,50],51],[[205,50],51],[[205,50],51],[[191,50],51],[[84,50],51],[[195,50],51],[[206,50],51],[[206,50],51],[[207,50],51],[[208,50],51],[[57,50],51],[[57,50],51],[[57,50],51],[[57,50],51],[[57,50],51],[[55,50],51],[[55,50],51],[[55,50],51],[[55,50],51],[[55,50],51],[[58,50],51],[[58,50],51],[[58,50],51],[[58,50],51],[[58,50],51],[[59,50],51],[[59,50],51],[[59,50],51],[[59,50],51],[[59,50],51],[-1,52,[]],[-1,52,[]],[-1,52,[]],[-1,52,[]],[-1,52,[]],[-1,52,[]],[-1,52,[]],[-1,52,[]],[-1,52,[]],[-1,52,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[213,206],[-1,-1,[]],[[[9,[207,-1]]],207,[]],[-1,-1,[]],[[[9,[208,-1]]],208,[]],[-1,-1,[]],[58,57],[4,57],[55,57],[-1,-1,[]],[56,57],[59,57],[4,55],[57,55],[-1,-1,[]],[-1,-1,[]],[4,58],[57,58],[4,59],[57,59],[-1,-1,[]],[14,[[5,[57]]]],[14,[[5,[55]]]],[14,[[5,[58]]]],[14,[[5,[59]]]],[14,57],[14,57],[14,55],[14,55],[14,58],[14,58],[14,59],[14,59],[14,57],[14,55],[14,58],[14,59],[[27,2,[5,[84]]],[[5,[201]]]],[[27,2,[5,[84]]],[[5,[188]]]],[[27,2,[5,[84]]],[[5,[190]]]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[194,84],[196,195],[-1,84,[[47,[],[[46,[[3,[30,30]]]]]]]],[-1,57,[[47,[],[[46,[57]]]]]],[-1,55,[[47,[],[[46,[55]]]]]],[-1,58,[[47,[],[[46,[58]]]]]],[-1,59,[[47,[],[[46,[59]]]]]],[2,[[5,[57]]]],[2,[[5,[55]]]],[2,[[5,[58]]]],[2,[[5,[59]]]],[2,[[9,[[94,[],[[214,[-1]]]],-1]]],123],[2,[[9,[206,-1]]],[]],[32,206],[32,207],[32,208],[32,57],[32,55],[32,58],[32,59],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[84,2],[[5,[96]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[215,2],[[5,[30]]]],[[-1,2],[[5,[30]]],[]],[[-1,2],[[5,[30]]],[]],[[-1,2],[[5,[30]]],[]],[[-1,2],[[5,[30]]],[]],[[-1,2],[[5,[30]]],[]],[[-1,2],[[5,[30]]],[]],[[-1,2],[[5,[30]]],[]],[[215,2],[[5,[66]]]],[[-1,2],[[5,[66]]],[]],[[-1,2],[[5,[66]]],[]],[[-1,2],[[5,[66]]],[]],[[-1,2],[[5,[66]]],[]],[[-1,2],[[5,[66]]],[]],[[-1,2],[[5,[66]]],[]],[[-1,2],[[5,[66]]],[]],[197,[[5,[84]]]],[197,[[5,[84]]]],[[-1,-3,-5],23,[],67,[[69,[[68,[-2]]]]],70,[[35,[-4],[[34,[]]]]]],[[-1,-3,-5],23,[],67,[[69,[[68,[-2]]]]],70,[[35,[-4],[[34,[]]]]]],[[-1,-3,-5],23,[],67,[[69,[[68,[-2]]]]],70,[[35,[-4],[[34,[]]]]]],[[-1,-3,-5],23,[],67,[[69,[[68,[-2]]]]],70,[[35,[-4],[[34,[]]]]]],[[-1,-3,-5],23,[],67,[[69,[[68,[-2]]]]],70,[[35,[-4],[[34,[]]]]]],[[-1,-3,-5],23,[],67,[[69,[[68,[-2]]]]],70,[[35,[-4],[[34,[]]]]]],[[-1,-3,-5],23,[],67,[[69,[[68,[-2]]]]],70,[[35,[-4],[[34,[]]]]]],[[-1,-3,-5],23,[],67,[[69,[[68,[-2]]]]],70,[[35,[-4],[[34,[]]]]]],[[-1,-3,-5],23,[],67,[[69,[[68,[-2]]]]],70,[[35,[-4],[[34,[]]]]]],[[-1,-3,-5],23,[],67,[[69,[[68,[-2]]]]],70,[[35,[-4],[[34,[]]]]]],[[-1,68,11],[[9,[23,71]]],[]],[[-1,68,11],[[9,[23,71]]],[]],[[-1,68,11],[[9,[23,71]]],[]],[[-1,68,11],[[9,[23,71]]],[]],[[-1,68,11],[[9,[23,71]]],[]],[[-1,68,11],[[9,[23,71]]],[]],[[-1,68,11],[[9,[23,71]]],[]],[[-1,68,11],[[9,[23,71]]],[]],[[-1,68,11],[[9,[23,71]]],[]],[[-1,68,11],[[9,[23,71]]],[]],[[-1,2,[5,[72]]],31,[]],[[-1,2,[5,[72]]],31,[]],[[-1,2,[5,[72]]],31,[]],[[-1,2,[5,[72]]],31,[]],[[-1,2,[5,[72]]],31,[]],[[-1,2,[5,[72]]],31,[]],[[-1,2,[5,[72]]],31,[]],[[-1,2,[5,[72]]],31,[]],[[-1,2,[5,[72]]],31,[]],[[-1,2,[5,[72]]],31,[]],[[200,-1],3,73],[[201,-1],3,73],[[202,-1],3,73],[[203,-1],3,73],[[188,-1],3,73],[[189,-1],3,73],[[190,-1],3,73],[[204,-1],3,73],[[205,-1],3,73],[[191,-1],3,73],[[84,-1],3,73],[[195,-1],3,73],[[206,-1],3,73],[[207,-1],3,73],[[208,-1],3,73],[[57,-1],3,73],[[55,-1],3,73],[[58,-1],3,73],[[59,-1],3,73],[[84,2,-1],3,211],[[57,57],3],[[55,55],3],[[58,58],3],[[59,59],3],[-1,[[5,[[76,[-2]]]]],[],77],[-1,[[5,[[76,[-2]]]]],[],77],[-1,[[5,[[76,[-2]]]]],[],77],[-1,[[5,[[76,[-2]]]]],[],77],[-1,[[5,[[76,[-2]]]]],[],77],[-1,[[5,[[76,[-2]]]]],[],77],[-1,[[5,[[76,[-2]]]]],[],77],[-1,[[5,[[76,[-2]]]]],[],77],[-1,[[5,[[76,[-2]]]]],[],77],[-1,[[5,[[76,[-2]]]]],[],77],[198,[[3,[96,14]]]],[198,[[3,[96,14]]]],[[57,57],57],[[55,55],55],[[58,58],58],[[59,59],59],[[57,57],31],[[55,55],31],[[58,58],31],[[59,59],31],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[195,[[3,[30,30]]]],[195,[[3,[30,30]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[193,2],[-1,-2,[],[]],[193,2],[193,30],[193,30],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[190,-1,[]],[190,-1,[]],[84,-1,[]],[84,-1,[]],[57,-1,[]],[55,-1,[]],[58,-1,[]],[59,-1,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[57,31],[55,31],[58,31],[59,31],[57,31],[55,31],[58,31],[59,31],[84,[[49,[195]]]],[84,[[217,[[216,[195]]]]]],[57,[[78,[57]]]],[55,[[78,[55]]]],[58,[[78,[58]]]],[59,[[78,[59]]]],[57,[[79,[57]]]],[55,[[79,[55]]]],[58,[[79,[58]]]],[59,[[79,[59]]]],[32,[[3,[14,96,96,96]]]],[32,[[5,[96]]]],[32,[[5,[96]]]],[195,[[5,[96]]]],[195,30],[195,[[3,[30,30]]]],[84,[[0,[[155,[],[[46,[30]]]]]]]],[188,[[3,[14,14,14,14]]]],[-1,[[80,[40]]],[]],[-1,[[80,[40]]],[]],[-1,[[80,[40]]],[]],[-1,[[80,[40]]],[]],[-1,[[80,[40]]],[]],[-1,[[80,[40]]],[]],[-1,[[80,[40]]],[]],[-1,[[80,[40]]],[]],[-1,[[80,[40]]],[]],[-1,[[80,[40]]],[]],[[190,[212,[205]]],[[5,[205]]]],[[190,218],[[5,[205]]]],[[84,84],31],[190,14],[190,14],[209,[[5,[96]]]],[209,[[5,[96]]]],[190,[[3,[14,14]]]],[190,[[3,[14,14]]]],[190,14],[209,[[5,[96]]]],[209,[[5,[96]]]],[190,[[5,[30]]]],[206,2],[215,219],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[[27,-1,-2,84],[[9,[188,8]]],[220,123],[220,123]],[[],84],[84,84],[221,84],[192,84],[[199,14],[[5,[117]]]],[[199,14],[[5,[117]]]],[210,[[5,[117]]]],[210,[[5,[117]]]],[2,84],[221,84],[192,84],[221,84],[205,[[9,[14,8]]]],[57,57],[55,55],[58,58],[59,59],[[-1,2],3,[]],[[-1,2],3,[]],[[-1,2],3,[]],[[-1,2],3,[]],[[-1,2],3,[]],[[-1,2],3,[]],[[-1,2],3,[]],[[-1,2],3,[]],[[-1,2],3,[]],[[-1,2],3,[]],[[-1,40],3,[]],[[-1,40],3,[]],[[-1,40],3,[]],[[-1,40],3,[]],[[-1,40],3,[]],[[-1,40],3,[]],[[-1,40],3,[]],[[-1,40],3,[]],[[-1,40],3,[]],[[-1,40],3,[]],[-1,[[24,[85]]],[]],[-1,[[24,[85]]],[]],[-1,[[24,[85]]],[]],[-1,[[24,[85]]],[]],[-1,[[24,[85]]],[]],[-1,[[24,[85]]],[]],[-1,[[24,[85]]],[]],[-1,[[24,[85]]],[]],[-1,[[24,[85]]],[]],[-1,[[24,[85]]],[]],[215,[[9,[14,8]]]],[-1,[[9,[14,8]]],[]],[-1,[[9,[14,8]]],[]],[-1,[[9,[14,8]]],[]],[-1,[[9,[14,8]]],[]],[-1,[[9,[14,8]]],[]],[-1,[[9,[14,8]]],[]],[-1,[[9,[14,8]]],[]],[210,[[5,[81]]]],[210,[[5,[81]]]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[215,[5,[2]],[5,[86]]],[[17,[[16,[15]]]]]],[[-1,[5,[2]],[5,[86]]],[[17,[[16,[15]]]]],[]],[[-1,[5,[2]],[5,[86]]],[[17,[[16,[15]]]]],[]],[[-1,[5,[2]],[5,[86]]],[[17,[[16,[15]]]]],[]],[[-1,[5,[2]],[5,[86]]],[[17,[[16,[15]]]]],[]],[[-1,[5,[2]],[5,[86]]],[[17,[[16,[15]]]]],[]],[[-1,[5,[2]],[5,[86]]],[[17,[[16,[15]]]]],[]],[[-1,[5,[2]],[5,[86]]],[[17,[[16,[15]]]]],[]],[[[24,[-1]]],3,[]],[[[24,[-1]]],3,[]],[[[24,[-1]]],3,[]],[[[24,[-1]]],3,[]],[[[24,[-1]]],3,[]],[[[24,[-1]]],3,[]],[[[24,[-1]]],3,[]],[[[24,[-1]]],3,[]],[[[24,[-1]]],3,[]],[[[89,[-1]]],3,90],[[[89,[-1]]],3,90],[[[89,[-1]]],3,90],[[[89,[-1]]],3,90],[[[89,[-1]]],3,90],[[[89,[-1]]],3,90],[[[89,[-1]]],3,90],[[[89,[-1]]],3,90],[[[89,[-1]]],3,90],[[200,-1],[[5,[29]]],22],[[201,-1],[[5,[29]]],22],[[202,-1],[[5,[29]]],22],[[203,-1],[[5,[29]]],22],[[188,-1],[[5,[29]]],22],[[189,-1],[[5,[29]]],22],[[190,-1],[[5,[29]]],22],[[204,-1],[[5,[29]]],22],[[205,-1],[[5,[29]]],22],[[191,-1],[[5,[29]]],22],[[84,84],[[5,[29]]]],[[195,195],[[5,[29]]]],[[206,206],[[5,[29]]]],[[207,207],[[5,[29]]]],[[208,208],[[5,[29]]]],[84,192],[197,14],[197,14],[[[211,[],[[34,[-1]]]]],-1,[[101,[2]]]],[[[222,[-2]]],-3,211,[[47,[],[[46,[-1]]]]],[]],[223,[[222,[223]]]],[223,[[222,[223]]]],[205,[[9,[14,8]]]],[190,[[216,[205]]]],[[190,218],[[49,[205]]]],[210,[[5,[84]]]],[210,[[5,[84]]]],[[-1,2],-2,[],91],[[-1,2],-2,[],91],[[-1,2],-2,[],91],[[-1,2],-2,[],91],[[-1,2],-2,[],91],[[-1,2],-2,[],91],[[-1,2],-2,[],91],[[-1,2],-2,[],91],[[-1,2],-2,[],91],[[-1,2],-2,[],91],[[-1,2],[[5,[72]]],[]],[[-1,2],[[5,[72]]],[]],[[-1,2],[[5,[72]]],[]],[[-1,2],[[5,[72]]],[]],[[-1,2],[[5,[72]]],[]],[[-1,2],[[5,[72]]],[]],[[-1,2],[[5,[72]]],[]],[[-1,2],[[5,[72]]],[]],[[-1,2],[[5,[72]]],[]],[[-1,2],[[5,[72]]],[]],[[-1,2],32,[]],[[-1,2],32,[]],[[-1,2],32,[]],[[-1,2],32,[]],[[-1,2],32,[]],[[-1,2],32,[]],[[-1,2],32,[]],[[-1,2],32,[]],[[-1,2],32,[]],[[-1,2],32,[]],[190,224],[[215,2],[[9,[-1,8]]],94],[[-1,2],[[9,[-2,8]]],[],94],[[-1,2],[[9,[-2,8]]],[],94],[[-1,2],[[9,[-2,8]]],[],94],[[-1,2],[[9,[-2,8]]],[],94],[[-1,2],[[9,[-2,8]]],[],94],[[-1,2],[[9,[-2,8]]],[],94],[[-1,2],[[9,[-2,8]]],[],94],[[215,2],[[9,[[5,[-1]],8]]],94],[[-1,2],[[9,[[5,[-2]],8]]],[],94],[[-1,2],[[9,[[5,[-2]],8]]],[],94],[[-1,2],[[9,[[5,[-2]],8]]],[],94],[[-1,2],[[9,[[5,[-2]],8]]],[],94],[[-1,2],[[9,[[5,[-2]],8]]],[],94],[[-1,2],[[9,[[5,[-2]],8]]],[],94],[[-1,2],[[9,[[5,[-2]],8]]],[],94],[225,95],[-1,95,[]],[-1,95,[]],[-1,95,[]],[-1,95,[]],[-1,95,[]],[-1,95,[]],[-1,95,[]],[-1,95,[]],[-1,95,[]],[-1,95,[]],[[-1,39],[[5,[[41,[-2]]]]],[],[]],[[-1,39],[[5,[[41,[-2]]]]],[],[]],[[-1,39],[[5,[[41,[-2]]]]],[],[]],[[-1,39],[[5,[[41,[-2]]]]],[],[]],[[-1,39],[[5,[[41,[-2]]]]],[],[]],[[-1,39],[[5,[[41,[-2]]]]],[],[]],[[-1,39],[[5,[[41,[-2]]]]],[],[]],[[-1,39],[[5,[[41,[-2]]]]],[],[]],[[-1,39],[[5,[[41,[-2]]]]],[],[]],[[-1,39],[[5,[[41,[-2]]]]],[],[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[[84,2],31],[[57,57],3],[[55,55],3],[[58,58],3],[[59,59],3],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[197,3],[197,3],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[[190,2],3],[[200,14,109,2],3],[[199,14,[5,[2]],[5,[2]],[5,[2]]],3],[[199,14,[5,[2]],[5,[2]],[5,[2]]],3],[[84,2,[5,[2]]],109],[[57,57,31],3],[[55,55,31],3],[[58,58,31],3],[[59,59,31],3],[[-1,2,-2],3,[],[]],[[-1,2,-2],3,[],[]],[[-1,2,-2],3,[],[]],[[-1,2,-2],3,[],[]],[[-1,2,-2],3,[],[]],[[-1,2,-2],3,[],[]],[[-1,2,-2],3,[],[]],[[-1,2,-2],3,[],[]],[[-1,2,-2],3,[],[]],[[-1,2,-2],3,[],[]],[[210,2,14,86],31],[[210,2,14,86],31],[[-1,[33,[[3,[2,44]]]]],3,[]],[[-1,[33,[[3,[2,44]]]]],3,[]],[[-1,[33,[[3,[2,44]]]]],3,[]],[[-1,[33,[[3,[2,44]]]]],3,[]],[[-1,[33,[[3,[2,44]]]]],3,[]],[[-1,[33,[[3,[2,44]]]]],3,[]],[[-1,[33,[[3,[2,44]]]]],3,[]],[[-1,[33,[[3,[2,44]]]]],3,[]],[[-1,[33,[[3,[2,44]]]]],3,[]],[[-1,[33,[[3,[2,44]]]]],3,[]],[[-1,[33,[[3,[2,32]]]]],3,[]],[[-1,[33,[[3,[2,32]]]]],3,[]],[[-1,[33,[[3,[2,32]]]]],3,[]],[[-1,[33,[[3,[2,32]]]]],3,[]],[[-1,[33,[[3,[2,32]]]]],3,[]],[[-1,[33,[[3,[2,32]]]]],3,[]],[[-1,[33,[[3,[2,32]]]]],3,[]],[[-1,[33,[[3,[2,32]]]]],3,[]],[[-1,[33,[[3,[2,32]]]]],3,[]],[[-1,[33,[[3,[2,32]]]]],3,[]],[[-1,2,-2],3,[],[[69,[32]]]],[[-1,2,-2],3,[],[[69,[32]]]],[[-1,2,-2],3,[],[[69,[32]]]],[[-1,2,-2],3,[],[[69,[32]]]],[[-1,2,-2],3,[],[[69,[32]]]],[[-1,2,-2],3,[],[[69,[32]]]],[[-1,2,-2],3,[],[[69,[32]]]],[[-1,2,-2],3,[],[[69,[32]]]],[[-1,2,-2],3,[],[[69,[32]]]],[[-1,2,-2],3,[],[[69,[32]]]],[[-1,2,32],3,[]],[[-1,2,32],3,[]],[[-1,2,32],3,[]],[[-1,2,32],3,[]],[[-1,2,32],3,[]],[[-1,2,32],3,[]],[[-1,2,32],3,[]],[[-1,2,32],3,[]],[[-1,2,32],3,[]],[[-1,2,32],3,[]],[[225,95],3],[[-1,95],3,[]],[[-1,95],3,[]],[[-1,95],3,[]],[[-1,95],3,[]],[[-1,95],3,[]],[[-1,95],3,[]],[[-1,95],3,[]],[[-1,95],3,[]],[[-1,95],3,[]],[[-1,95],3,[]],[[-1,39,-2],3,[],[]],[[-1,39,-2],3,[],[]],[[-1,39,-2],3,[],[]],[[-1,39,-2],3,[],[]],[[-1,39,-2],3,[],[]],[[-1,39,-2],3,[],[]],[[-1,39,-2],3,[],[]],[[-1,39,-2],3,[],[]],[[-1,39,-2],3,[],[]],[[-1,39,-2],3,[],[]],[[-1,-3],[[98,[-4]]],[],67,[[69,[[68,[-2]]]]],70],[[-1,-3],[[98,[-4]]],[],67,[[69,[[68,[-2]]]]],70],[[-1,-3],[[98,[-4]]],[],67,[[69,[[68,[-2]]]]],70],[[-1,-3],[[98,[-4]]],[],67,[[69,[[68,[-2]]]]],70],[[-1,-3],[[98,[-4]]],[],67,[[69,[[68,[-2]]]]],70],[[-1,-3],[[98,[-4]]],[],67,[[69,[[68,[-2]]]]],70],[[-1,-3],[[98,[-4]]],[],67,[[69,[[68,[-2]]]]],70],[[-1,-3],[[98,[-4]]],[],67,[[69,[[68,[-2]]]]],70],[[-1,-3],[[98,[-4]]],[],67,[[69,[[68,[-2]]]]],70],[[-1,-3],[[98,[-4]]],[],67,[[69,[[68,[-2]]]]],70],[84,3],[226,227],[[[228,[],[[214,[-1]]]],[5,[229]]],[[9,[227,-1]]],123],[188,207],[190,208],[188,[[9,[207,8]]]],[190,[[9,[208,8]]]],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[-1,2],[[5,[-2]]],[],[]],[[-1,2],[[5,[-2]]],[],[]],[[-1,2],[[5,[-2]]],[],[]],[[-1,2],[[5,[-2]]],[],[]],[[-1,2],[[5,[-2]]],[],[]],[[-1,2],[[5,[-2]]],[],[]],[[-1,2],[[5,[-2]]],[],[]],[[-1,2],[[5,[-2]]],[],[]],[[-1,2],[[5,[-2]]],[],[]],[[-1,2],[[5,[-2]]],[],[]],[[-1,39],[[5,[-2]]],[],[]],[[-1,39],[[5,[-2]]],[],[]],[[-1,39],[[5,[-2]]],[],[]],[[-1,39],[[5,[-2]]],[],[]],[[-1,39],[[5,[-2]]],[],[]],[[-1,39],[[5,[-2]]],[],[]],[[-1,39],[[5,[-2]]],[],[]],[[-1,39],[[5,[-2]]],[],[]],[[-1,39],[[5,[-2]]],[],[]],[[-1,39],[[5,[-2]]],[],[]],[[-1,38,[5,[39]]],3,[]],[[-1,38,[5,[39]]],3,[]],[[-1,38,[5,[39]]],3,[]],[[-1,38,[5,[39]]],3,[]],[[-1,38,[5,[39]]],3,[]],[[-1,38,[5,[39]]],3,[]],[[-1,38,[5,[39]]],3,[]],[[-1,38,[5,[39]]],3,[]],[[-1,38,[5,[39]]],3,[]],[[-1,38,[5,[39]]],3,[]],[[-1,2],3,[]],[[-1,2],3,[]],[[-1,2],3,[]],[[-1,2],3,[]],[[-1,2],3,[]],[[-1,2],3,[]],[[-1,2],3,[]],[[-1,2],3,[]],[[-1,2],3,[]],[[-1,2],3,[]],[[57,57],57],[[55,55],55],[[58,58],58],[[59,59],59],[[57,57],3],[[55,55],3],[[58,58],3],[[59,59],3],[188,59],[189,58],[190,55],[191,57],[[57,57],57],[[55,55],55],[[58,58],58],[[59,59],59],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[84,[[41,[221]]]],[-1,99,[]],[-1,99,[]],[-1,99,[]],[-1,99,[]],[-1,99,[]],[-1,99,[]],[-1,99,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[206,32],[207,32],[208,32],[57,32],[55,32],[58,32],[59,32],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[[57,57],3],[[55,55],3],[[58,58],3],[[59,59],3],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[57,57],57],[[55,55],55],[[58,58],58],[[59,59],59],[84,[[41,[221]]]],[[84,84],109],[[188,-1,-2],3,[[69,[59]]],[[69,[59]]]],[[189,-1,-2],3,[[69,[58]]],[[69,[58]]]],[[190,-1,-2],3,[[69,[55]]],[[69,[55]]]],[[191,-1,-2],3,[[69,[57]]],[[69,[57]]]],[[84,192],65],[[84,84,[33,[2]]],109],[[200,[33,[230]]],3],[195,[[5,[96]]]],[195,30],[206,72],[207,72],[208,72],[57,72],[55,72],[58,72],[59,72],[84,[[0,[[155,[],[[46,[30]]]]]]]],[[-1,-2],3,[],[[101,[11]]]],[[-1,-2],3,[],[[101,[11]]]],[[-1,-2],3,[],[[101,[11]]]],[[-1,-2],3,[],[[101,[11]]]],[[-1,-2],3,[],[[101,[11]]]],[[-1,-2],3,[],[[101,[11]]]],[[-1,-2],3,[],[[101,[11]]]],[[-1,-2],3,[],[[101,[11]]]],[[-1,-2],3,[],[[101,[11]]]],[[-1,-2],3,[],[[101,[11]]]],[[215,2,-2],[[5,[-1]]],[],[[10,[2],[[34,[-1]]]]]],[[-1,2,-3],[[5,[-2]]],[],[],[[10,[2],[[34,[-2]]]]]],[[-1,2,-3],[[5,[-2]]],[],[],[[10,[2],[[34,[-2]]]]]],[[-1,2,-3],[[5,[-2]]],[],[],[[10,[2],[[34,[-2]]]]]],[[-1,2,-3],[[5,[-2]]],[],[],[[10,[2],[[34,[-2]]]]]],[[-1,2,-3],[[5,[-2]]],[],[],[[10,[2],[[34,[-2]]]]]],[[-1,2,-3],[[5,[-2]]],[],[],[[10,[2],[[34,[-2]]]]]],[[-1,2,-3],[[5,[-2]]],[],[],[[10,[2],[[34,[-2]]]]]],[[215,2,-2],[[5,[-1]]],[],[[10,[102],[[34,[-1]]]]]],[[-1,2,-3],[[5,[-2]]],[],[],[[10,[102],[[34,[-2]]]]]],[[-1,2,-3],[[5,[-2]]],[],[],[[10,[102],[[34,[-2]]]]]],[[-1,2,-3],[[5,[-2]]],[],[],[[10,[102],[[34,[-2]]]]]],[[-1,2,-3],[[5,[-2]]],[],[],[[10,[102],[[34,[-2]]]]]],[[-1,2,-3],[[5,[-2]]],[],[],[[10,[102],[[34,[-2]]]]]],[[-1,2,-3],[[5,[-2]]],[],[],[[10,[102],[[34,[-2]]]]]],[[-1,2,-3],[[5,[-2]]],[],[],[[10,[102],[[34,[-2]]]]]],[[220,84,206],[[9,[3,8]]]],[[190,84,206],[[9,[3,8]]]],[[205,84,206],[[9,[3,8]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[218,231,2,232,[5,[81]]],3],[[75,-1],3,[[69,[218]]]],[[233,218],3],[[-1,-2],[[18,[-3]]],[],[10,19],[]],[[-1,-2],[[18,[-3]]],[],10,[]],[[],234],[[],235],[218,236],[[-1,2,-2,2],21,[],22],[[234,234],234],[[235,235],235],[[234,234],3],[[235,235],3],[[234,234],234],[[235,235],235],[[234,234],3],[[235,235],3],[234,14],[234,14],[235,14],[235,14],[[234,234],234],[[235,235],235],[[234,234],3],[[235,235],3],[[-1,23],3,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[24,[-2]]],[],25],[-1,[[5,[[24,[-2]]]]],[],25],[75,75],[218,218],[231,231],[232,232],[[[212,[-1]]],[[212,[-1]]],[121,237]],[233,233],[234,234],[235,235],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[75,75],29],[[218,218],29],[[231,231],29],[[232,232],29],[[231,-1,-2,31],233,[[69,[30]]],238],[234,234],[235,235],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,2,31,37],23,[]],[[-1,38,[5,[39]],31,37],23,[]],[[75,-1],23,[[35,[75]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[75,-1],23,[[35,[75]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]],19,36]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[75,-1],23,[[35,[75,85]]]],[[75,-1],23,[[35,[75,85]]]],[[75,-1],23,[[35,[75]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[[212,[-2]],-1],[[5,[-2]]],[[7,[85]]],[[7,[-1]],237]],[[234,234],31],[[235,235],31],[75,[[5,[27]]]],[[-1,2],[[5,[[41,[-2]]]]],[],[]],[[],75],[[],231],[[[212,[-1]]],-2,237,[]],[-1,[[9,[231]]],140],[-1,[[9,[232]]],140],[-1,[[9,[233]]],140],[[234,234],234],[[235,235],235],[[-1,23],3,[]],[-1,[[43,[-2]]],[],[]],[[-1,38,[33,[44]]],-2,[],45],[[-1,2,[33,[44]]],-2,[],45],[[-1,2,39,[33,[44]]],-2,[],45],[[-1,2,39,[33,[32]]],[[5,[32]]],[]],[[-1,2,[33,[32]]],[[5,[32]]],[]],[[-1,38,39,[33,[44]]],-2,[],45],[[-1,38,39,[33,[32]]],[[5,[32]]],[]],[[-1,38,[33,[32]]],[[5,[32]]],[]],[[],234],[[],235],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[75,-1],31,22],[[218,218],31],[[231,231],31],[[232,232],31],[[234,234],31],[[235,235],31],[[[212,[-1]],-3],3,237,[[239,[233]]],[[47,[],[[46,[-2]]]]]],[[234,-1],3,[[47,[],[[46,[234]]]]]],[[235,-1],3,[[47,[],[[46,[235]]]]]],[[240,[212,[-1]]],[[49,[-1]]],237],[[75,[212,[-1]]],[[49,[-1]]],22],[[[212,[-1]],-2],[[49,[-1]]],237,[[240,[-1]]]],[[75,218],[[49,[-1]]],22],[[-1,2],[[5,[40]]],[]],[[75,50],51],[[218,50],51],[[231,50],51],[[231,50],51],[[232,50],51],[[232,50],51],[[[212,[-1]],50],51,[123,237]],[[233,50],51],[[234,50],51],[[234,50],51],[[234,50],51],[[234,50],51],[[234,50],51],[[235,50],51],[[235,50],51],[[235,50],51],[[235,50],51],[[235,50],51],[-1,52,[]],[-1,-1,[]],[[[212,[-1]]],218,237],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[14,[[5,[234]]]],[14,[[5,[235]]]],[14,234],[14,234],[14,235],[14,235],[14,234],[14,235],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[236,218],[-2,[[212,[-3]]],[[239,[233]]],[[47,[],[[46,[-1]]]]],237],[-1,234,[[47,[],[[46,[234]]]]]],[-1,235,[[47,[],[[46,[235]]]]]],[2,[[5,[234]]]],[2,[[5,[235]]]],[2,[[9,[231,-1]]],[]],[2,[[9,[232,-1]]],[]],[32,231],[32,232],[32,234],[32,235],[81,[[5,[231]]]],[81,[[5,[232]]]],[81,[[5,[233]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3,-5],23,[],67,[[69,[[68,[-2]]]]],70,[[35,[-4],[[34,[]]]]]],[[-1,68,11],[[9,[23,71]]],[]],[[231,-1,31],233,[[69,[30]]]],[[-1,2,[5,[72]]],31,[]],[[75,-1],3,73],[[218,-1],3,73],[[231,-1],3,73],[[232,-1],3,73],[[234,-1],3,73],[[235,-1],3,73],[[231,-1,-3],233,[[69,[30]]],238,[[155,[],[[46,[-2]]]]]],[[231,-1,-2,-2],233,[[69,[30]]],238],[[[212,[-1]]],218,237],[[234,234],3],[[235,235],3],[75,[[0,[[15,[],[[34,[[9,[3,8]]]]]]]]]],[-1,[[5,[[76,[-2]]]]],[],77],[[234,234],234],[[235,235],235],[[234,234],31],[[235,235],31],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[232,160],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[[[212,[-1]]],218,237],[75,-1,[]],[234,-1,[]],[235,-1,[]],[-1,31,[]],[234,31],[235,31],[234,31],[235,31],[75,31],[234,[[78,[234]]]],[235,[[78,[235]]]],[234,[[79,[234]]]],[235,[[79,[235]]]],[-1,[[80,[40]]],[]],[[240,[212,[-1]]],[[5,[-1]]],237],[[75,[212,[-1]]],[[5,[-1]]],22],[[75,[212,[-1]]],[[5,[-1]]],22],[[[212,[-1]],-2],[[5,[-1]]],237,[[240,[-1]]]],[[75,218],[[5,[85]]]],[[218,234,72,[5,[-1]],[5,[84]],[5,[84]]],235,[[7,[85]]]],[[231,-1,2],233,[[69,[30]]]],[[218,-1],31,[[7,[85]]]],[[[212,[-2]],-1],31,[[7,[85]]],[[7,[-1]],237]],[[218,84],31],[[218,-1],31,[[7,[204]]]],[75,14],[231,2],[[],75],[72,218],[[],[[212,[-1]]],237],[232,2],[234,234],[235,235],[[-1,2],3,[]],[[-1,40],3,[]],[-1,[[24,[85]]],[]],[75,[[49,[-1]]],22],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[[24,[-1]]],3,[]],[[[89,[-1]]],3,90],[[75,-1],[[5,[29]]],22],[[218,218],[[5,[29]]]],[[231,231],[[5,[29]]]],[[232,232],[[5,[29]]]],[[-1,2],-2,[],91],[[-1,2],[[5,[72]]],[]],[[-1,2],32,[]],[[-1,39],[[5,[[41,[-2]]]]],[],[]],[-1,14,[]],[[234,234],3],[[235,235],3],[[-1,23],3,[]],[[75,72,4],3],[-1,3,[]],[[231,-1],9,159],[[232,-1],9,159],[[233,-1],9,159],[[234,234,31],3],[[235,235,31],3],[[-1,2,-2],3,[],[]],[[-1,[33,[[3,[2,44]]]]],3,[]],[[-1,[33,[[3,[2,32]]]]],3,[]],[[-1,2,-2],3,[],[[69,[32]]]],[[-1,2,32],3,[]],[[-1,39,-2],3,[],[]],[[-1,-3],[[98,[-4]]],[],67,[[69,[[68,[-2]]]]],70],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[],[[146,[166]]]],[[],[[146,[166]]]],[[],[[146,[166]]]],[[-1,2],[[5,[-2]]],[],[]],[[-1,39],[[5,[-2]]],[],[]],[[-1,38,[5,[39]]],3,[]],[[-1,2],3,[]],[[234,234],234],[[235,235],235],[[234,234],3],[[235,235],3],0,[232,160],[[234,234],234],[[235,235],235],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,99,[]],[-1,99,[]],[-1,99,[]],[-1,99,[]],[-1,30,[]],[-1,30,[]],[231,32],[232,32],[234,32],[235,32],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[231,81],[232,81],[233,81],[[234,234],3],[[235,235],3],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[160,[[9,[232,-1]]],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,72,[]],0,[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[[-1,23],3,[]],[[234,234],234],[[235,235],235],[218,[[9,[3,8]]]],0,[231,72],[232,72],[232,[[5,[3]]]],[234,72],[235,72],0,[[-1,-2],3,[],[[101,[11]]]],[218,[[212,[-1]]],237],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[241,-1,-2,-3],3,[[7,[242]]],[[7,[243]]],[[10,[[9,[3,8]]]],19]],[[-1,-2,-3,-4],3,[],[[7,[242]]],[[7,[243]]],[[10,[[9,[3,8]]]],19]],[[241,-1,-2],[[17,[[16,[15]]]]],[[7,[242]]],[[7,[243]]]],[[-1,-2,-3],[[17,[[16,[15]]]]],[],[[7,[242]]],[[7,[243]]]],[244,[[5,[245]]]],[244,[[5,[245]]]],[[246,-1,[5,[-2]],-3],3,[[69,[53]]],[[7,[6]]],[[10,[[9,[3,8]]]],19]],[[246,-1,[5,[-2]],11],3,[[69,[53]]],[[7,[6]]]],[[246,-1],[[0,[[15,[],[[34,[[9,[3,8]]]]]],104]]],[[69,[53]]]],[246,53],[[-1,-2],[[18,[-3]]],[],[10,19],[]],[[-1,-2],[[18,[-3]]],[],[10,19],[]],[[-1,-2],[[18,[-3]]],[],[10,19],[]],[[-1,-2],[[18,[-3]]],[],[10,19],[]],[[-1,-2],[[18,[-3]]],[],[10,19],[]],[[-1,-2],[[18,[-3]]],[],[10,19],[]],[[-1,-2],[[18,[-3]]],[],[10,19],[]],[[-1,-2],[[18,[-3]]],[],10,[]],[[-1,-2],[[18,[-3]]],[],10,[]],[[-1,-2],[[18,[-3]]],[],10,[]],[[-1,-2],[[18,[-3]]],[],10,[]],[[-1,-2],[[18,[-3]]],[],10,[]],[[-1,-2],[[18,[-3]]],[],10,[]],[[-1,-2],[[18,[-3]]],[],10,[]],[[],53],[[247,72],[[5,[191]]]],[[247,72],[[5,[191]]]],[[247,72],14],[[247,72],14],[[-1,2,-2,2],21,[],22],[[-1,2,-2,2],21,[],22],[[-1,2,-2,2],21,[],22],[[-1,2,-2,2],21,[],22],[[-1,2,-2,2],21,[],22],[[-1,2,-2,2],21,[],22],[[-1,2,-2,2],21,[],22],[[53,53],53],[[53,53],3],[[53,53],53],[[53,53],3],[53,14],[53,14],[[53,53],53],[[53,53],3],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[24,[-2]]],[],25],[-1,[[24,[-2]]],[],25],[-1,[[24,[-2]]],[],25],[-1,[[24,[-2]]],[],25],[-1,[[24,[-2]]],[],25],[-1,[[24,[-2]]],[],25],[-1,[[24,[-2]]],[],25],[-1,[[5,[[24,[-2]]]]],[],25],[-1,[[5,[[24,[-2]]]]],[],25],[-1,[[5,[[24,[-2]]]]],[],25],[-1,[[5,[[24,[-2]]]]],[],25],[-1,[[5,[[24,[-2]]]]],[],25],[-1,[[5,[[24,[-2]]]]],[],25],[-1,[[5,[[24,[-2]]]]],[],25],[246,246],[245,245],[248,248],[116,116],[249,249],[242,242],[243,243],[250,250],[53,53],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[246,246],29],[[245,245],29],[[248,248],29],[[116,116],29],[[249,249],29],[[242,242],29],[[243,243],29],[[250,250],29],[53,53],[[247,84],31],[[247,84],31],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[251,-1],23,[[35,[251,250,250]]]],[[251,-1],23,[[35,[251,250,250]]]],[[-1,2,31,37],23,[]],[[-1,2,31,37],23,[]],[[-1,2,31,37],23,[]],[[-1,2,31,37],23,[]],[[-1,2,31,37],23,[]],[[-1,2,31,37],23,[]],[[-1,2,31,37],23,[]],[[-1,38,[5,[39]],31,37],23,[]],[[-1,38,[5,[39]],31,37],23,[]],[[-1,38,[5,[39]],31,37],23,[]],[[-1,38,[5,[39]],31,37],23,[]],[[-1,38,[5,[39]],31,37],23,[]],[[-1,38,[5,[39]],31,37],23,[]],[[-1,38,[5,[39]],31,37],23,[]],[[252,-1],23,[[35,[252]]]],[[252,-1],23,[[35,[252]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[247,-1],23,[[35,[247]]]],[[247,-1],23,[[35,[247]]]],[[253,-1],23,[[35,[253]]]],[[253,-1],23,[[35,[253]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]],19,36]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]],19,36]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]],19,36]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]],19,36]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]],19,36]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]],19,36]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]],19,36]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[247,-1],23,[[35,[247]]]],[[247,-1],23,[[35,[247]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[254,27],[[5,[246]]]],[[254,27],[[5,[246]]]],[[53,53],31],[[-1,2],[[5,[[41,[-2]]]]],[],[]],[[-1,2],[[5,[[41,[-2]]]]],[],[]],[[-1,2],[[5,[[41,[-2]]]]],[],[]],[[-1,2],[[5,[[41,[-2]]]]],[],[]],[[-1,2],[[5,[[41,[-2]]]]],[],[]],[[-1,2],[[5,[[41,[-2]]]]],[],[]],[[-1,2],[[5,[[41,[-2]]]]],[],[]],[[246,-1],3,[[69,[53]]]],[[53,53],53],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[[-1,38,[33,[44]]],-2,[],45],[[-1,38,[33,[44]]],-2,[],45],[[-1,38,[33,[44]]],-2,[],45],[[-1,38,[33,[44]]],-2,[],45],[[-1,38,[33,[44]]],-2,[],45],[[-1,38,[33,[44]]],-2,[],45],[[-1,38,[33,[44]]],-2,[],45],[[-1,2,[33,[44]]],-2,[],45],[[-1,2,[33,[44]]],-2,[],45],[[-1,2,[33,[44]]],-2,[],45],[[-1,2,[33,[44]]],-2,[],45],[[-1,2,[33,[44]]],-2,[],45],[[-1,2,[33,[44]]],-2,[],45],[[-1,2,[33,[44]]],-2,[],45],[[-1,2,39,[33,[44]]],-2,[],45],[[-1,2,39,[33,[44]]],-2,[],45],[[-1,2,39,[33,[44]]],-2,[],45],[[-1,2,39,[33,[44]]],-2,[],45],[[-1,2,39,[33,[44]]],-2,[],45],[[-1,2,39,[33,[44]]],-2,[],45],[[-1,2,39,[33,[44]]],-2,[],45],[[-1,2,39,[33,[32]]],[[5,[32]]],[]],[[-1,2,39,[33,[32]]],[[5,[32]]],[]],[[-1,2,39,[33,[32]]],[[5,[32]]],[]],[[-1,2,39,[33,[32]]],[[5,[32]]],[]],[[-1,2,39,[33,[32]]],[[5,[32]]],[]],[[-1,2,39,[33,[32]]],[[5,[32]]],[]],[[-1,2,39,[33,[32]]],[[5,[32]]],[]],[[-1,2,[33,[32]]],[[5,[32]]],[]],[[-1,2,[33,[32]]],[[5,[32]]],[]],[[-1,2,[33,[32]]],[[5,[32]]],[]],[[-1,2,[33,[32]]],[[5,[32]]],[]],[[-1,2,[33,[32]]],[[5,[32]]],[]],[[-1,2,[33,[32]]],[[5,[32]]],[]],[[-1,2,[33,[32]]],[[5,[32]]],[]],[[-1,38,39,[33,[44]]],-2,[],45],[[-1,38,39,[33,[44]]],-2,[],45],[[-1,38,39,[33,[44]]],-2,[],45],[[-1,38,39,[33,[44]]],-2,[],45],[[-1,38,39,[33,[44]]],-2,[],45],[[-1,38,39,[33,[44]]],-2,[],45],[[-1,38,39,[33,[44]]],-2,[],45],[[-1,38,39,[33,[32]]],[[5,[32]]],[]],[[-1,38,39,[33,[32]]],[[5,[32]]],[]],[[-1,38,39,[33,[32]]],[[5,[32]]],[]],[[-1,38,39,[33,[32]]],[[5,[32]]],[]],[[-1,38,39,[33,[32]]],[[5,[32]]],[]],[[-1,38,39,[33,[32]]],[[5,[32]]],[]],[[-1,38,39,[33,[32]]],[[5,[32]]],[]],[[-1,38,[33,[32]]],[[5,[32]]],[]],[[-1,38,[33,[32]]],[[5,[32]]],[]],[[-1,38,[33,[32]]],[[5,[32]]],[]],[[-1,38,[33,[32]]],[[5,[32]]],[]],[[-1,38,[33,[32]]],[[5,[32]]],[]],[[-1,38,[33,[32]]],[[5,[32]]],[]],[[-1,38,[33,[32]]],[[5,[32]]],[]],[[],53],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[246,-1],31,22],[[245,-1],31,22],[[248,-1],31,22],[[116,-1],31,22],[[249,-1],31,22],[[242,-1],31,22],[[243,-1],31,22],[[250,250],31],[[53,53],31],[[53,-1],3,[[47,[],[[46,[53]]]]]],[[27,2],[[5,[249]]]],[[-1,2],[[5,[40]]],[]],[[-1,2],[[5,[40]]],[]],[[-1,2],[[5,[40]]],[]],[[-1,2],[[5,[40]]],[]],[[-1,2],[[5,[40]]],[]],[[-1,2],[[5,[40]]],[]],[[-1,2],[[5,[40]]],[]],[[246,50],51],[[245,50],51],[[248,50],51],[[116,50],51],[[249,50],51],[[242,50],51],[[243,50],51],[[250,50],51],[[53,50],51],[[53,50],51],[[53,50],51],[[53,50],51],[[53,50],51],[-1,52,[]],[-1,52,[]],[-1,52,[]],[-1,52,[]],[-1,52,[]],[-1,52,[]],[-1,52,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[4,53],[-1,-1,[]],[14,[[5,[53]]]],[14,53],[14,53],[14,53],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[-1,53,[[47,[],[[46,[53]]]]]],[2,[[5,[53]]]],[32,250],[32,53],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3,-5],23,[],67,[[69,[[68,[-2]]]]],70,[[35,[-4],[[34,[]]]]]],[[-1,-3,-5],23,[],67,[[69,[[68,[-2]]]]],70,[[35,[-4],[[34,[]]]]]],[[-1,-3,-5],23,[],67,[[69,[[68,[-2]]]]],70,[[35,[-4],[[34,[]]]]]],[[-1,-3,-5],23,[],67,[[69,[[68,[-2]]]]],70,[[35,[-4],[[34,[]]]]]],[[-1,-3,-5],23,[],67,[[69,[[68,[-2]]]]],70,[[35,[-4],[[34,[]]]]]],[[-1,-3,-5],23,[],67,[[69,[[68,[-2]]]]],70,[[35,[-4],[[34,[]]]]]],[[-1,-3,-5],23,[],67,[[69,[[68,[-2]]]]],70,[[35,[-4],[[34,[]]]]]],[[-1,68,11],[[9,[23,71]]],[]],[[-1,68,11],[[9,[23,71]]],[]],[[-1,68,11],[[9,[23,71]]],[]],[[-1,68,11],[[9,[23,71]]],[]],[[-1,68,11],[[9,[23,71]]],[]],[[-1,68,11],[[9,[23,71]]],[]],[[-1,68,11],[[9,[23,71]]],[]],[[-1,-2],3,[[7,[191]]],[[7,[246]]]],[[-1,2,[5,[72]]],31,[]],[[-1,2,[5,[72]]],31,[]],[[-1,2,[5,[72]]],31,[]],[[-1,2,[5,[72]]],31,[]],[[-1,2,[5,[72]]],31,[]],[[-1,2,[5,[72]]],31,[]],[[-1,2,[5,[72]]],31,[]],[[246,-1],3,73],[[245,-1],3,73],[[248,-1],3,73],[[116,-1],3,73],[[249,-1],3,73],[[242,-1],3,73],[[243,-1],3,73],[[250,-1],3,73],[[53,-1],3,73],[247,14],[247,14],[253,[[5,[243]]]],[253,[[5,[243]]]],[[53,53],3],[-1,[[5,[[76,[-2]]]]],[],77],[-1,[[5,[[76,[-2]]]]],[],77],[-1,[[5,[[76,[-2]]]]],[],77],[-1,[[5,[[76,[-2]]]]],[],77],[-1,[[5,[[76,[-2]]]]],[],77],[-1,[[5,[[76,[-2]]]]],[],77],[-1,[[5,[[76,[-2]]]]],[],77],[[53,53],53],[[53,53],31],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[53,-1,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[53,31],[247,31],[247,31],[53,31],[53,[[78,[53]]]],[53,[[79,[53]]]],[-1,[[80,[40]]],[]],[-1,[[80,[40]]],[]],[-1,[[80,[40]]],[]],[-1,[[80,[40]]],[]],[-1,[[80,[40]]],[]],[-1,[[80,[40]]],[]],[-1,[[80,[40]]],[]],[[27,2],[[5,[246]]]],[254,[[5,[96]]]],[254,[[5,[96]]]],[[2,72],249],[53,53],[[-1,2],3,[]],[[-1,2],3,[]],[[-1,2],3,[]],[[-1,2],3,[]],[[-1,2],3,[]],[[-1,2],3,[]],[[-1,2],3,[]],[[-1,40],3,[]],[[-1,40],3,[]],[[-1,40],3,[]],[[-1,40],3,[]],[[-1,40],3,[]],[[-1,40],3,[]],[[-1,40],3,[]],[-1,[[24,[85]]],[]],[-1,[[24,[85]]],[]],[-1,[[24,[85]]],[]],[-1,[[24,[85]]],[]],[-1,[[24,[85]]],[]],[-1,[[24,[85]]],[]],[-1,[[24,[85]]],[]],[253,[[5,[243]]]],[253,[[5,[243]]]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[[24,[-1]]],3,[]],[[[24,[-1]]],3,[]],[[[89,[-1]]],3,90],[[[89,[-1]]],3,90],[[246,-1],[[5,[29]]],22],[[245,-1],[[5,[29]]],22],[[248,-1],[[5,[29]]],22],[[116,-1],[[5,[29]]],22],[[249,-1],[[5,[29]]],22],[[242,-1],[[5,[29]]],22],[[243,-1],[[5,[29]]],22],[[250,250],[[5,[29]]]],[[244,[5,[2]]],[[5,[81]]]],[[244,[5,[2]]],[[5,[81]]]],[251,[[3,[86,[5,[96]]]]]],[251,[[3,[86,[5,[96]]]]]],[251,250],[251,250],[247,[[5,[84]]]],[247,[[5,[84]]]],[252,[[5,[84]]]],[252,[[5,[84]]]],[253,[[5,[84]]]],[253,[[5,[84]]]],[[247,2],[[5,[96]]]],[[247,2],[[5,[96]]]],[[-1,2],-2,[],91],[[-1,2],-2,[],91],[[-1,2],-2,[],91],[[-1,2],-2,[],91],[[-1,2],-2,[],91],[[-1,2],-2,[],91],[[-1,2],-2,[],91],[[-1,2],[[5,[72]]],[]],[[-1,2],[[5,[72]]],[]],[[-1,2],[[5,[72]]],[]],[[-1,2],[[5,[72]]],[]],[[-1,2],[[5,[72]]],[]],[[-1,2],[[5,[72]]],[]],[[-1,2],[[5,[72]]],[]],[[-1,2],32,[]],[[-1,2],32,[]],[[-1,2],32,[]],[[-1,2],32,[]],[[-1,2],32,[]],[[-1,2],32,[]],[[-1,2],32,[]],[[-1,39],[[5,[[41,[-2]]]]],[],[]],[[-1,39],[[5,[[41,[-2]]]]],[],[]],[[-1,39],[[5,[[41,[-2]]]]],[],[]],[[-1,39],[[5,[[41,[-2]]]]],[],[]],[[-1,39],[[5,[[41,[-2]]]]],[],[]],[[-1,39],[[5,[[41,[-2]]]]],[],[]],[[-1,39],[[5,[[41,[-2]]]]],[],[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[247,3],[247,3],[[27,-1],3,[[7,[249]]]],[252,[[5,[81]]]],[252,[[5,[81]]]],[253,[[5,[81]]]],[253,[[5,[81]]]],[[255,-1,-2],3,[[7,[242]]],[[7,[243]]]],[[255,-1,-2],3,[[7,[242]]],[[7,[243]]]],[247,3],[247,3],[[53,53],3],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[247,3],[247,3],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[[53,53,31],3],[[-1,2,-2],3,[],[]],[[-1,2,-2],3,[],[]],[[-1,2,-2],3,[],[]],[[-1,2,-2],3,[],[]],[[-1,2,-2],3,[],[]],[[-1,2,-2],3,[],[]],[[-1,2,-2],3,[],[]],[[256,[5,[86]],[5,[2]],-1],3,[[10,[[9,[3,8]]]],19]],[[-1,[5,[86]],[5,[2]],-2],3,[],[[10,[[9,[3,8]]]],19]],[[256,[5,[86]],[5,[30]]],[[17,[[16,[15]]]]]],[[-1,[5,[86]],[5,[30]]],[[17,[[16,[15]]]]],[]],[[247,84],3],[[247,84],3],[[-1,[33,[[3,[2,44]]]]],3,[]],[[-1,[33,[[3,[2,44]]]]],3,[]],[[-1,[33,[[3,[2,44]]]]],3,[]],[[-1,[33,[[3,[2,44]]]]],3,[]],[[-1,[33,[[3,[2,44]]]]],3,[]],[[-1,[33,[[3,[2,44]]]]],3,[]],[[-1,[33,[[3,[2,44]]]]],3,[]],[[-1,[33,[[3,[2,32]]]]],3,[]],[[-1,[33,[[3,[2,32]]]]],3,[]],[[-1,[33,[[3,[2,32]]]]],3,[]],[[-1,[33,[[3,[2,32]]]]],3,[]],[[-1,[33,[[3,[2,32]]]]],3,[]],[[-1,[33,[[3,[2,32]]]]],3,[]],[[-1,[33,[[3,[2,32]]]]],3,[]],[[-1,2,-2],3,[],[[69,[32]]]],[[-1,2,-2],3,[],[[69,[32]]]],[[-1,2,-2],3,[],[[69,[32]]]],[[-1,2,-2],3,[],[[69,[32]]]],[[-1,2,-2],3,[],[[69,[32]]]],[[-1,2,-2],3,[],[[69,[32]]]],[[-1,2,-2],3,[],[[69,[32]]]],[[-1,2,32],3,[]],[[-1,2,32],3,[]],[[-1,2,32],3,[]],[[-1,2,32],3,[]],[[-1,2,32],3,[]],[[-1,2,32],3,[]],[[-1,2,32],3,[]],[[-1,39,-2],3,[],[]],[[-1,39,-2],3,[],[]],[[-1,39,-2],3,[],[]],[[-1,39,-2],3,[],[]],[[-1,39,-2],3,[],[]],[[-1,39,-2],3,[],[]],[[-1,39,-2],3,[],[]],[[-1,-3],[[98,[-4]]],[],67,[[69,[[68,[-2]]]]],70],[[-1,-3],[[98,[-4]]],[],67,[[69,[[68,[-2]]]]],70],[[-1,-3],[[98,[-4]]],[],67,[[69,[[68,[-2]]]]],70],[[-1,-3],[[98,[-4]]],[],67,[[69,[[68,[-2]]]]],70],[[-1,-3],[[98,[-4]]],[],67,[[69,[[68,[-2]]]]],70],[[-1,-3],[[98,[-4]]],[],67,[[69,[[68,[-2]]]]],70],[[-1,-3],[[98,[-4]]],[],67,[[69,[[68,[-2]]]]],70],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[-1,2],[[5,[-2]]],[],[]],[[-1,2],[[5,[-2]]],[],[]],[[-1,2],[[5,[-2]]],[],[]],[[-1,2],[[5,[-2]]],[],[]],[[-1,2],[[5,[-2]]],[],[]],[[-1,2],[[5,[-2]]],[],[]],[[-1,2],[[5,[-2]]],[],[]],[[-1,39],[[5,[-2]]],[],[]],[[-1,39],[[5,[-2]]],[],[]],[[-1,39],[[5,[-2]]],[],[]],[[-1,39],[[5,[-2]]],[],[]],[[-1,39],[[5,[-2]]],[],[]],[[-1,39],[[5,[-2]]],[],[]],[[-1,39],[[5,[-2]]],[],[]],[[-1,38,[5,[39]]],3,[]],[[-1,38,[5,[39]]],3,[]],[[-1,38,[5,[39]]],3,[]],[[-1,38,[5,[39]]],3,[]],[[-1,38,[5,[39]]],3,[]],[[-1,38,[5,[39]]],3,[]],[[-1,38,[5,[39]]],3,[]],[[-1,2],3,[]],[[-1,2],3,[]],[[-1,2],3,[]],[[-1,2],3,[]],[[-1,2],3,[]],[[-1,2],3,[]],[[-1,2],3,[]],[[53,53],53],[[53,53],3],[246,53],[[53,53],53],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,99,[]],[-1,99,[]],[250,32],[53,32],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[[53,53],3],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,72,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[53,53],53],[[246,-1,-2],3,[[69,[53]]],[[69,[53]]]],[250,72],[53,72],[[-1,-2],3,[],[[101,[11]]]],[[-1,-2],3,[],[[101,[11]]]],[[-1,-2],3,[],[[101,[11]]]],[[-1,-2],3,[],[[101,[11]]]],[[-1,-2],3,[],[[101,[11]]]],[[-1,-2],3,[],[[101,[11]]]],[[-1,-2],3,[],[[101,[11]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,257,[[10,[258],[[34,[257]]]]]],[-1,257,[[10,[258],[[34,[257]]]]]],[-1,257,[[10,[258],[[34,[257]]]]]],[-1,257,[[10,[258],[[34,[257]]]]]],[-1,257,[[10,[258],[[34,[257]]]]]],[-1,257,[[10,[258],[[34,[257]]]]]],[-1,257,[[10,[258],[[34,[257]]]]]],[-1,257,[[10,[258],[[34,[257]]]]]],[-1,257,[[10,[258],[[34,[257]]]]]],[-1,257,[[10,[258],[[34,[257]]]]]],[-1,257,[[10,[258],[[34,[257]]]]]],[-1,257,[[10,[258],[[34,[257]]]]]],[-1,257,[[10,[258],[[34,[257]]]]]],[-1,257,[[10,[258],[[34,[257]]]]]],[-1,257,[[10,[258],[[34,[257]]]]]],[-1,257,[[10,[258],[[34,[257]]]]]],[-1,257,[[10,[258],[[34,[257]]]]]],[-1,257,[[10,[258],[[34,[257]]]]]],[-1,257,[[10,[258],[[34,[257]]]]]],[259,259],[260,260],[261,261],[262,262],[263,263],[264,264],[265,265],[266,266],[267,267],[268,268],[269,269],[270,270],[271,271],[272,272],[273,273],[274,274],[275,275],[276,276],[277,277],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[259,50],51],[[260,50],51],[[261,50],51],[[262,50],51],[[263,50],51],[[264,50],51],[[265,50],51],[[266,50],51],[[267,50],51],[[268,50],51],[[269,50],51],[[270,50],51],[[271,50],51],[[272,50],51],[[273,50],51],[[274,50],51],[[275,50],51],[[276,50],51],[[277,50],51],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[278,31],3],[[279,31],3],[[279,[33,[133]]],3],[[279,14,2],3],[[279,150],3],[[279,147],3],[[278,161],3],[[279,161],3],[[279,14,14],3],[[279,14],3],[[278,109],3],[[279,109],3],[[278,280],3],[[279,147],3],[279,3],[278,3],[[279,-1,-2],31,228,281],[[279,86],3],[[279,2,219],3],[[278,2],3],[[279,2],3],[[279,14],3],[[279,14,14],3],[[278,2],3],[[279,2],3],[[[281,[],[[282,[-1]]]],279],3,[[153,[86]]]],[[86,279],3],[[283,279],3],[[86,-1],[[284,[3]]],[[7,[204]]]],[86,[[5,[86]]]],[285,[[3,[[5,[286]],[5,[229]]]]]],[86,[[0,[[155,[],[[46,[-1]]]]]]],287],[86,[[49,[288]]]],[86,[[33,[133]]]],[280,289],[278,290],[291,292],[86,293],[279,294],[295,296],[286,227],[291,[[5,[31]]]],[86,[[5,[31]]]],[295,[[5,[31]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[297,14],[[5,[298]]]],[[297,14],[[5,[298]]]],[86,[[5,[[33,[133]]]]]],[295,[[5,[[33,[133]]]]]],[[299,14],161],[86,[[5,[86]]]],[86,[[5,[285]]]],[280,280],[278,278],[291,291],[86,86],[279,279],[295,295],[229,229],[285,285],[298,298],[283,283],[286,286],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[280,280],29],[[278,278],29],[[291,291],29],[[86,86],29],[[279,279],29],[[295,295],29],[[229,229],29],[[285,285],29],[[283,283],29],[[286,286],29],[[298,14],31],[86,[[5,[[3,[14,96,86]]]]]],[280,[[5,[280]]]],[86,[[5,[86]]]],[280,[[5,[96]]]],[86,300],[86,[[9,[-1,[301,[[33,[133]]]]]]],302],[298,14],[298,[[0,[[155,[],[[46,[14]]]]]]]],[86,[[5,[150]]]],[295,[[5,[150]]]],[278,[[5,[280]]]],[291,3],[279,[[5,[86]]]],[295,3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[280,[[5,[280]]]],[86,[[5,[86]]]],[[280,280],31],[[278,278],31],[[291,291],31],[[86,86],31],[[279,279],31],[[295,295],31],[[229,229],31],[[285,285],31],[[283,283],31],[[286,286],31],[[279,-2],3,281,[[47,[],[[46,[-1]]]]]],[86,[[5,[147]]]],[295,[[5,[147]]]],0,[[86,86],[[5,[86]]]],[[86,-1],[[5,[86]]],228],[[229,14],[[5,[285]]]],[[229,2],[[5,[285]]]],[[229,2],[[5,[285]]]],[86,31],[291,[[5,[161]]]],[86,[[5,[161]]]],[295,[[5,[161]]]],[[300,50],51],[[280,50],51],[[280,50],51],[[278,50],51],[[291,50],51],[[86,50],51],[[279,50],51],[[295,50],51],[[229,50],51],[[285,50],51],[[299,50],51],[[298,50],51],[[297,50],51],[[283,50],51],[[286,50],51],[86,[[5,[[3,[14,14]]]]]],[295,[[5,[[3,[14,14]]]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[31,283],[-1,-1,[]],[-1,-1,[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[289,280],[290,278],[292,291],[293,86],[294,279],[296,295],[227,286],[227,286],[227,[[5,[286]]]],[227,286],[-2,86,281,[[47,[],[[46,[-1]]]]]],[-2,279,281,[[47,[],[[46,[-1]]]]]],[-1,297,[[47,[],[[46,[298]]]]]],[2,[[5,[229]]]],[2,[[5,[286]]]],[-1,[[284,[299]]],[[7,[204]]]],[-1,[[284,[297]]],[[7,[204]]]],[2,280],[2,280],[32,285],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[299,31],[298,31],[[297,14],31],[[280,-1],3,73],[[278,-1],3,73],[[291,-1],3,73],[[86,-1],3,73],[[279,-1],3,73],[[295,-1],3,73],[[229,-1],3,73],[[285,-1],3,73],[[286,-1],3,73],[86,[[5,[14]]]],[295,[[5,[14]]]],[298,14],[298,[[284,[[0,[[155,[],[[46,[[3,[30,30]]]]]]]]]]]],[291,[[5,[109]]]],[86,[[5,[109]]]],[295,[[5,[109]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[229,-1,[]],[285,-1,[]],[286,-1,[]],[299,86],[298,86],[297,[[0,[[155,[],[[46,[86]]]]]]]],[297,[[62,[298]]]],[280,31],[86,31],[280,31],[86,31],[86,31],[86,31],[86,31],[86,31],[86,31],[280,31],[86,31],[86,31],[286,31],[86,31],[286,31],[280,31],[86,31],[86,31],[86,31],[280,31],[291,31],[280,31],[86,31],[286,31],[86,31],[86,31],[86,31],[86,31],[280,31],[86,31],[86,31],[280,31],[86,31],[86,[[49,[86]]]],[291,[[5,[280]]]],0,[86,[[5,[147]]]],[295,[[5,[147]]]],[299,31],[285,[[5,[30]]]],[286,[[5,[96]]]],[303,300],[[],278],[280,291],[[],279],[31,280],[31,86],[[[33,[133]]],86],[2,279],[150,86],[147,86],[161,280],[161,86],[[14,14],86],[14,86],[109,280],[109,86],[280,[[5,[117]]]],[147,86],[[],86],[[],280],[[],278],[280,291],[[2,2],279],[86,[[3,[295,[5,[2]]]]]],[[2,219],86],[[14,14],86],[14,279],[2,280],[2,86],[[],279],[86,295],[304,86],[304,86],[285,227],[286,227],[286,[[5,[229]]]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[299,[[284,[[0,[[155,[],[[46,[[3,[30,86]]]]]]]]]]]],[286,[[5,[286]]]],[280,[[5,[31]]]],[280,[[5,[161]]]],[280,[[5,[109]]]],[280,[[5,[96]]]],[2,[[5,[227]]]],[[280,280],[[5,[29]]]],[[278,278],[[5,[29]]]],[[291,291],[[5,[29]]]],[[86,86],[[5,[29]]]],[[279,279],[[5,[29]]]],[[295,295],[[5,[29]]]],[[229,229],[[5,[29]]]],[[285,285],[[5,[29]]]],[[283,283],[[5,[29]]]],[[286,286],[[5,[29]]]],[295,[[5,[86]]]],[86,[[5,[219]]]],[295,[[5,[219]]]],[298,[[0,[[155,[],[[46,[14]]]]]]]],[86,[[5,[[3,[96,86]]]]]],[298,[[5,[299]]]],[86,[[5,[[3,[14,14]]]]]],[295,[[5,[[3,[14,14]]]]]],[[[9,[285,227]]],227],[-1,[[9,[86,305]]],306],[[86,31],31],[[299,14,161],[[9,[3,3]]]],[[86,150],31],[[86,147],31],[[86,161],31],[[86,14,14],31],[[86,14],31],[[86,109],31],[[86,147],31],[[86,86],31],[[86,2,219],31],[[86,14,14],31],[[86,-1,86],[[5,[86]]],228],[285,[[5,[30]]]],[280,65],[86,[[5,[307]]]],[86,[[5,[308]]]],[86,[[5,[309]]]],[86,304],[86,[[0,[[155,[],[[46,[[3,[[9,[285,227]],86]]]]]]]]]],[[86,-1],[[5,[-2]]],228,[]],[285,227],[[-1,[5,[229]]],[[9,[14]]],[]],[86,[[5,[310]]]],[86,[[5,[286]]]],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[291,[[5,[96]]]],[86,[[5,[96]]]],[295,[[5,[96]]]],[[86,31],[[284,[[311,[[3,[30,86]]]]]]]],[86,[[62,[133]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[86,[[9,[303,8]]]],[-1,99,[]],[280,96],[-1,30,[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[86,[[9,[86,-1]]],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[86,[[9,[283,-1]]],[]],[227,[[9,[286,-1]]],[]],[-1,[[9,[-2]]],[],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[312,[[9,[229,-1]]],[]],[313,[[9,[285,-1]]],[]],[227,[[9,[286,-1]]],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[86,[[9,[303,8]]]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[[[41,[83]]],229],[312,229],[[[41,[83]]],285],[313,285],[285,[[3,[[5,[286]],[5,[229]]]]]],[229,[[49,[285]]]],[286,[[5,[229]]]],[86,86],[86,[[284,[299]]]],[86,[[284,[298]]]],[-1,297,[[47,[],[[46,[298]]]]]],[[[33,[133]]],86],[[[33,[133]]],86],[[[33,[133]]],86],0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-2],[[18,[-3]]],[],[10,19],[]],[[-1,-2],[[18,[-3]]],[],[10,19],[]],[[-1,-2],[[18,[-3]]],[],10,[]],[[-1,-2],[[18,[-3]]],[],10,[]],[314,3],[314,3],[117,315],[[-1,2,-2,2],21,[],22],[[-1,2,-2,2],21,[],22],[[-1,23],3,[]],[[-1,23],3,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[24,[-2]]],[],25],[-1,[[24,[-2]]],[],25],[-1,[[5,[[24,[-2]]]]],[],25],[-1,[[5,[[24,[-2]]]]],[],25],[316,3],[316,316],[178,178],[117,117],[317,317],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[316,316],29],[[178,178],29],[[117,117],29],[[317,317],29],[[[49,[-1]],[49,[-1]]],29,318],[[[216,[-1]],[216,[-1]]],29,318],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,2,31,37],23,[]],[[-1,2,31,37],23,[]],[[-1,38,[5,[39]],31,37],23,[]],[[-1,38,[5,[39]],31,37],23,[]],[[314,-1],23,[[35,[314]]]],[[314,-1],23,[[35,[314]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]],19,36]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]],19,36]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]],19,36]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,[5,[2]],-3],23,[],[],[[35,[-2,40]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,2,31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,38,[5,[39]],31,-2],23,[],[[35,[[33,[32]]],[[34,[[5,[32]]]]]]]],[[-1,2],[[5,[[41,[-2]]]]],[],[]],[[-1,2],[[5,[[41,[-2]]]]],[],[]],[[],[[49,[-1]]],237],[[],[[216,[-1]]],237],[[-1,23],3,[]],[[-1,23],3,[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[[-1,38,[33,[44]]],-2,[],45],[[-1,38,[33,[44]]],-2,[],45],[[-1,2,[33,[44]]],-2,[],45],[[-1,2,[33,[44]]],-2,[],45],[[-1,2,39,[33,[44]]],-2,[],45],[[-1,2,39,[33,[44]]],-2,[],45],[[-1,2,39,[33,[32]]],[[5,[32]]],[]],[[-1,2,39,[33,[32]]],[[5,[32]]],[]],[[-1,2,[33,[32]]],[[5,[32]]],[]],[[-1,2,[33,[32]]],[[5,[32]]],[]],[[-1,38,39,[33,[44]]],-2,[],45],[[-1,38,39,[33,[44]]],-2,[],45],[[-1,38,39,[33,[32]]],[[5,[32]]],[]],[[-1,38,39,[33,[32]]],[[5,[32]]],[]],[[-1,38,[33,[32]]],[[5,[32]]],[]],[[-1,38,[33,[32]]],[[5,[32]]],[]],[72,117],[[],3],[[],3],[[],3],[[],3],[[316,-1],31,22],[[178,-1],31,22],[[117,117],31],[[317,317],31],[[[49,[-1]],[49,[-1]]],31,319],[[[216,[-1]],[216,[-1]]],31,319],[[-1,2],[[5,[40]]],[]],[[-1,2],[[5,[40]]],[]],[-1,[[9,[3,8]]],[[7,[320]]]],[[316,50],51],[[178,50],51],[[117,50],51],[[317,50],51],[[[49,[-1]],50],51,237],[[[216,[-1]],50],51,237],[-1,52,[]],[-1,52,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[49,[-1]]],[[216,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[63,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[61,[[62,[-1]]],[]],[64,[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[[64,65],[[62,[-1]]],[]],[[61,65],[[62,[-1]]],[]],[[63,65],[[62,[-1]]],[]],[315,117],[-2,117,22,[[47,[],[[46,[-1]]]]]],[-2,[[216,[-1]]],22,[[47,[],[[46,[-1]]]]]],[32,317],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[[-1,-3],-2,[],[],[[35,[],[[34,[-2]]]]]],[314,31],[314,31],[[-1,-3,-5],23,[],67,[[69,[[68,[-2]]]]],70,[[35,[-4],[[34,[]]]]]],[[-1,-3,-5],23,[],67,[[69,[[68,[-2]]]]],70,[[35,[-4],[[34,[]]]]]],[[-1,68,11],[[9,[23,71]]],[]],[[-1,68,11],[[9,[23,71]]],[]],[[-1,2,[5,[72]]],31,[]],[[-1,2,[5,[72]]],31,[]],[[316,-1],3,73],[[178,-1],3,73],[[117,-1],3,73],[[317,-1],3,73],[[[49,[-1]],-2],3,321,73],[[[216,[-1]],-2],3,321,73],[[[49,[-1]]],117,[]],[[[216,[-1]]],117,[]],[-1,[[5,[[76,[-2]]]]],[],77],[-1,[[5,[[76,[-2]]]]],[],77],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[[[49,[-1]]],117,[]],[[[216,[-1]]],117,[]],[-1,-2,[],[]],[[[49,[-1]]],-2,91,[]],[-1,-2,[],[]],[[[49,[-1]]],[[216,[-1]]],[]],[-1,31,[]],[-1,31,[]],[314,31],[314,31],[-1,[[80,[40]]],[]],[-1,[[80,[40]]],[]],[316,[[5,[84]]]],[316,[[5,[96]]]],[316,[[5,[96]]]],[2,316],[-1,[[216,[-2]]],47,[]],[[72,[5,[-1]],[5,[-2]],[5,[11]]],178,[[7,[85]]],[[7,[6]]]],[117,[[5,[-1]]],[]],[117,[[5,[32]]]],[[[216,[-1]]],[[5,[-2]]],91,[]],[[-1,2],3,[]],[[-1,2],3,[]],[[-1,40],3,[]],[[-1,40],3,[]],[-1,[[24,[85]]],[]],[-1,[[24,[85]]],[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[[24,[-1]]],3,[]],[[[24,[-1]]],3,[]],[[[89,[-1]]],3,90],[[[89,[-1]]],3,90],[[316,-1],[[5,[29]]],22],[[178,-1],[[5,[29]]],22],[[117,117],[[5,[29]]]],[[317,317],[[5,[29]]]],[[[49,[-1]],[49,[-1]]],[[5,[29]]],322],[[[216,[-1]],[216,[-1]]],[[5,[29]]],322],[[-1,2],-2,[],91],[[-1,2],-2,[],91],[[-1,2],[[5,[72]]],[]],[[-1,2],[[5,[72]]],[]],[[-1,2],32,[]],[[-1,2],32,[]],[[-1,39],[[5,[[41,[-2]]]]],[],[]],[[-1,39],[[5,[[41,[-2]]]]],[],[]],[-1,14,[]],[-1,14,[]],[[-1,23],3,[]],[[-1,23],3,[]],[117,3],[[[216,[-1]]],3,[]],[[323,8],3],[[-1,8],3,[]],[-1,3,[]],[-1,3,[]],[[316,84],[[9,[3,8]]]],[[-1,2,-2],3,[],[]],[[-1,2,-2],3,[],[]],[[-1,[33,[[3,[2,44]]]]],3,[]],[[-1,[33,[[3,[2,44]]]]],3,[]],[[-1,[33,[[3,[2,32]]]]],3,[]],[[-1,[33,[[3,[2,32]]]]],3,[]],[[-1,2,-2],3,[],[[69,[32]]]],[[-1,2,-2],3,[],[[69,[32]]]],[[-1,2,32],3,[]],[[-1,2,32],3,[]],[[-1,39,-2],3,[],[]],[[-1,39,-2],3,[],[]],[[-1,-3],[[98,[-4]]],[],67,[[69,[[68,[-2]]]]],70],[[-1,-3],[[98,[-4]]],[],67,[[69,[[68,[-2]]]]],70],[314,[[5,[85]]]],[314,[[5,[85]]]],[[],72],[[],72],[[],72],[[],72],[[-1,2],[[5,[-2]]],[],[]],[[-1,2],[[5,[-2]]],[],[]],[[-1,39],[[5,[-2]]],[],[]],[[-1,39],[[5,[-2]]],[],[]],[[-1,38,[5,[39]]],3,[]],[[-1,38,[5,[39]]],3,[]],[[-1,2],3,[]],[[-1,2],3,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,99,[]],[317,32],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[5,[32]]],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[[[5,[32]]],[[9,[-1,71]]],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,72,[]],[-1,72,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[-1,100,[]],[[-1,23],3,[]],[[-1,23],3,[]],[[[49,[-2]]],[[49,[-1]]],22,[[7,[-1]]]],[[[216,[-2]]],[[216,[-1]]],22,[[7,[-1]]]],[117,128],[317,72],[[-1,-2],3,[],[[101,[11]]]],[[-1,-2],3,[],[[101,[11]]]],[[324,65],117],[117,[[49,[-1]]],[]],[117,[[216,[-1]]],[]],[[61,72],117]],"c":[129,190],"p":[[10,"ObjectExt",30],[1,"str"],[1,"tuple"],[5,"ObjectFeatures",30],[6,"Option",7939],[5,"Cancellable",7940],[10,"IsA",7941],[5,"Error",7942],[6,"Result",7943],[10,"FnOnce",7944],[5,"Closure",7945],[10,"ObjectImpl",30],[5,"FeatureActivationTransition",30],[1,"u32"],[10,"Future",7946],[5,"Box",7947],[5,"Pin",7948],[5,"WeakRefNotify",7941],[10,"Send",7949],[5,"InitFlags",30],[5,"BindingBuilder",7941],[10,"ObjectType",7941],[5,"SignalHandlerId",7950],[5,"Class",7941],[10,"IsClass",7941],[5,"Object",30],[5,"Core",30],[5,"Factory",30],[6,"Ordering",7951],[5,"String",7952],[1,"bool"],[5,"Value",7953],[1,"slice"],[17,"Output"],[10,"Fn",7944],[10,"Sync",7949],[5,"RustClosure",7945],[5,"SignalId",7954],[5,"Quark",7955],[5,"ParamSpec",7956],[5,"NonNull",7957],[5,"MainContext",7958],[5,"WeakRef",7941],[10,"ToValue",7953],[10,"TryFromClosureReturnValue",7945],[17,"Item"],[10,"IntoIterator",7959],[5,"LookupDirs",2119],[5,"IntoValueIterator",7530],[5,"Formatter",7960],[8,"Result",7960],[5,"PropertyNotificationFreezeGuard",7941],[5,"SessionItemFeatures",5434],[5,"DbusFeatures",715],[5,"NodeFeatures",2719],[5,"SpaDeviceFeatures",989],[5,"ProxyFeatures",2719],[5,"MetadataFeatures",2719],[5,"LinkFeatures",2719],[5,"PluginFeatures",2119],[5,"GPtrArray",7961],[5,"Vec",7962],[5,"GSList",7961],[5,"GList",7961],[1,"usize"],[5,"CString",7963],[10,"DetailedSignal",7964],[5,"ConnectDetails",7964],[10,"Into",7965],[10,"Notifies",7964],[5,"BoolError",7942],[5,"Type",7966],[10,"Hasher",7967],[5,"Source",7968],[5,"ObjectManager",4942],[5,"InterfaceRef",7941],[10,"IsInterface",7941],[5,"Iter",7969],[5,"IterNames",7969],[5,"PtrSlice",7970],[5,"Variant",7971],[10,"ToLuaTable",1767],[6,"c_void",7972],[5,"Properties",2719],[5,"Object",7941],[5,"SpaPod",6712],[10,"ObjectImplExt",30],[5,"WpObjectClass",7973],[5,"InitializingObject",7974],[10,"ObjectSubclass",7974],[10,"FromValue",7953],[5,"pw_context",7975],[5,"pw_core",7975],[10,"FromPipewirePropertyString",2719],[5,"pw_proxy",7975],[5,"GString",7976],[5,"MainLoop",7977],[5,"SignalStream",7978],[5,"SendValue",7953],[5,"TypeId",7979],[10,"AsRef",7965],[5,"CStr",7980],[5,"Dbus",715],[10,"Unpin",7949],[6,"BusType",7981],[6,"DBusState",715],[5,"DBusConnection",7982],[6,"LibraryErrorEnum",947],[1,"i32"],[10,"Display",7960],[5,"SpaDevice",989],[5,"ImplModule",989],[5,"ImplEndpoint",989],[5,"ImplMetadata",989],[5,"ImplNode",989],[5,"SiEndpoint",5434],[5,"WpIterator",7530],[5,"pw_impl_node",7975],[5,"spa_device",7983],[5,"StructuredLogContext",1724],[10,"Clone",7984],[10,"Default",7985],[10,"Debug",7960],[5,"LogLevelFlags",7986],[5,"Arguments",7960],[5,"spa_log",7983],[5,"GLogField",7961],[8,"gpointer",7961],[8,"GLogWriterOutput",7961],[5,"LuaTable",1767],[1,"u64"],[5,"LuaString",1767],[1,"u8"],[5,"LuaVariant",1767],[5,"Utf8Error",7987],[6,"LuaError",1767],[6,"LuaType",1767],[5,"Deserializer",1767],[5,"Serializer",1767],[10,"Deserializer",7988],[10,"Visitor",7988],[5,"VariantTypeMismatchError",7971],[6,"Infallible",7965],[5,"ParseIntError",7989],[5,"TryFromIntError",7989],[6,"Cow",7990],[1,"i64"],[1,"u16"],[1,"i16"],[1,"f64"],[10,"StaticVariantType",7971],[10,"Deserialize",7988],[10,"TryFrom",7965],[10,"Expected",7988],[10,"Iterator",7991],[5,"DictEntry",7971],[6,"LuaValue",1767],[10,"FromStr",7992],[10,"Serializer",7993],[1,"char"],[1,"f32"],[1,"i8"],[10,"Serialize",7993],[10,"Sized",7949],[10,"Error",7994],[5,"VariantTy",7995],[5,"Plugin",2119],[10,"AsyncPluginExt",2119],[5,"SourceHandlesCell",2119],[5,"SourceHandles",2119],[5,"RefCell",7996],[5,"ComponentLoader",2119],[5,"SimplePluginObject",2119],[10,"SimplePlugin",2119],[10,"PluginImpl",2119],[17,"EnableFuture"],[10,"AsyncPluginImpl",2119],[5,"Transition",7530],[17,"Args"],[5,"BorrowedObject",7941],[10,"ComponentLoaderImpl",2119],[10,"PluginExt",2119],[10,"ComponentLoaderImplExt",2119],[5,"WpComponentLoaderClass",7973],[10,"PluginImplExt",2119],[5,"WpPluginClass",7973],[5,"SourceId",7997],[5,"Link",2719],[5,"Metadata",2719],[5,"Node",2719],[5,"Proxy",2719],[5,"spa_dict",7983],[5,"PipewireKey",2719],[5,"WpProperties",7973],[5,"PropertiesItem",2719],[5,"WpPropertiesItem",7973],[10,"GlobalProxyExt",2719],[10,"ProxyExt",2719],[10,"MetadataExt",2719],[5,"Client",2719],[5,"Device",2719],[5,"Endpoint",2719],[5,"GlobalProxy",2719],[5,"PipewireObject",2719],[5,"Port",2719],[6,"Direction",2719],[6,"LinkState",2719],[6,"NodeState",2719],[10,"EndpointExt",2719],[10,"PipewireObjectExt",2719],[10,"ToPipewirePropertyString",2719],[5,"Interest",4942],[5,"Direction",7998],[17,"Error"],[10,"PipewireObjectExt2",2719],[5,"ValueIterator",7530],[5,"Map",7999],[5,"ObjectInterest",4942],[8,"gconstpointer",7961],[10,"LinkTarget",2719],[5,"pw_properties",7975],[5,"PipewirePropertyStringIter",2719],[10,"PipewirePropertyStringIterExt",2719],[1,"never"],[10,"ProxyExt2",2719],[10,"SpaPropertyKeyId",2719],[8,"WpSpaType",8000],[10,"SpaPropertyKey",2719],[5,"SpaIdTable",6712],[5,"pw_permission",7975],[6,"ConstraintType",4942],[6,"ConstraintVerb",4942],[5,"Constraint",4942],[5,"InterestMatchFlags",4942],[5,"InterestMatch",4942],[5,"WpObjectInterest",7973],[10,"StaticType",7966],[10,"ToVariant",7971],[10,"Borrow",8001],[10,"InterestContainer",4942],[10,"SiAcquisitionExt2",5434],[5,"SiLink",5434],[5,"SiLinkable",5434],[10,"SiLinkableExt",5434],[5,"SiAcquisition",5434],[5,"SessionItem",5434],[10,"SessionItemExt",5434],[5,"SiAdapter",5434],[5,"SiFactory",5434],[6,"SiAdapterPortsState",5434],[10,"SiAdapterExt",5434],[10,"SiEndpointExt",5434],[10,"SiLinkExt",5434],[10,"SiFactoryExt",5434],[10,"SiAcquisitionExt",5434],[10,"SiAdapterExt2",5434],[5,"Signal",7954],[5,"SignalBuilder",7954],[5,"Connected",6465],[5,"Disconnected",6465],[5,"ManagerInstalled",6465],[5,"ObjectsChanged",6465],[5,"ObjectAdded",6465],[5,"ObjectRemoved",6465],[5,"PwProxyBound",6465],[5,"PwProxyCreated",6465],[5,"PwProxyDestroyed",6465],[5,"PwProxyError",6465],[5,"PwObjectParamsChanged",6465],[5,"NodePortsChanged",6465],[5,"NodeStateChanged",6465],[5,"LinkStateChanged",6465],[5,"MetadataChanged",6465],[5,"CreateObject",6465],[5,"SpaObjectRemoved",6465],[5,"EndpointPropertiesChanged",6465],[5,"AdapterPortsStateChanged",6465],[5,"SpaJsonBuilder",6712],[5,"SpaPodBuilder",6712],[5,"SpaJson",6712],[10,"SpaValue",6712],[17,"Owned"],[5,"SpaBool",6712],[8,"Result",947],[5,"SpaIdValue",6712],[5,"SpaType",6712],[10,"SpaPrimitive",6712],[8,"Pointer",7966],[5,"WpSpaJson",7973],[5,"WpSpaJsonBuilder",7973],[5,"SpaJsonParser",6712],[5,"WpSpaJsonParser",7973],[5,"WpSpaPod",7973],[5,"WpSpaPodBuilder",7973],[5,"SpaPodParser",6712],[5,"WpSpaPodParser",7973],[5,"SpaRoutes",6712],[5,"SpaRoute",6712],[5,"SpaProps",6712],[5,"DebugValue",6712],[6,"DeserializeError",8002],[10,"PodDeserialize",8002],[6,"Value",8003],[5,"spa_pod",7983],[6,"GenError",8004],[10,"PodSerialize",8005],[5,"Fd",8006],[5,"spa_fraction",7983],[5,"Id",8006],[5,"spa_rectangle",7983],[5,"IntoIter",8007],[8,"WpSpaIdTable",7973],[8,"WpSpaIdValue",7973],[10,"TransitionExt",7530],[5,"WpIterator",7973],[5,"State",7530],[6,"TransitionStep",7530],[10,"Ord",7951],[10,"PartialEq",7951],[5,"AsyncResult",8008],[10,"Hash",7967],[10,"PartialOrd",7951],[10,"TransitionExt2",7530],[5,"WpIteratorMethods",7973],[5,"Log",1724],[15,"LengthMismatch",2117],[5,"ModuleWrapper",2119],[10,"ModuleExport",2119]],"b":[[81,"impl-Flags-for-InitFlags"],[82,"impl-InitFlags"],[263,"impl-Octal-for-InitFlags"],[264,"impl-Debug-for-InitFlags"],[265,"impl-UpperHex-for-InitFlags"],[266,"impl-LowerHex-for-InitFlags"],[267,"impl-Binary-for-InitFlags"],[276,"impl-From%3CSessionItemFeatures%3E-for-ObjectFeatures"],[277,"impl-From%3CDbusFeatures%3E-for-ObjectFeatures"],[279,"impl-From%3Cu32%3E-for-ObjectFeatures"],[280,"impl-From%3CNodeFeatures%3E-for-ObjectFeatures"],[281,"impl-From%3CSpaDeviceFeatures%3E-for-ObjectFeatures"],[282,"impl-From%3CProxyFeatures%3E-for-ObjectFeatures"],[283,"impl-From%3CMetadataFeatures%3E-for-ObjectFeatures"],[284,"impl-From%3CLinkFeatures%3E-for-ObjectFeatures"],[285,"impl-From%3CPluginFeatures%3E-for-ObjectFeatures"],[288,"impl-Flags-for-InitFlags"],[289,"impl-InitFlags"],[734,"impl-DbusFeatures"],[735,"impl-Flags-for-DbusFeatures"],[795,"impl-UpperHex-for-DbusFeatures"],[796,"impl-LowerHex-for-DbusFeatures"],[797,"impl-Binary-for-DbusFeatures"],[798,"impl-Octal-for-DbusFeatures"],[799,"impl-Debug-for-DbusFeatures"],[806,"impl-DbusFeatures"],[807,"impl-Flags-for-DbusFeatures"],[964,"impl-Display-for-LibraryErrorEnum"],[965,"impl-Debug-for-LibraryErrorEnum"],[1024,"impl-Flags-for-SpaDeviceFeatures"],[1025,"impl-SpaDeviceFeatures"],[1214,"impl-Binary-for-SpaDeviceFeatures"],[1215,"impl-Octal-for-SpaDeviceFeatures"],[1216,"impl-Debug-for-SpaDeviceFeatures"],[1217,"impl-UpperHex-for-SpaDeviceFeatures"],[1218,"impl-LowerHex-for-SpaDeviceFeatures"],[1229,"impl-From%3CProxyFeatures%3E-for-SpaDeviceFeatures"],[1231,"impl-From%3CObjectFeatures%3E-for-SpaDeviceFeatures"],[1233,"impl-SpaDeviceFeatures"],[1234,"impl-Flags-for-SpaDeviceFeatures"],[1845,"impl-Error-for-LuaError"],[1846,"impl-Error-for-LuaError"],[1887,"impl-Display-for-LuaError"],[1888,"impl-Debug-for-LuaError"],[1889,"impl-Display-for-LuaString%3C\'_%3E"],[1890,"impl-Debug-for-LuaString%3C\'a%3E"],[1891,"impl-Debug-for-LuaVariant%3C\'a%3E"],[1892,"impl-Display-for-LuaVariant%3C\'a%3E"],[1894,"impl-Debug-for-LuaTable%3C\'a%3E"],[1895,"impl-Display-for-LuaTable%3C\'a%3E"],[1899,"impl-From%3CVariantTypeMismatchError%3E-for-LuaError"],[1900,"impl-From%3CInfallible%3E-for-LuaError"],[1902,"impl-From%3CUtf8Error%3E-for-LuaError"],[1903,"impl-From%3CError%3E-for-LuaError"],[1904,"impl-From%3CParseIntError%3E-for-LuaError"],[1905,"impl-From%3CTryFromIntError%3E-for-LuaError"],[1906,"impl-From%3C%26%5Bu8%5D%3E-for-LuaString%3C\'a%3E"],[1907,"impl-From%3CCow%3C\'a,+%5Bu8%5D%3E%3E-for-LuaString%3C\'a%3E"],[1908,"impl-From%3C%26str%3E-for-LuaString%3C\'a%3E"],[1909,"impl-From%3CString%3E-for-LuaString%3C\'a%3E"],[1911,"impl-From%3CVec%3Cu8%3E%3E-for-LuaString%3C\'a%3E"],[1912,"impl-From%3CS%3E-for-LuaVariant%3C\'v%3E"],[1913,"impl-From%3Cu32%3E-for-LuaVariant%3C\'a%3E"],[1914,"impl-From%3Ci64%3E-for-LuaVariant%3C\'a%3E"],[1915,"impl-From%3Cu16%3E-for-LuaVariant%3C\'a%3E"],[1917,"impl-From%3Ci32%3E-for-LuaVariant%3C\'a%3E"],[1918,"impl-From%3C()%3E-for-LuaVariant%3C\'a%3E"],[1919,"impl-From%3Cbool%3E-for-LuaVariant%3C\'a%3E"],[1920,"impl-From%3Ci16%3E-for-LuaVariant%3C\'a%3E"],[1921,"impl-From%3CLuaTable%3C\'a%3E%3E-for-LuaVariant%3C\'a%3E"],[1922,"impl-From%3Cu64%3E-for-LuaVariant%3C\'a%3E"],[1923,"impl-From%3Cf64%3E-for-LuaVariant%3C\'a%3E"],[1926,"impl-From%3CLuaTable%3C\'v%3E%3E-for-Deserializer%3C\'v%3E"],[1928,"impl-From%3CLuaVariant%3C\'v%3E%3E-for-Deserializer%3C\'v%3E"],[1930,"impl-FromIterator%3C(K,+V)%3E-for-LuaVariant%3C\'a%3E"],[1931,"impl-FromIterator%3CLuaVariant%3C\'v%3E%3E-for-LuaVariant%3C\'a%3E"],[1932,"impl-FromIterator%3CV%3E-for-LuaTable%3C\'a%3E"],[1933,"impl-FromIterator%3C(K,+V)%3E-for-LuaTable%3C\'a%3E"],[1959,"impl-Into%3CCow%3C\'a,+%5Bu8%5D%3E%3E-for-LuaString%3C\'a%3E"],[1961,"impl-Into%3CVariant%3E-for-LuaString%3C\'a%3E"],[1962,"impl-Into%3CVec%3Cu8%3E%3E-for-LuaString%3C\'a%3E"],[1963,"impl-Into%3CVariant%3E-for-LuaVariant%3C\'a%3E"],[1965,"impl-Into%3CCow%3C\'a,+Variant%3E%3E-for-LuaVariant%3C\'a%3E"],[1967,"impl-Into%3CCow%3C\'a,+Variant%3E%3E-for-LuaTable%3C\'a%3E"],[1968,"impl-Into%3CVariant%3E-for-LuaTable%3C\'a%3E"],[1973,"impl-IntoDeserializer%3C\'de,+LuaError%3E-for-LuaVariant%3C\'v%3E"],[1974,"impl-IntoDeserializer%3C\'de,+LuaError%3E-for-%26LuaVariant%3C\'v%3E"],[1975,"impl-IntoDeserializer%3C\'de,+LuaError%3E-for-LuaTable%3C\'v%3E"],[1976,"impl-IntoDeserializer%3C\'de,+LuaError%3E-for-%26LuaTable%3C\'v%3E"],[2070,"impl-TryFrom%3CVariant%3E-for-LuaString%3C\'a%3E"],[2072,"impl-TryFrom%3C%26Variant%3E-for-LuaString%3C\'a%3E"],[2073,"impl-TryFrom%3C%26Variant%3E-for-LuaVariant%3C\'a%3E"],[2074,"impl-TryFrom%3CVariant%3E-for-LuaVariant%3C\'a%3E"],[2076,"impl-TryFrom%3CCow%3C\'a,+Variant%3E%3E-for-LuaVariant%3C\'a%3E"],[2078,"impl-TryFrom%3CCow%3C\'a,+Variant%3E%3E-for-LuaTable%3C\'a%3E"],[2079,"impl-TryFrom%3CVariant%3E-for-LuaTable%3C\'a%3E"],[2080,"impl-TryFrom%3CLuaVariant%3C\'a%3E%3E-for-LuaTable%3C\'a%3E"],[2082,"impl-TryFrom%3C%26Variant%3E-for-LuaTable%3C\'a%3E"],[2101,"impl-UnsafeFrom%3CVariant%3E-for-LuaVariant%3C\'a%3E"],[2102,"impl-UnsafeFrom%3CCow%3C\'a,+Variant%3E%3E-for-LuaVariant%3C\'a%3E"],[2103,"impl-UnsafeFrom%3C%26Variant%3E-for-LuaVariant%3C\'a%3E"],[2104,"impl-UnsafeFrom%3CLuaVariant%3C\'a%3E%3E-for-LuaTable%3C\'a%3E"],[2105,"impl-UnsafeFrom%3C%26Variant%3E-for-LuaTable%3C\'a%3E"],[2106,"impl-UnsafeFrom%3CVariant%3E-for-LuaTable%3C\'a%3E"],[2107,"impl-UnsafeFrom%3CCow%3C\'a,+Variant%3E%3E-for-LuaTable%3C\'a%3E"],[2178,"impl-PluginFeatures"],[2179,"impl-Flags-for-PluginFeatures"],[2180,"impl-LookupDirs"],[2181,"impl-Flags-for-LookupDirs"],[2337,"impl-Octal-for-PluginFeatures"],[2338,"impl-LowerHex-for-PluginFeatures"],[2339,"impl-Debug-for-PluginFeatures"],[2340,"impl-UpperHex-for-PluginFeatures"],[2341,"impl-Binary-for-PluginFeatures"],[2342,"impl-UpperHex-for-LookupDirs"],[2343,"impl-LowerHex-for-LookupDirs"],[2344,"impl-Debug-for-LookupDirs"],[2345,"impl-Binary-for-LookupDirs"],[2346,"impl-Octal-for-LookupDirs"],[2361,"impl-Flags-for-PluginFeatures"],[2362,"impl-PluginFeatures"],[2363,"impl-LookupDirs"],[2364,"impl-Flags-for-LookupDirs"],[3029,"impl-ProxyFeatures"],[3030,"impl-Flags-for-ProxyFeatures"],[3031,"impl-NodeFeatures"],[3032,"impl-Flags-for-NodeFeatures"],[3033,"impl-MetadataFeatures"],[3034,"impl-Flags-for-MetadataFeatures"],[3035,"impl-LinkFeatures"],[3036,"impl-Flags-for-LinkFeatures"],[3534,"impl-Display-for-Node"],[3535,"impl-Debug-for-Node"],[3536,"impl-Debug-for-PipewireObject"],[3537,"impl-Display-for-PipewireObject"],[3538,"impl-Debug-for-Port"],[3539,"impl-Display-for-Port"],[3543,"impl-Debug-for-Direction"],[3544,"impl-Display-for-Direction"],[3547,"impl-Octal-for-ProxyFeatures"],[3548,"impl-Binary-for-ProxyFeatures"],[3549,"impl-UpperHex-for-ProxyFeatures"],[3550,"impl-LowerHex-for-ProxyFeatures"],[3551,"impl-Debug-for-ProxyFeatures"],[3552,"impl-LowerHex-for-NodeFeatures"],[3553,"impl-Octal-for-NodeFeatures"],[3554,"impl-Debug-for-NodeFeatures"],[3555,"impl-UpperHex-for-NodeFeatures"],[3556,"impl-Binary-for-NodeFeatures"],[3557,"impl-Binary-for-MetadataFeatures"],[3558,"impl-UpperHex-for-MetadataFeatures"],[3559,"impl-Debug-for-MetadataFeatures"],[3560,"impl-LowerHex-for-MetadataFeatures"],[3561,"impl-Octal-for-MetadataFeatures"],[3562,"impl-UpperHex-for-LinkFeatures"],[3563,"impl-Debug-for-LinkFeatures"],[3564,"impl-LowerHex-for-LinkFeatures"],[3565,"impl-Octal-for-LinkFeatures"],[3566,"impl-Binary-for-LinkFeatures"],[3597,"impl-From%3CMetadataFeatures%3E-for-ProxyFeatures"],[3598,"impl-From%3CObjectFeatures%3E-for-ProxyFeatures"],[3599,"impl-From%3CNodeFeatures%3E-for-ProxyFeatures"],[3601,"impl-From%3CSpaDeviceFeatures%3E-for-ProxyFeatures"],[3602,"impl-From%3CLinkFeatures%3E-for-ProxyFeatures"],[3603,"impl-From%3CObjectFeatures%3E-for-NodeFeatures"],[3604,"impl-From%3CProxyFeatures%3E-for-NodeFeatures"],[3607,"impl-From%3CObjectFeatures%3E-for-MetadataFeatures"],[3608,"impl-From%3CProxyFeatures%3E-for-MetadataFeatures"],[3609,"impl-From%3CObjectFeatures%3E-for-LinkFeatures"],[3610,"impl-From%3CProxyFeatures%3E-for-LinkFeatures"],[3616,"impl-ProxyFeatures"],[3617,"impl-Flags-for-ProxyFeatures"],[3618,"impl-Flags-for-NodeFeatures"],[3619,"impl-NodeFeatures"],[3620,"impl-MetadataFeatures"],[3621,"impl-Flags-for-MetadataFeatures"],[3622,"impl-Flags-for-LinkFeatures"],[3623,"impl-LinkFeatures"],[4208,"impl-Into%3C(String,+String)%3E-for-%26PropertiesItem"],[4209,"impl-Into%3C(String,+String)%3E-for-PropertiesItem"],[4213,"impl-Into%3C%26str%3E-for-%26PipewireKey"],[4215,"impl-Into%3C%26str%3E-for-PipewireKey"],[4216,"impl-Into%3CString%3E-for-%26PipewireKey"],[4217,"impl-Into%3CString%3E-for-PipewireKey"],[4241,"impl-IntoIterator-for-%26Node"],[4242,"impl-IntoIterator-for-Node"],[4243,"impl-IntoIterator-for-Properties"],[4244,"impl-IntoIterator-for-%26Properties"],[4990,"impl-InterestMatchFlags"],[4991,"impl-Flags-for-InterestMatchFlags"],[4992,"impl-InterestMatch"],[4993,"impl-Flags-for-InterestMatch"],[5103,"impl-Debug-for-ConstraintType"],[5104,"impl-Display-for-ConstraintType"],[5105,"impl-Display-for-ConstraintVerb"],[5106,"impl-Debug-for-ConstraintVerb"],[5109,"impl-Binary-for-InterestMatchFlags"],[5110,"impl-Debug-for-InterestMatchFlags"],[5111,"impl-Octal-for-InterestMatchFlags"],[5112,"impl-LowerHex-for-InterestMatchFlags"],[5113,"impl-UpperHex-for-InterestMatchFlags"],[5114,"impl-Octal-for-InterestMatch"],[5115,"impl-UpperHex-for-InterestMatch"],[5116,"impl-Debug-for-InterestMatch"],[5117,"impl-Binary-for-InterestMatch"],[5118,"impl-LowerHex-for-InterestMatch"],[5131,"impl-InterestMatchFlags"],[5132,"impl-Flags-for-InterestMatchFlags"],[5133,"impl-InterestMatch"],[5134,"impl-Flags-for-InterestMatch"],[5282,"impl-InterestContainer%3CT%3E-for-ObjectManager"],[5283,"impl-ObjectManager"],[5427,"impl-ToValue-for-ConstraintVerb"],[5428,"impl-ConstraintVerb"],[5506,"impl-Flags-for-SessionItemFeatures"],[5507,"impl-SessionItemFeatures"],[5783,"impl-UpperHex-for-SessionItemFeatures"],[5784,"impl-Debug-for-SessionItemFeatures"],[5785,"impl-Binary-for-SessionItemFeatures"],[5786,"impl-Octal-for-SessionItemFeatures"],[5787,"impl-LowerHex-for-SessionItemFeatures"],[5806,"impl-SessionItemFeatures"],[5807,"impl-Flags-for-SessionItemFeatures"],[6930,"impl-Display-for-SpaJson"],[6931,"impl-Debug-for-SpaJson"],[7516,"impl-UnsafeFrom%3CNonNull%3Cc_void%3E%3E-for-SpaIdTable"],[7517,"impl-UnsafeFrom%3C*const+c_void%3E-for-SpaIdTable"],[7518,"impl-UnsafeFrom%3CNonNull%3Cc_void%3E%3E-for-SpaIdValue"],[7519,"impl-UnsafeFrom%3C*const+c_void%3E-for-SpaIdValue"],[7823,"impl-Iterator-for-Iterator"],[7824,"impl-Iterator"]],"a":{"active-features":[135,136],"adapter-ports-state-changed":[5585,5586],"add_interest_full":[4974],"add_keys_array":[2971],"bound":[3190,3191],"bound-id":[3192,3193],"bus-type":[852],"changed":[3194,3195],"completed":[7590,7591],"connected":[145],"core":[5043],"create-object":[1088],"direction":[3216,3217],"disconnected":[146],"endpoint-properties-changed":[5601,5602],"error":[3218,3219],"get_acquisition":[5470,5471],"get_active_features":[61,62],"get_array_child":[6798],"get_associated_proxy":[5491,5492],"get_associated_proxy_id":[5493,5494],"get_boolean":[6810,6811,6812],"get_bound_id":[3097,3098],"get_bus_type":[745],"get_bytes":[6843,6844],"get_choice_child":[6846],"get_choice_type":[6847],"get_completed":[7813,7814],"get_connection":[769],"get_control":[6881],"get_core":[184,185],"get_count":[3332],"get_data":[6884],"get_direction":[3356,3357,3358],"get_double":[6889,6890],"get_fd":[6917,6918],"get_float":[6926,6927,6928],"get_fraction":[6944,6945],"get_g_main_context":[196,439],"get_global_properties":[4119,4120],"get_id":[6105,6106,7252,7253],"get_in_item":[6107,6108],"get_instance":[861],"get_int":[7256,7257,7258],"get_interface_type":[4185,4186],"get_json":[7321],"get_key":[4280],"get_linked_object_ids":[4284],"get_location":[7818],"get_long":[7323,7324],"get_managed_object":[1490],"get_media_class":[4300,4301],"get_n_input_ports":[4302],"get_n_objects":[5292],"get_n_output_ports":[4303],"get_n_ports":[4304],"get_name":[2512,2513,4305,4306,6159,6160,7819],"get_native_info":[4309],"get_null":[7307],"get_object_id_values_table":[7363],"get_out_item":[6184,6185],"get_own_bound_id":[525],"get_param_info":[4373,4374],"get_permissions":[4436,4437],"get_pod":[7388],"get_pointer":[7389,7390],"get_ports":[6207,6208],"get_ports_format":[6209,6210],"get_ports_state":[6211,6212],"get_properties":[550,1543,4445,4446,6213,6214,6215,6216,6217,6218],"get_property":[4103,4478,6219,6220,7392],"get_pw_context":[563],"get_pw_core":[564],"get_pw_proxy":[4494],"get_rectangle":[7394,7395],"get_registration_info":[6259,6260,6261,6262],"get_remote_cookie":[576],"get_remote_host_name":[577],"get_remote_name":[578],"get_remote_properties":[579],"get_remote_user_name":[580],"get_remote_version":[581],"get_requested_features":[587],"get_size":[7412],"get_source_object":[7879,7880],"get_spa_pod":[7416],"get_spa_type":[7422],"get_state":[905,4647,4648,4649,4650],"get_string":[7432,7433,7434],"get_supported_features":[649,650],"get_user_data":[7931],"get_value":[4903],"get_values_table":[7522],"get_vm_type":[707],"id":[5610,5611],"installed":[5045],"link-properties-changed":[5612,5613],"lookup_full":[5283,5285],"lookup_port_full":[4296],"matches_full":[5286],"max-input-ports":[3250,4298],"max-output-ports":[3251,4299],"media-class":[3252,3253],"n-input-ports":[3254],"n-output-ports":[3255],"name":[3256,3257],"native-info":[3258,3259],"new_empty":[4318],"new_filtered_iterator":[5099],"new_filtered_iterator_full":[5099],"new_from_factory":[3628,3629,3630],"new_from_pw_factory":[1418],"new_from_spa_factory":[1419],"new_from_string":[7230],"new_from_stringn":[7231],"new_full":[1719],"new_iterator":[5303],"new_managed_object_iterator":[1491],"new_ports_filtered_iterator":[4444],"new_ports_filtered_iterator_full":[4444],"new_ports_iterator":[4443],"new_type":[5295],"object-added":[5051],"object-removed":[1119,5052],"objects-changed":[5053],"param-info":[3290,3291],"params-changed":[3292,3293],"permissions":[3294,3295],"port_id":[4442],"ports-changed":[3296],"properties":[1120,3297,3298,5649,5650],"pw-core":[172],"pw-impl-module":[1121],"pw-impl-node":[1559],"pw-proxy":[3301,3302],"pw-proxy-destroyed":[3299,3300],"spa-device-handle":[1630],"state":[766,3305,3306],"state-changed":[3303,3304],"supported-features":[173,174],"to_string":[7450],"update_keys_array":[4901],"update_permissions_array":[4902],"wp_client_send_error":[4553],"wp_client_update_permissions":[4902],"wp_client_update_permissions_array":[4902],"wp_constraint_type_g_property":[4947],"wp_constraint_type_get_type":[5340],"wp_constraint_type_none":[4961],"wp_constraint_type_pw_global_property":[4967],"wp_constraint_type_pw_property":[4968],"wp_constraint_verb_equals":[4946],"wp_constraint_verb_get_type":[5341],"wp_constraint_verb_in_list":[4950],"wp_constraint_verb_in_range":[4951],"wp_constraint_verb_is_absent":[4956],"wp_constraint_verb_is_present":[4957],"wp_constraint_verb_matches":[4958],"wp_constraint_verb_not_equals":[4962],"wp_core_clone":[116],"wp_core_connect":[130],"wp_core_disconnect":[198],"wp_core_get_g_main_context":[196,439],"wp_core_get_own_bound_id":[525],"wp_core_get_properties":[550],"wp_core_get_pw_context":[563],"wp_core_get_pw_core":[564],"wp_core_get_remote_cookie":[576],"wp_core_get_remote_host_name":[577],"wp_core_get_remote_name":[578],"wp_core_get_remote_properties":[579],"wp_core_get_remote_user_name":[580],"wp_core_get_remote_version":[581],"wp_core_get_vm_type":[707],"wp_core_idle_add":[465],"wp_core_idle_add_closure":[466],"wp_core_install_object_manager":[470],"wp_core_is_connected":[496],"wp_core_load_component":[506,507],"wp_core_new":[510],"wp_core_sync":[652],"wp_core_sync_closure":[653],"wp_core_timeout_add":[655],"wp_core_timeout_add_closure":[656],"wp_core_update_properties":[705],"wp_dbus_feature_enabled":[721],"wp_dbus_features_get_type":[908],"wp_dbus_get_bus_type":[745],"wp_dbus_get_connection":[769],"wp_dbus_get_instance":[861],"wp_dbus_get_state":[905],"wp_dbus_state_closed":[715],"wp_dbus_state_connected":[716],"wp_dbus_state_connecting":[717],"wp_dbus_state_get_type":[907],"wp_device_new_from_factory":[3628],"wp_direction_get_type":[4663],"wp_direction_input":[2739],"wp_direction_output":[2757],"wp_domain_library":[961],"wp_domain_library_quark":[961],"wp_endpoint_get_direction":[3356,3357],"wp_endpoint_get_media_class":[4300,4301],"wp_endpoint_get_name":[4305,4306],"wp_feature_activation_transition_get_requested_features":[587],"wp_find_file":[252],"wp_get_config_dir":[129],"wp_get_data_dir":[190],"wp_get_library_api_version":[500],"wp_get_library_version":[501],"wp_get_module_dir":[508],"wp_global_proxy_bind":[3001,3002],"wp_global_proxy_get_global_properties":[4119,4120],"wp_global_proxy_get_permissions":[4436,4437],"wp_global_proxy_request_destroy":[4540,4541],"wp_impl_endpoint_new":[1496],"wp_impl_metadata_new":[1497],"wp_impl_metadata_new_full":[1719],"wp_impl_module_load":[1488],"wp_impl_module_load_file":[1489],"wp_impl_node_new_from_pw_factory":[1418],"wp_impl_node_new_wrap":[1498],"wp_init":[467,468],"wp_init_all":[31],"wp_init_flags_get_type":[628],"wp_init_pipewire":[43],"wp_init_set_glib_log":[44],"wp_init_set_pw_log":[45],"wp_init_spa_types":[48],"wp_interest_match_flags_check_all":[4942],"wp_interest_match_flags_get_type":[5342],"wp_interest_match_flags_none":[4959],"wp_interest_match_g_properties":[4949],"wp_interest_match_get_type":[5343],"wp_interest_match_gtype":[4948],"wp_interest_match_none":[4960],"wp_interest_match_pw_global_properties":[4965],"wp_interest_match_pw_properties":[4966],"wp_iterator_get_user_data":[7931],"wp_iterator_new":[7935],"wp_iterator_new_ptr_array":[7938],"wp_iterator_next":[7824],"wp_iterator_reset":[7858],"wp_library_error_enum_get_type":[978],"wp_library_error_invalid_argument":[949],"wp_library_error_invariant":[950],"wp_library_error_operation_failed":[953],"wp_link_feature_established":[2727],"wp_link_features_get_type":[4669],"wp_link_get_linked_object_ids":[4284],"wp_link_get_state":[4647,4649],"wp_link_new_from_factory":[3629,4317],"wp_link_state_active":[2720],"wp_link_state_allocating":[2721],"wp_link_state_error":[2730],"wp_link_state_get_type":[4664],"wp_link_state_init":[2738],"wp_link_state_negotiating":[2753],"wp_link_state_paused":[2924],"wp_link_state_unlinked":[2952],"wp_log_level_is_enabled":[1746],"wp_log_level_trace":[1724],"wp_log_set_level":[1755],"wp_log_structured_standard":[1750],"wp_log_writer_default":[1766],"wp_lookup_dir_env_config":[2128],"wp_lookup_dir_env_data":[2129],"wp_lookup_dir_etc":[2130],"wp_lookup_dir_prefix_share":[2139],"wp_lookup_dir_xdg_config_home":[2153],"wp_lookup_dirs_get_type":[2609],"wp_metadata_clear":[3119,3120],"wp_metadata_feature_data":[2724],"wp_metadata_features_get_type":[4668],"wp_metadata_find":[3516,3517],"wp_metadata_iterator_item_extract":[4277],"wp_metadata_new_iterator":[4322,4323],"wp_metadata_set":[4554,4555],"wp_new_files_iterator":[253],"wp_node_feature_ports":[2765],"wp_node_features_get_type":[4667],"wp_node_get_n_input_ports":[4302],"wp_node_get_n_output_ports":[4303],"wp_node_get_n_ports":[4304],"wp_node_get_state":[4648,4650],"wp_node_lookup_port_full":[4296],"wp_node_new_from_factory":[3630],"wp_node_new_ports_filtered_iterator":[4444],"wp_node_new_ports_filtered_iterator_full":[4444],"wp_node_new_ports_iterator":[4443],"wp_node_send_command":[4552],"wp_node_state_creating":[2723],"wp_node_state_error":[2731],"wp_node_state_get_type":[4665],"wp_node_state_idle":[2737],"wp_node_state_running":[2938],"wp_node_state_suspended":[2950],"wp_object_abort_activation":[49,50],"wp_object_activate":[51,52,722,724,999,1001,2154,2156,2953,2954,2955,2956,2961,2962,2963,2964,5472,5474],"wp_object_activate_closure":[53,54,723,1000,2155,2957,2958,2959,2960,5473],"wp_object_deactivate":[193,194,772,1138,2271,3343,3344,3345,3346,5675],"wp_object_get_active_features":[61,62,725,1002,2157,2965,2966,2967,2968,5475],"wp_object_get_core":[184,185],"wp_object_get_supported_features":[649,650,915,1660,2626,4718,4719,4720,4721,6379],"wp_object_interest_add_constraint":[4973],"wp_object_interest_matches":[5288,5290,5291],"wp_object_interest_matches_full":[5286],"wp_object_interest_new_type":[5295],"wp_object_interest_validate":[5424],"wp_object_manager_add_interest_full":[4974],"wp_object_manager_get_n_objects":[5292],"wp_object_manager_is_installed":[5275],"wp_object_manager_lookup":[5283],"wp_object_manager_lookup_full":[5283,5285],"wp_object_manager_new":[5294],"wp_object_manager_new_filtered_iterator":[5099],"wp_object_manager_new_filtered_iterator_full":[5099],"wp_object_manager_new_iterator":[5303],"wp_object_manager_request_object_features":[5324],"wp_object_update_features":[703,704,943,1712,2686,4896,4897,4898,4899,6455],"wp_pipewire_object_enum_params":[3483,3484,4394],"wp_pipewire_object_enum_params_sync":[3487,3488],"wp_pipewire_object_feature_info":[2759],"wp_pipewire_object_feature_param_format":[2760],"wp_pipewire_object_feature_param_port_config":[2761],"wp_pipewire_object_feature_param_profile":[2762],"wp_pipewire_object_feature_param_props":[2763],"wp_pipewire_object_feature_param_route":[2764],"wp_pipewire_object_features_all":[2719],"wp_pipewire_object_features_minimal":[2744],"wp_pipewire_object_get_native_info":[4309],"wp_pipewire_object_get_param_info":[4373,4374],"wp_pipewire_object_get_properties":[4445,4446],"wp_pipewire_object_get_property":[4103,4478],"wp_pipewire_object_new_properties_iterator":[4324,4325],"wp_pipewire_object_set_param":[4571,4572],"wp_plugin_feature_enabled":[2127],"wp_plugin_features_get_type":[2608],"wp_plugin_find":[2328],"wp_plugin_get_name":[2512,2513],"wp_plugin_register":[2568,2569],"wp_port_get_direction":[3358],"wp_properties_add":[2969],"wp_properties_add_from_dict":[2970],"wp_properties_add_keys_array":[2971],"wp_properties_copy":[3331],"wp_properties_ensure_unique_owner":[3482],"wp_properties_get":[4094],"wp_properties_get_count":[3332],"wp_properties_item_get_key":[4280],"wp_properties_item_get_value":[4903],"wp_properties_iterator_item_get_key":[4278],"wp_properties_iterator_item_get_value":[4279],"wp_properties_matches":[4297],"wp_properties_new_copy":[4320],"wp_properties_new_copy_dict":[4321],"wp_properties_new_empty":[4318],"wp_properties_new_string":[4326],"wp_properties_new_take":[4329],"wp_properties_new_wrap":[4327],"wp_properties_new_wrap_dict":[4328],"wp_properties_peek_dict":[4435],"wp_properties_set":[4556],"wp_properties_sort":[4644],"wp_properties_to_pw_properties":[4746],"wp_properties_unref_and_take_pw_properties":[4894],"wp_properties_update":[4895],"wp_properties_update_from_dict":[4900],"wp_properties_update_keys_array":[4901],"wp_proxy_feature_bound":[2768],"wp_proxy_feature_custom_start":[2771],"wp_proxy_features_get_type":[4666],"wp_proxy_get_bound_id":[3097,3098],"wp_proxy_get_interface_type":[4185,4186],"wp_proxy_get_pw_proxy":[4494],"wp_proxy_set_pw_proxy":[4613],"wp_session_item_configure":[5576,5577],"wp_session_item_feature_active":[5434],"wp_session_item_feature_exported":[5437],"wp_session_item_features_get_type":[6348],"wp_session_item_get_associated_proxy":[5491,5492],"wp_session_item_get_associated_proxy_id":[5493,5494],"wp_session_item_get_id":[6105,6106],"wp_session_item_get_properties":[6213,6214],"wp_session_item_get_property":[6219,6220],"wp_session_item_handle_proxy_destroyed":[6088],"wp_session_item_is_configured":[6146,6147],"wp_session_item_make":[6158],"wp_session_item_register":[6256,6257],"wp_session_item_remove":[6265,6266],"wp_session_item_reset":[6275,6276],"wp_session_item_set_properties":[6296,6297],"wp_si_acquisition_release":[6263,6264],"wp_si_adapter_get_ports_format":[6209,6210],"wp_si_adapter_get_ports_state":[6211,6212],"wp_si_adapter_ports_state_configured":[5435],"wp_si_adapter_ports_state_configuring":[5436],"wp_si_adapter_ports_state_get_type":[6347],"wp_si_adapter_ports_state_none":[5445],"wp_si_adapter_set_ports_format":[6292],"wp_si_endpoint_get_properties":[6215,6216],"wp_si_endpoint_get_registration_info":[6259,6260],"wp_si_factory_construct":[5665,5666],"wp_si_factory_find":[5767],"wp_si_factory_get_name":[6159,6160],"wp_si_factory_new_simple":[6161],"wp_si_factory_register":[6258],"wp_si_link_get_in_item":[6107,6108],"wp_si_link_get_out_item":[6184,6185],"wp_si_link_get_properties":[6217,6218],"wp_si_link_get_registration_info":[6261,6262],"wp_si_linkable_get_acquisition":[5470,5471],"wp_si_linkable_get_ports":[6207,6208],"wp_spa_device_feature_enabled":[989],"wp_spa_device_features_get_type":[1636],"wp_spa_device_get_managed_object":[1490],"wp_spa_device_get_properties":[1543],"wp_spa_device_new_from_spa_factory":[1419],"wp_spa_device_new_managed_object_iterator":[1491],"wp_spa_device_new_wrap":[1499],"wp_spa_device_store_managed_object":[1657],"wp_spa_json_builder_add_boolean":[6769],"wp_spa_json_builder_add_float":[6775],"wp_spa_json_builder_add_int":[6779],"wp_spa_json_builder_add_json":[6781],"wp_spa_json_builder_add_null":[6784],"wp_spa_json_builder_add_property":[6788],"wp_spa_json_builder_add_string":[6792],"wp_spa_json_builder_end":[6891],"wp_spa_json_builder_new_array":[7329],"wp_spa_json_builder_new_object":[7348],"wp_spa_json_copy":[6882],"wp_spa_json_ensure_unique_owner":[6904],"wp_spa_json_get_data":[6884],"wp_spa_json_get_size":[7412],"wp_spa_json_is_array":[7287],"wp_spa_json_is_boolean":[7289],"wp_spa_json_is_float":[7296],"wp_spa_json_is_int":[7302],"wp_spa_json_is_null":[7306],"wp_spa_json_is_object":[7308],"wp_spa_json_is_string":[7315],"wp_spa_json_is_unique_owner":[7318],"wp_spa_json_new_boolean":[7332],"wp_spa_json_new_float":[7338],"wp_spa_json_new_from_string":[7230],"wp_spa_json_new_from_stringn":[7231],"wp_spa_json_new_int":[7342],"wp_spa_json_new_iterator":[7344],"wp_spa_json_new_null":[7347],"wp_spa_json_new_string":[7355],"wp_spa_json_parse_boolean":[7373],"wp_spa_json_parse_float":[7374],"wp_spa_json_parse_int":[7375],"wp_spa_json_parse_string":[7376],"wp_spa_json_parser_end":[6892],"wp_spa_json_parser_get_boolean":[6810],"wp_spa_json_parser_get_float":[6926],"wp_spa_json_parser_get_int":[7256],"wp_spa_json_parser_get_json":[7321],"wp_spa_json_parser_get_null":[7307],"wp_spa_json_parser_get_string":[7432],"wp_spa_json_parser_new_array":[7330],"wp_spa_json_parser_new_object":[7349],"wp_spa_json_to_string":[7450],"wp_spa_log_get_instance":[1756],"wp_spa_pod_builder_add_boolean":[6770],"wp_spa_pod_builder_add_bytes":[6771],"wp_spa_pod_builder_add_control":[6772],"wp_spa_pod_builder_add_double":[6773],"wp_spa_pod_builder_add_fd":[6774],"wp_spa_pod_builder_add_float":[6776],"wp_spa_pod_builder_add_fraction":[6777],"wp_spa_pod_builder_add_id":[6778],"wp_spa_pod_builder_add_int":[6780],"wp_spa_pod_builder_add_long":[6782],"wp_spa_pod_builder_add_none":[6783],"wp_spa_pod_builder_add_pod":[6786],"wp_spa_pod_builder_add_pointer":[6787],"wp_spa_pod_builder_add_property":[6789],"wp_spa_pod_builder_add_property_id":[6790],"wp_spa_pod_builder_add_rectangle":[6791],"wp_spa_pod_builder_add_string":[6793],"wp_spa_pod_builder_end":[6893],"wp_spa_pod_builder_new_array":[7331],"wp_spa_pod_builder_new_choice":[7335],"wp_spa_pod_builder_new_object":[7350],"wp_spa_pod_builder_new_sequence":[7354],"wp_spa_pod_builder_new_struct":[7357],"wp_spa_pod_copy":[6883],"wp_spa_pod_ensure_unique_owner":[6905],"wp_spa_pod_filter":[6920],"wp_spa_pod_fixate":[6925],"wp_spa_pod_get_array_child":[6798],"wp_spa_pod_get_boolean":[6811],"wp_spa_pod_get_bytes":[6843],"wp_spa_pod_get_choice_child":[6846],"wp_spa_pod_get_choice_type":[6847],"wp_spa_pod_get_control":[6881],"wp_spa_pod_get_double":[6889],"wp_spa_pod_get_fd":[6917],"wp_spa_pod_get_float":[6927],"wp_spa_pod_get_fraction":[6944],"wp_spa_pod_get_id":[7252],"wp_spa_pod_get_int":[7257],"wp_spa_pod_get_long":[7323],"wp_spa_pod_get_pointer":[7389],"wp_spa_pod_get_property":[7392],"wp_spa_pod_get_rectangle":[7394],"wp_spa_pod_get_spa_pod":[7416],"wp_spa_pod_get_spa_type":[7422],"wp_spa_pod_get_string":[7433],"wp_spa_pod_is_array":[7288],"wp_spa_pod_is_boolean":[7290],"wp_spa_pod_is_bytes":[7291],"wp_spa_pod_is_choice":[7292],"wp_spa_pod_is_control":[7293],"wp_spa_pod_is_double":[7294],"wp_spa_pod_is_fd":[7295],"wp_spa_pod_is_float":[7297],"wp_spa_pod_is_fraction":[7298],"wp_spa_pod_is_id":[7300],"wp_spa_pod_is_int":[7303],"wp_spa_pod_is_long":[7304],"wp_spa_pod_is_none":[7305],"wp_spa_pod_is_object":[7309],"wp_spa_pod_is_pointer":[7311],"wp_spa_pod_is_property":[7312],"wp_spa_pod_is_rectangle":[7313],"wp_spa_pod_is_sequence":[7314],"wp_spa_pod_is_string":[7316],"wp_spa_pod_is_struct":[7317],"wp_spa_pod_is_unique_owner":[7319],"wp_spa_pod_new_boolean":[7333],"wp_spa_pod_new_bytes":[7334],"wp_spa_pod_new_double":[7336],"wp_spa_pod_new_fd":[7337],"wp_spa_pod_new_float":[7339],"wp_spa_pod_new_fraction":[7340],"wp_spa_pod_new_id":[7341],"wp_spa_pod_new_int":[7343],"wp_spa_pod_new_long":[7345],"wp_spa_pod_new_none":[7346],"wp_spa_pod_new_pointer":[7352],"wp_spa_pod_new_rectangle":[7353],"wp_spa_pod_new_string":[7356],"wp_spa_pod_new_wrap":[7360],"wp_spa_pod_new_wrap_const":[7359],"wp_spa_pod_parser_end":[6894],"wp_spa_pod_parser_get_boolean":[6812],"wp_spa_pod_parser_get_bytes":[6844],"wp_spa_pod_parser_get_double":[6890],"wp_spa_pod_parser_get_fd":[6918],"wp_spa_pod_parser_get_float":[6928],"wp_spa_pod_parser_get_fraction":[6945],"wp_spa_pod_parser_get_id":[7253],"wp_spa_pod_parser_get_int":[7258],"wp_spa_pod_parser_get_long":[7324],"wp_spa_pod_parser_get_pod":[7388],"wp_spa_pod_parser_get_pointer":[7390],"wp_spa_pod_parser_get_rectangle":[7395],"wp_spa_pod_parser_get_string":[7434],"wp_spa_pod_parser_new_object":[7351],"wp_spa_pod_parser_new_struct":[7358],"wp_spa_pod_set_boolean":[7398],"wp_spa_pod_set_double":[7400],"wp_spa_pod_set_fd":[7401],"wp_spa_pod_set_float":[7402],"wp_spa_pod_set_fraction":[7403],"wp_spa_pod_set_id":[7404],"wp_spa_pod_set_int":[7405],"wp_spa_pod_set_long":[7406],"wp_spa_pod_set_pod":[7407],"wp_spa_pod_set_pointer":[7408],"wp_spa_pod_set_rectangle":[7409],"wp_spa_type_from_name":[7227],"wp_spa_type_get_object_id_values_table":[7363],"wp_spa_type_get_values_table":[7522],"wp_spa_type_is_fundamental":[7299],"wp_spa_type_is_id":[7301],"wp_spa_type_is_object":[7310],"wp_spa_type_name":[7327],"wp_spa_type_parent":[7372],"wp_state_clear":[7569],"wp_state_get_location":[7818],"wp_state_get_name":[7819],"wp_state_load":[7817],"wp_state_new":[7820],"wp_state_save":[7864],"wp_transition_advance":[7546,7547],"wp_transition_finish":[7645],"wp_transition_get_completed":[7813,7814],"wp_transition_get_source_object":[7879,7880],"wp_transition_had_error":[7777,7778],"wp_transition_new_closure":[7822],"wp_transition_step_custom_start":[7530],"wp_transition_step_error":[7531],"wp_transition_step_get_type":[7884],"wp_transition_step_none":[7534],"wpclient":[2722],"wpcomponentloader":[2122],"wpconstrainttype":[4944],"wpconstraintverb":[4945],"wpcore":[32],"wpdbus":[719],"wpdbusfeatures":[720],"wpdbusstate":[718],"wpdevice":[2725],"wpdirection":[2726],"wpendpoint":[2728],"wpfactory":[33],"wpfeatureactivationtransition":[34],"wpglobalproxy":[2735],"wpimplendpoint":[990],"wpimplmetadata":[991],"wpimplmodule":[992],"wpimplnode":[993],"wpinitflags":[35],"wpinterestmatch":[4954],"wpinterestmatchflags":[4955],"wplibraryerrorenum":[951],"wplink":[2740],"wplinkfeatures":[2741],"wplinkstate":[2742],"wplookupdirs":[2132],"wpmetadata":[2745],"wpmetadatafeatures":[2747],"wpnode":[2754],"wpnodefeatures":[2755],"wpnodestate":[2756],"wpobject":[38],"wpobjectmanager":[4964],"wppipewireobject":[2926],"wpplugin":[2140],"wppluginfeatures":[2142],"wpport":[2931],"wpproxy":[2934],"wpproxyfeatures":[2937],"wpsessionitem":[5448],"wpsessionitemfeatures":[5450],"wpsiacquisition":[5451],"wpsiadapter":[5454],"wpsiadapterportsstate":[5457],"wpsiendpoint":[5458],"wpsifactory":[5460],"wpsilink":[5462],"wpsilinkable":[5464],"wpspadevice":[997],"wpspadevicefeatures":[998],"wpspatype":[6766],"wpstate":[7535],"wptransition":[7536],"wptransitionstep":[7539]}}],\
["wireplumber_sys",{"doc":"","t":"PPPPSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSFFFFIIFFIFFIFFIFFFFFFFFFFFFFFFFIIIFIIFIFFIIIFFIFFIIFFIFFFFFFFIFFFFFFIFFIFFFFIFFFFFFFFFFIIIFFFFFFIFFFFIOOOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH","n":["None","None","Some","Some","WP_CONSTRAINT_TYPE_G_PROPERTY","WP_CONSTRAINT_TYPE_NONE","WP_CONSTRAINT_TYPE_PW_GLOBAL_PROPERTY","WP_CONSTRAINT_TYPE_PW_PROPERTY","WP_CONSTRAINT_VERB_EQUALS","WP_CONSTRAINT_VERB_IN_LIST","WP_CONSTRAINT_VERB_IN_RANGE","WP_CONSTRAINT_VERB_IS_ABSENT","WP_CONSTRAINT_VERB_IS_PRESENT","WP_CONSTRAINT_VERB_MATCHES","WP_CONSTRAINT_VERB_NOT_EQUALS","WP_DBUS_FEATURE_ENABLED","WP_DBUS_STATE_CLOSED","WP_DBUS_STATE_CONNECTED","WP_DBUS_STATE_CONNECTING","WP_DIRECTION_INPUT","WP_DIRECTION_OUTPUT","WP_INIT_ALL","WP_INIT_PIPEWIRE","WP_INIT_SET_GLIB_LOG","WP_INIT_SET_PW_LOG","WP_INIT_SPA_TYPES","WP_INTEREST_MATCH_ALL","WP_INTEREST_MATCH_FLAGS_CHECK_ALL","WP_INTEREST_MATCH_FLAGS_NONE","WP_INTEREST_MATCH_GTYPE","WP_INTEREST_MATCH_G_PROPERTIES","WP_INTEREST_MATCH_NONE","WP_INTEREST_MATCH_PW_GLOBAL_PROPERTIES","WP_INTEREST_MATCH_PW_PROPERTIES","WP_ITERATOR_METHODS_VERSION","WP_LIBRARY_ERROR_INVALID_ARGUMENT","WP_LIBRARY_ERROR_INVARIANT","WP_LIBRARY_ERROR_OPERATION_FAILED","WP_LINK_FEATURE_ESTABLISHED","WP_LINK_STATE_ACTIVE","WP_LINK_STATE_ALLOCATING","WP_LINK_STATE_ERROR","WP_LINK_STATE_INIT","WP_LINK_STATE_NEGOTIATING","WP_LINK_STATE_PAUSED","WP_LINK_STATE_UNLINKED","WP_LOG_LEVEL_TRACE","WP_LOOKUP_DIR_ENV_CONFIG","WP_LOOKUP_DIR_ENV_DATA","WP_LOOKUP_DIR_ETC","WP_LOOKUP_DIR_PREFIX_SHARE","WP_LOOKUP_DIR_XDG_CONFIG_HOME","WP_METADATA_FEATURE_DATA","WP_NODE_FEATURE_PORTS","WP_NODE_STATE_CREATING","WP_NODE_STATE_ERROR","WP_NODE_STATE_IDLE","WP_NODE_STATE_RUNNING","WP_NODE_STATE_SUSPENDED","WP_OBJECT_FEATURES_ALL","WP_OBJECT_FORMAT","WP_PIPEWIRE_OBJECT_FEATURES_ALL","WP_PIPEWIRE_OBJECT_FEATURES_MINIMAL","WP_PIPEWIRE_OBJECT_FEATURE_INFO","WP_PIPEWIRE_OBJECT_FEATURE_PARAM_FORMAT","WP_PIPEWIRE_OBJECT_FEATURE_PARAM_PORT_CONFIG","WP_PIPEWIRE_OBJECT_FEATURE_PARAM_PROFILE","WP_PIPEWIRE_OBJECT_FEATURE_PARAM_PROPS","WP_PIPEWIRE_OBJECT_FEATURE_PARAM_ROUTE","WP_PLUGIN_FEATURE_ENABLED","WP_PROXY_FEATURE_BOUND","WP_SESSION_ITEM_FEATURE_ACTIVE","WP_SESSION_ITEM_FEATURE_EXPORTED","WP_SI_ADAPTER_PORTS_STATE_CONFIGURED","WP_SI_ADAPTER_PORTS_STATE_CONFIGURING","WP_SI_ADAPTER_PORTS_STATE_NONE","WP_SPA_DEVICE_FEATURE_ENABLED","WP_SPA_TYPE_INVALID","WP_TRANSITION_STEP_CUSTOM_START","WP_TRANSITION_STEP_ERROR","WP_TRANSITION_STEP_NONE","WpClient","WpClientClass","WpComponentLoader","WpComponentLoaderClass","WpConstraintType","WpConstraintVerb","WpCore","WpCoreClass","WpDBusState","WpDbus","WpDbusClass","WpDbusFeatures","WpDevice","WpDeviceClass","WpDirection","WpEndpoint","WpEndpointClass","WpFactory","WpFactoryClass","WpFeatureActivationTransition","WpFeatureActivationTransitionClass","WpGlobalProxy","WpGlobalProxyClass","WpImplEndpoint","WpImplEndpointClass","WpImplMetadata","WpImplMetadataClass","WpImplModule","WpImplModuleClass","WpImplNode","WpImplNodeClass","WpInitFlags","WpInterestMatch","WpInterestMatchFlags","WpIterator","WpIteratorFoldFunc","WpIteratorForeachFunc","WpIteratorMethods","WpLibraryErrorEnum","WpLink","WpLinkClass","WpLinkFeatures","WpLinkState","WpLookupDirs","WpMetadata","WpMetadataClass","WpMetadataFeatures","WpNode","WpNodeClass","WpNodeFeatures","WpNodeState","WpObject","WpObjectClass","WpObjectFeatures","WpObjectInterest","WpObjectManager","WpObjectManagerClass","WpPipewireObject","WpPipewireObjectInterface","WpPlugin","WpPluginClass","WpPluginFeatures","WpPort","WpPortClass","WpProperties","WpPropertiesItem","WpProxy","WpProxyClass","WpProxyFeatures","WpSessionItem","WpSessionItemClass","WpSessionItemFeatures","WpSiAcquisition","WpSiAcquisitionInterface","WpSiAdapter","WpSiAdapterInterface","WpSiAdapterPortsState","WpSiEndpoint","WpSiEndpointInterface","WpSiFactory","WpSiFactoryClass","WpSiLink","WpSiLinkInterface","WpSiLinkable","WpSiLinkableInterface","WpSpaDevice","WpSpaDeviceClass","WpSpaDeviceFeatures","WpSpaIdTable","WpSpaIdValue","WpSpaJson","WpSpaJsonBuilder","WpSpaJsonParser","WpSpaPod","WpSpaPodBuilder","WpSpaPodParser","WpSpaType","WpState","WpStateClass","WpTransition","WpTransitionClass","WpTransitionStep","_wp_padding","_wp_padding","_wp_padding","_wp_padding","_wp_padding","_wp_padding","_wp_padding","_wp_padding","_wp_padding","_wp_padding","_wp_padding","_wp_padding","_wp_padding","_wp_padding","_wp_padding","_wp_padding","acquire","acquire_finish","activate_execute_step","activate_get_next_step","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bound","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","configure","construct","deactivate","disable","disable_active","disable_exported","enable","enable_active","enable_exported","enum_params","enum_params_finish","enum_params_sync","error","execute_step","finalize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold","foreach","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_acquisition","get_associated_proxy","get_in_item","get_native_info","get_next_step","get_out_item","get_param_info","get_ports","get_ports_format","get_ports_state","get_properties","get_properties","get_properties","get_registration_info","get_registration_info","get_supported_features","interface","interface","interface","interface","interface","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","load","next","parent_class","parent_class","parent_class","parent_class","parent_class","parent_class","parent_class","parent_class","parent_class","parent_class","parent_class","parent_class","parent_class","parent_class","parent_class","parent_class","parent_class","parent_class","parent_class","parent_class","parent_class","parent_class","parent_class","parent_class","parent_class","parent_class","parent_iface","parent_instance","parent_instance","parent_instance","parent_instance","parent_instance","parent_instance","parent_instance","parent_instance","parent_instance","parent_instance","pw_iface_type","pw_iface_version","pw_proxy_created","pw_proxy_destroyed","release","reset","reset","set_param","set_ports_format","set_ports_format_finish","supports_type","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","wp_client_get_type","wp_client_send_error","wp_client_update_permissions","wp_client_update_permissions_array","wp_component_loader_get_type","wp_constraint_type_get_type","wp_constraint_verb_get_type","wp_core_clone","wp_core_connect","wp_core_disconnect","wp_core_get_g_main_context","wp_core_get_own_bound_id","wp_core_get_properties","wp_core_get_pw_context","wp_core_get_pw_core","wp_core_get_remote_cookie","wp_core_get_remote_host_name","wp_core_get_remote_name","wp_core_get_remote_properties","wp_core_get_remote_user_name","wp_core_get_remote_version","wp_core_get_type","wp_core_get_vm_type","wp_core_idle_add","wp_core_idle_add_closure","wp_core_install_object_manager","wp_core_is_connected","wp_core_load_component","wp_core_new","wp_core_sync","wp_core_sync_closure","wp_core_sync_finish","wp_core_timeout_add","wp_core_timeout_add_closure","wp_core_update_properties","wp_dbus_features_get_type","wp_dbus_get_bus_type","wp_dbus_get_connection","wp_dbus_get_instance","wp_dbus_get_state","wp_dbus_get_type","wp_dbus_state_get_type","wp_device_get_type","wp_device_new_from_factory","wp_direction_get_type","wp_domain_library_quark","wp_endpoint_get_direction","wp_endpoint_get_media_class","wp_endpoint_get_name","wp_endpoint_get_type","wp_factory_get_type","wp_feature_activation_transition_get_requested_features","wp_feature_activation_transition_get_type","wp_find_file","wp_get_config_dir","wp_get_data_dir","wp_get_library_api_version","wp_get_library_version","wp_get_module_dir","wp_global_proxy_bind","wp_global_proxy_get_global_properties","wp_global_proxy_get_permissions","wp_global_proxy_get_type","wp_global_proxy_request_destroy","wp_impl_endpoint_get_type","wp_impl_endpoint_new","wp_impl_metadata_get_type","wp_impl_metadata_new","wp_impl_metadata_new_full","wp_impl_module_get_type","wp_impl_module_load","wp_impl_module_load_file","wp_impl_node_get_type","wp_impl_node_new_from_pw_factory","wp_impl_node_new_wrap","wp_init","wp_init_flags_get_type","wp_interest_match_flags_get_type","wp_interest_match_get_type","wp_iterator_fold","wp_iterator_foreach","wp_iterator_get_type","wp_iterator_get_user_data","wp_iterator_new","wp_iterator_new_ptr_array","wp_iterator_next","wp_iterator_ref","wp_iterator_reset","wp_iterator_unref","wp_library_error_enum_get_type","wp_link_features_get_type","wp_link_get_linked_object_ids","wp_link_get_state","wp_link_get_type","wp_link_new_from_factory","wp_link_state_get_type","wp_log_level_is_enabled","wp_log_set_level","wp_log_structured_standard","wp_log_writer_default","wp_lookup_dirs_get_type","wp_metadata_clear","wp_metadata_features_get_type","wp_metadata_find","wp_metadata_get_type","wp_metadata_iterator_item_extract","wp_metadata_new_iterator","wp_metadata_set","wp_new_files_iterator","wp_node_features_get_type","wp_node_get_n_input_ports","wp_node_get_n_output_ports","wp_node_get_n_ports","wp_node_get_state","wp_node_get_type","wp_node_lookup_port","wp_node_lookup_port_full","wp_node_new_from_factory","wp_node_new_ports_filtered_iterator","wp_node_new_ports_filtered_iterator_full","wp_node_new_ports_iterator","wp_node_send_command","wp_node_state_get_type","wp_object_abort_activation","wp_object_activate","wp_object_activate_closure","wp_object_activate_finish","wp_object_deactivate","wp_object_get_active_features","wp_object_get_core","wp_object_get_supported_features","wp_object_get_type","wp_object_interest_add_constraint","wp_object_interest_get_type","wp_object_interest_matches","wp_object_interest_matches_full","wp_object_interest_new","wp_object_interest_new_type","wp_object_interest_ref","wp_object_interest_unref","wp_object_interest_validate","wp_object_manager_add_interest","wp_object_manager_add_interest_full","wp_object_manager_get_n_objects","wp_object_manager_get_type","wp_object_manager_is_installed","wp_object_manager_lookup","wp_object_manager_lookup_full","wp_object_manager_new","wp_object_manager_new_filtered_iterator","wp_object_manager_new_filtered_iterator_full","wp_object_manager_new_iterator","wp_object_manager_request_object_features","wp_object_update_features","wp_pipewire_object_enum_params","wp_pipewire_object_enum_params_finish","wp_pipewire_object_enum_params_sync","wp_pipewire_object_get_native_info","wp_pipewire_object_get_param_info","wp_pipewire_object_get_properties","wp_pipewire_object_get_property","wp_pipewire_object_get_type","wp_pipewire_object_new_properties_iterator","wp_pipewire_object_set_param","wp_plugin_features_get_type","wp_plugin_find","wp_plugin_get_name","wp_plugin_get_type","wp_plugin_register","wp_port_get_direction","wp_port_get_type","wp_properties_add","wp_properties_add_from_dict","wp_properties_add_keys","wp_properties_add_keys_array","wp_properties_add_keys_from_dict","wp_properties_copy","wp_properties_ensure_unique_owner","wp_properties_get","wp_properties_get_count","wp_properties_get_type","wp_properties_item_get_key","wp_properties_item_get_type","wp_properties_item_get_value","wp_properties_item_ref","wp_properties_item_unref","wp_properties_iterator_item_get_key","wp_properties_iterator_item_get_value","wp_properties_matches","wp_properties_new","wp_properties_new_copy","wp_properties_new_copy_dict","wp_properties_new_empty","wp_properties_new_iterator","wp_properties_new_string","wp_properties_new_take","wp_properties_new_wrap","wp_properties_new_wrap_dict","wp_properties_peek_dict","wp_properties_ref","wp_properties_set","wp_properties_setf","wp_properties_sort","wp_properties_to_pw_properties","wp_properties_unref","wp_properties_unref_and_take_pw_properties","wp_properties_update","wp_properties_update_from_dict","wp_properties_update_keys","wp_properties_update_keys_array","wp_properties_update_keys_from_dict","wp_proxy_features_get_type","wp_proxy_get_bound_id","wp_proxy_get_interface_type","wp_proxy_get_pw_proxy","wp_proxy_get_type","wp_proxy_set_pw_proxy","wp_session_item_configure","wp_session_item_features_get_type","wp_session_item_get_associated_proxy","wp_session_item_get_associated_proxy_id","wp_session_item_get_id","wp_session_item_get_properties","wp_session_item_get_property","wp_session_item_get_type","wp_session_item_handle_proxy_destroyed","wp_session_item_is_configured","wp_session_item_make","wp_session_item_register","wp_session_item_remove","wp_session_item_reset","wp_session_item_set_properties","wp_si_acquisition_acquire","wp_si_acquisition_acquire_finish","wp_si_acquisition_get_type","wp_si_acquisition_release","wp_si_adapter_get_ports_format","wp_si_adapter_get_ports_state","wp_si_adapter_get_type","wp_si_adapter_ports_state_get_type","wp_si_adapter_set_ports_format","wp_si_adapter_set_ports_format_finish","wp_si_endpoint_get_properties","wp_si_endpoint_get_registration_info","wp_si_endpoint_get_type","wp_si_factory_construct","wp_si_factory_find","wp_si_factory_get_name","wp_si_factory_get_type","wp_si_factory_new_simple","wp_si_factory_register","wp_si_link_get_in_item","wp_si_link_get_out_item","wp_si_link_get_properties","wp_si_link_get_registration_info","wp_si_link_get_type","wp_si_linkable_get_acquisition","wp_si_linkable_get_ports","wp_si_linkable_get_type","wp_spa_device_features_get_type","wp_spa_device_get_managed_object","wp_spa_device_get_properties","wp_spa_device_get_type","wp_spa_device_new_from_spa_factory","wp_spa_device_new_managed_object_iterator","wp_spa_device_new_wrap","wp_spa_device_store_managed_object","wp_spa_dynamic_id_table_register","wp_spa_dynamic_type_deinit","wp_spa_dynamic_type_init","wp_spa_dynamic_type_register","wp_spa_id_table_find_value","wp_spa_id_table_find_value_from_name","wp_spa_id_table_find_value_from_short_name","wp_spa_id_table_from_name","wp_spa_id_table_get_type","wp_spa_id_table_new_iterator","wp_spa_id_value_array_get_item_type","wp_spa_id_value_from_name","wp_spa_id_value_from_number","wp_spa_id_value_from_short_name","wp_spa_id_value_get_type","wp_spa_id_value_get_value_type","wp_spa_id_value_name","wp_spa_id_value_number","wp_spa_id_value_short_name","wp_spa_json_builder_add","wp_spa_json_builder_add_boolean","wp_spa_json_builder_add_float","wp_spa_json_builder_add_int","wp_spa_json_builder_add_json","wp_spa_json_builder_add_null","wp_spa_json_builder_add_property","wp_spa_json_builder_add_string","wp_spa_json_builder_end","wp_spa_json_builder_get_type","wp_spa_json_builder_new_array","wp_spa_json_builder_new_object","wp_spa_json_builder_ref","wp_spa_json_builder_unref","wp_spa_json_copy","wp_spa_json_ensure_unique_owner","wp_spa_json_get_data","wp_spa_json_get_size","wp_spa_json_get_spa_json","wp_spa_json_get_type","wp_spa_json_is_array","wp_spa_json_is_boolean","wp_spa_json_is_float","wp_spa_json_is_int","wp_spa_json_is_null","wp_spa_json_is_object","wp_spa_json_is_string","wp_spa_json_is_unique_owner","wp_spa_json_new_array","wp_spa_json_new_boolean","wp_spa_json_new_float","wp_spa_json_new_from_string","wp_spa_json_new_from_stringn","wp_spa_json_new_int","wp_spa_json_new_iterator","wp_spa_json_new_null","wp_spa_json_new_object","wp_spa_json_new_string","wp_spa_json_new_wrap","wp_spa_json_object_get","wp_spa_json_parse_array","wp_spa_json_parse_boolean","wp_spa_json_parse_float","wp_spa_json_parse_int","wp_spa_json_parse_object","wp_spa_json_parse_string","wp_spa_json_parser_end","wp_spa_json_parser_get","wp_spa_json_parser_get_boolean","wp_spa_json_parser_get_float","wp_spa_json_parser_get_int","wp_spa_json_parser_get_json","wp_spa_json_parser_get_null","wp_spa_json_parser_get_string","wp_spa_json_parser_get_type","wp_spa_json_parser_new_array","wp_spa_json_parser_new_object","wp_spa_json_parser_ref","wp_spa_json_parser_unref","wp_spa_json_ref","wp_spa_json_to_string","wp_spa_json_unref","wp_spa_log_get_instance","wp_spa_pod_builder_add","wp_spa_pod_builder_add_boolean","wp_spa_pod_builder_add_bytes","wp_spa_pod_builder_add_control","wp_spa_pod_builder_add_double","wp_spa_pod_builder_add_fd","wp_spa_pod_builder_add_float","wp_spa_pod_builder_add_fraction","wp_spa_pod_builder_add_id","wp_spa_pod_builder_add_int","wp_spa_pod_builder_add_long","wp_spa_pod_builder_add_none","wp_spa_pod_builder_add_pod","wp_spa_pod_builder_add_pointer","wp_spa_pod_builder_add_property","wp_spa_pod_builder_add_property_id","wp_spa_pod_builder_add_rectangle","wp_spa_pod_builder_add_string","wp_spa_pod_builder_end","wp_spa_pod_builder_get_type","wp_spa_pod_builder_new_array","wp_spa_pod_builder_new_choice","wp_spa_pod_builder_new_object","wp_spa_pod_builder_new_sequence","wp_spa_pod_builder_new_struct","wp_spa_pod_builder_ref","wp_spa_pod_builder_unref","wp_spa_pod_copy","wp_spa_pod_ensure_unique_owner","wp_spa_pod_equal","wp_spa_pod_filter","wp_spa_pod_fixate","wp_spa_pod_get_array_child","wp_spa_pod_get_boolean","wp_spa_pod_get_bytes","wp_spa_pod_get_choice_child","wp_spa_pod_get_choice_type","wp_spa_pod_get_control","wp_spa_pod_get_double","wp_spa_pod_get_fd","wp_spa_pod_get_float","wp_spa_pod_get_fraction","wp_spa_pod_get_id","wp_spa_pod_get_int","wp_spa_pod_get_long","wp_spa_pod_get_object","wp_spa_pod_get_pointer","wp_spa_pod_get_property","wp_spa_pod_get_rectangle","wp_spa_pod_get_spa_pod","wp_spa_pod_get_spa_type","wp_spa_pod_get_string","wp_spa_pod_get_struct","wp_spa_pod_get_type","wp_spa_pod_is_array","wp_spa_pod_is_boolean","wp_spa_pod_is_bytes","wp_spa_pod_is_choice","wp_spa_pod_is_control","wp_spa_pod_is_double","wp_spa_pod_is_fd","wp_spa_pod_is_float","wp_spa_pod_is_fraction","wp_spa_pod_is_id","wp_spa_pod_is_int","wp_spa_pod_is_long","wp_spa_pod_is_none","wp_spa_pod_is_object","wp_spa_pod_is_pointer","wp_spa_pod_is_property","wp_spa_pod_is_rectangle","wp_spa_pod_is_sequence","wp_spa_pod_is_string","wp_spa_pod_is_struct","wp_spa_pod_is_unique_owner","wp_spa_pod_new_boolean","wp_spa_pod_new_bytes","wp_spa_pod_new_choice","wp_spa_pod_new_double","wp_spa_pod_new_fd","wp_spa_pod_new_float","wp_spa_pod_new_fraction","wp_spa_pod_new_id","wp_spa_pod_new_int","wp_spa_pod_new_iterator","wp_spa_pod_new_long","wp_spa_pod_new_none","wp_spa_pod_new_object","wp_spa_pod_new_pointer","wp_spa_pod_new_rectangle","wp_spa_pod_new_sequence","wp_spa_pod_new_string","wp_spa_pod_new_wrap","wp_spa_pod_new_wrap_const","wp_spa_pod_parser_end","wp_spa_pod_parser_get","wp_spa_pod_parser_get_boolean","wp_spa_pod_parser_get_bytes","wp_spa_pod_parser_get_double","wp_spa_pod_parser_get_fd","wp_spa_pod_parser_get_float","wp_spa_pod_parser_get_fraction","wp_spa_pod_parser_get_id","wp_spa_pod_parser_get_int","wp_spa_pod_parser_get_long","wp_spa_pod_parser_get_pod","wp_spa_pod_parser_get_pointer","wp_spa_pod_parser_get_rectangle","wp_spa_pod_parser_get_string","wp_spa_pod_parser_get_type","wp_spa_pod_parser_new_object","wp_spa_pod_parser_new_struct","wp_spa_pod_parser_ref","wp_spa_pod_parser_unref","wp_spa_pod_ref","wp_spa_pod_set_boolean","wp_spa_pod_set_double","wp_spa_pod_set_fd","wp_spa_pod_set_float","wp_spa_pod_set_fraction","wp_spa_pod_set_id","wp_spa_pod_set_int","wp_spa_pod_set_long","wp_spa_pod_set_pod","wp_spa_pod_set_pointer","wp_spa_pod_set_rectangle","wp_spa_pod_unref","wp_spa_type_from_name","wp_spa_type_get_object_id_values_table","wp_spa_type_get_type","wp_spa_type_get_values_table","wp_spa_type_is_fundamental","wp_spa_type_is_id","wp_spa_type_is_object","wp_spa_type_name","wp_spa_type_parent","wp_state_clear","wp_state_get_location","wp_state_get_name","wp_state_get_type","wp_state_load","wp_state_new","wp_state_save","wp_transition_advance","wp_transition_finish","wp_transition_get_completed","wp_transition_get_data","wp_transition_get_source_object","wp_transition_get_source_tag","wp_transition_get_type","wp_transition_had_error","wp_transition_is_tagged","wp_transition_new","wp_transition_new_closure","wp_transition_return_error","wp_transition_set_data","wp_transition_set_source_tag","wp_transition_step_get_type"],"q":[[0,"wireplumber_sys"],[1529,"core::fmt"],[1530,"core::fmt"],[1531,"core::any"]],"d":["No value.","No value.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codei":[81,82,81,82,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,6,9,16,18,20,21,23,24,25,26,27,28,29,30,33,25,25,18,18,45,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,23,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,24,28,18,21,24,24,21,24,24,20,20,20,23,33,14,45,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,14,14,45,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,30,24,29,20,33,29,20,30,26,26,20,27,29,27,29,18,25,26,27,29,30,45,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,2,14,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,21,22,23,24,28,31,32,33,20,34,35,36,37,38,39,40,41,42,43,23,23,23,23,25,14,24,20,26,26,2,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[1,1],[2,2],[3,3],[4,4],[5,5],[6,6],[7,7],[8,8],[9,9],[10,10],[11,11],[12,12],[13,13],[14,14],[15,15],[16,16],[17,17],[18,18],[19,19],[20,20],[21,21],[22,22],[23,23],[24,24],[25,25],[26,26],[27,27],[28,28],[29,29],[30,30],[31,31],[32,32],[33,33],[34,34],[35,35],[36,36],[37,37],[38,38],[39,39],[40,40],[41,41],[42,42],[43,43],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[45,46],47],[[48,46],47],[[49,46],47],[[50,46],47],[[51,46],47],[[52,46],47],[[53,46],47],[[54,46],47],[[55,46],47],[[56,46],47],[[57,46],47],[[58,46],47],[[59,46],47],[[60,46],47],[[61,46],47],[[62,46],47],[[63,46],47],[[64,46],47],[[65,46],47],[[66,46],47],[[67,46],47],[[68,46],47],[[69,46],47],[[70,46],47],[[71,46],47],[[72,46],47],[[73,46],47],[[74,46],47],[[75,46],47],[[76,46],47],[[77,46],47],[[78,46],47],[[1,46],47],[[2,46],47],[[3,46],47],[[4,46],47],[[5,46],47],[[6,46],47],[[7,46],47],[[8,46],47],[[9,46],47],[[10,46],47],[[11,46],47],[[12,46],47],[[13,46],47],[[14,46],47],[[15,46],47],[[16,46],47],[[17,46],47],[[18,46],47],[[19,46],47],[[20,46],47],[[21,46],47],[[22,46],47],[[23,46],47],[[24,46],47],[[25,46],47],[[26,46],47],[[27,46],47],[[28,46],47],[[29,46],47],[[30,46],47],[[31,46],47],[[32,46],47],[[33,46],47],[[34,46],47],[[35,46],47],[[36,46],47],[[37,46],47],[[38,46],47],[[39,46],47],[[40,46],47],[[41,46],47],[[42,46],47],[[43,46],47],0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[5,"WpClientClass",0],[5,"WpComponentLoaderClass",0],[5,"WpCoreClass",0],[5,"WpDbusClass",0],[5,"WpDeviceClass",0],[5,"WpEndpointClass",0],[5,"WpFactoryClass",0],[5,"WpFeatureActivationTransitionClass",0],[5,"WpGlobalProxyClass",0],[5,"WpImplEndpointClass",0],[5,"WpImplMetadataClass",0],[5,"WpImplModuleClass",0],[5,"WpImplNodeClass",0],[5,"WpIteratorMethods",0],[5,"WpLinkClass",0],[5,"WpMetadataClass",0],[5,"WpNodeClass",0],[5,"WpObjectClass",0],[5,"WpObjectManagerClass",0],[5,"WpPipewireObjectInterface",0],[5,"WpPluginClass",0],[5,"WpPortClass",0],[5,"WpProxyClass",0],[5,"WpSessionItemClass",0],[5,"WpSiAcquisitionInterface",0],[5,"WpSiAdapterInterface",0],[5,"WpSiEndpointInterface",0],[5,"WpSiFactoryClass",0],[5,"WpSiLinkInterface",0],[5,"WpSiLinkableInterface",0],[5,"WpSpaDeviceClass",0],[5,"WpStateClass",0],[5,"WpTransitionClass",0],[5,"WpComponentLoader",0],[5,"WpEndpoint",0],[5,"WpGlobalProxy",0],[5,"WpMetadata",0],[5,"WpObject",0],[5,"WpPlugin",0],[5,"WpProxy",0],[5,"WpSessionItem",0],[5,"WpSiFactory",0],[5,"WpTransition",0],[1,"tuple"],[5,"WpIterator",0],[5,"Formatter",1529],[8,"Result",1529],[5,"WpObjectInterest",0],[5,"WpProperties",0],[5,"WpPropertiesItem",0],[5,"WpSpaJson",0],[5,"WpSpaJsonBuilder",0],[5,"WpSpaJsonParser",0],[5,"WpSpaPod",0],[5,"WpSpaPodBuilder",0],[5,"WpSpaPodParser",0],[5,"WpClient",0],[5,"WpCore",0],[5,"WpDbus",0],[5,"WpDevice",0],[5,"WpFactory",0],[5,"WpFeatureActivationTransition",0],[5,"WpImplEndpoint",0],[5,"WpImplMetadata",0],[5,"WpImplModule",0],[5,"WpImplNode",0],[5,"WpLink",0],[5,"WpNode",0],[5,"WpObjectManager",0],[5,"WpPort",0],[5,"WpSpaDevice",0],[5,"WpState",0],[5,"WpPipewireObject",0],[5,"WpSiAcquisition",0],[5,"WpSiAdapter",0],[5,"WpSiEndpoint",0],[5,"WpSiLink",0],[5,"WpSiLinkable",0],[6,"Result",1530],[5,"TypeId",1531],[8,"WpIteratorFoldFunc",0],[8,"WpIteratorForeachFunc",0]],"b":[]}],\
["wpexec",{"doc":"wpexec example","t":"FSPPGPPNNNNNNNNNNNNNNNNNNNONNHHNONONONNNNNNNNNNNN","n":["Args","LOG_DOMAIN","Lua","LuaConfig","ModuleType","Pipewire","Wireplumber","augment_args","augment_args_for_update","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","fmt","fmt","from","from","from_arg_matches","from_arg_matches_mut","into","into","into_app","into_app_for_update","is_lua","json_arg","loader_module","loader_type","main","main_async","module","module","module_dir","module_type","plugins","plugins","to_owned","to_possible_value","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","value_variants","variant"],"q":[[0,"wpexec"],[49,"clap::builder::command"],[50,"core::fmt"],[51,"core::fmt"],[52,"clap::error"],[53,"core::result"],[54,"core::option"],[55,"anyhow"],[56,"wireplumber::auto::core"],[57,"alloc::vec"],[58,"clap::builder::possible_value"],[59,"core::any"],[60,"wireplumber::lua::variant"]],"d":["Command-line arguments parsed via clap","GLib logging domain","A Lua WirePlumber script","A WirePlumber Lua configuration file","The type of module to be loaded","A PipeWire module","A native WirePlumber module","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Arguments to pass to the loaded module","A module that provides the necessary loader","The type name expected by a ComponentLoader","Main entry point responsible for WirePlumber and PipeWire …","Load the script specified by Args and connect to the …","The module or script to load","Name or full path of the module or script to load","Environment variable that affects path resolution for this …","","The Plugin names to load as part of initialization","Associated plugins to load, provided by the module","","","","","","","","","","","","A JSON-like blob of data to pass as an argument to the …"],"i":[0,0,2,2,0,2,2,6,6,2,6,2,6,2,2,2,6,2,6,6,6,2,6,6,6,2,6,2,2,0,0,6,6,2,6,6,6,2,2,2,6,2,6,2,6,6,6,2,6],"f":[0,0,0,0,0,0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,2],[[-1,-2],3,[],[]],[[2,4],5],[[6,4],5],[-1,-1,[]],[-1,-1,[]],[7,[[9,[6,8]]]],[7,[[9,[6,8]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[2,10],0,[2,[[12,[11]]]],[2,11],[[],[[13,[3]]]],[[14,6],[[13,[3]]]],[6,[[12,[11]]]],0,[2,[[12,[11]]]],0,[6,[[15,[11]]]],0,[-1,-2,[],[]],[2,[[12,[16]]]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,17,[]],[-1,17,[]],[[6,7],[[9,[3,8]]]],[[6,7],[[9,[3,8]]]],[[],[[18,[2]]]],[6,[[13,[[12,[19]]]]]]],"c":[],"p":[[8,"Command",49],[6,"ModuleType",0],[1,"tuple"],[5,"Formatter",50],[8,"Result",50],[5,"Args",0],[5,"ArgMatches",51],[5,"Error",52],[6,"Result",53],[1,"bool"],[1,"str"],[6,"Option",54],[8,"Result",55],[5,"Core",56],[5,"Vec",57],[5,"PossibleValue",58],[5,"TypeId",59],[1,"slice"],[5,"LuaVariant",60]],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
