(function() {var implementors = {};
implementors["wireplumber"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a>&gt; for <a class=\"enum\" href=\"wireplumber/registry/enum.ConstraintVerb.html\" title=\"enum wireplumber::registry::ConstraintVerb\">ConstraintVerb</a>","synthetic":false,"types":["wireplumber::auto::enums::ConstraintVerb"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"wireplumber/struct.SpaType.html\" title=\"struct wireplumber::SpaType\">SpaType</a>","synthetic":false,"types":["wireplumber::auto::spa_type::SpaType"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;'a <a class=\"struct\" href=\"wireplumber/struct.SpaPod.html\" title=\"struct wireplumber::SpaPod\">SpaPod</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;'a <a class=\"struct\" href=\"wireplumber/struct.SpaPod.html\" title=\"struct wireplumber::SpaPod\">SpaPod</a>&gt; for <a class=\"struct\" href=\"wireplumber/struct.SpaBool.html\" title=\"struct wireplumber::SpaBool\">SpaBool</a>","synthetic":false,"types":["wireplumber::spa::traits::SpaBool"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;'a <a class=\"struct\" href=\"wireplumber/struct.SpaPod.html\" title=\"struct wireplumber::SpaPod\">SpaPod</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;'a <a class=\"struct\" href=\"wireplumber/struct.SpaPod.html\" title=\"struct wireplumber::SpaPod\">SpaPod</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;'a <a class=\"struct\" href=\"wireplumber/struct.SpaPod.html\" title=\"struct wireplumber::SpaPod\">SpaPod</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;'a <a class=\"struct\" href=\"wireplumber/struct.SpaPod.html\" title=\"struct wireplumber::SpaPod\">SpaPod</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\">i64</a>","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;'a <a class=\"struct\" href=\"wireplumber/struct.SpaPod.html\" title=\"struct wireplumber::SpaPod\">SpaPod</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;'a <a class=\"struct\" href=\"wireplumber/struct.SpaPod.html\" title=\"struct wireplumber::SpaPod\">SpaPod</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f32.html\">f32</a>","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;'a <a class=\"struct\" href=\"wireplumber/struct.SpaPod.html\" title=\"struct wireplumber::SpaPod\">SpaPod</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a>","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;'a <a class=\"struct\" href=\"wireplumber/struct.SpaPod.html\" title=\"struct wireplumber::SpaPod\">SpaPod</a>&gt; for <a class=\"struct\" href=\"https://gtk-rs.org/gtk-rs-core/git/docs/glib/gstring/struct.GString.html\" title=\"struct glib::gstring::GString\">GString</a>","synthetic":false,"types":["glib::gstring::GString"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;'a <a class=\"struct\" href=\"wireplumber/struct.SpaPod.html\" title=\"struct wireplumber::SpaPod\">SpaPod</a>&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>","synthetic":false,"types":["alloc::string::String"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;'a <a class=\"struct\" href=\"wireplumber/struct.SpaPod.html\" title=\"struct wireplumber::SpaPod\">SpaPod</a>&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;","synthetic":false,"types":["alloc::vec::Vec"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;'a <a class=\"struct\" href=\"wireplumber/struct.SpaPod.html\" title=\"struct wireplumber::SpaPod\">SpaPod</a>&gt; for <a class=\"struct\" href=\"https://pipewire.pages.freedesktop.org/pipewire-rs/libspa_sys/bindings/struct.spa_rectangle.html\" title=\"struct libspa_sys::bindings::spa_rectangle\">spa_rectangle</a>","synthetic":false,"types":["libspa_sys::bindings::spa_rectangle"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;'a <a class=\"struct\" href=\"wireplumber/struct.SpaPod.html\" title=\"struct wireplumber::SpaPod\">SpaPod</a>&gt; for <a class=\"struct\" href=\"https://pipewire.pages.freedesktop.org/pipewire-rs/libspa_sys/bindings/struct.spa_fraction.html\" title=\"struct libspa_sys::bindings::spa_fraction\">spa_fraction</a>","synthetic":false,"types":["libspa_sys::bindings::spa_fraction"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;'a <a class=\"struct\" href=\"wireplumber/struct.SpaPod.html\" title=\"struct wireplumber::SpaPod\">SpaPod</a>&gt; for <a class=\"struct\" href=\"wireplumber/struct.SpaPod.html\" title=\"struct wireplumber::SpaPod\">SpaPod</a>","synthetic":false,"types":["wireplumber::auto::spa_pod::SpaPod"]},{"text":"impl&lt;'a, T:&nbsp;for&lt;'f&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;'f <a class=\"struct\" href=\"wireplumber/struct.SpaPod.html\" title=\"struct wireplumber::SpaPod\">SpaPod</a>&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;'a <a class=\"struct\" href=\"wireplumber/struct.SpaPod.html\" title=\"struct wireplumber::SpaPod\">SpaPod</a>&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;for&lt;'f&gt; &lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;'f <a class=\"struct\" href=\"wireplumber/struct.SpaPod.html\" title=\"struct wireplumber::SpaPod\">SpaPod</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://gtk-rs.org/gtk-rs-core/git/docs/glib/translate/struct.GlibNoneError.html\" title=\"struct glib::translate::GlibNoneError\">GlibNoneError</a>&gt;,&nbsp;</span>","synthetic":false,"types":["alloc::vec::Vec"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;'a <a class=\"struct\" href=\"wireplumber/struct.SpaPod.html\" title=\"struct wireplumber::SpaPod\">SpaPod</a>&gt; for <a class=\"struct\" href=\"https://pipewire.pages.freedesktop.org/pipewire-rs/libspa/utils/struct.Id.html\" title=\"struct libspa::utils::Id\">Id</a>","synthetic":false,"types":["libspa::utils::Id"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;'a <a class=\"struct\" href=\"wireplumber/struct.SpaPod.html\" title=\"struct wireplumber::SpaPod\">SpaPod</a>&gt; for <a class=\"struct\" href=\"https://pipewire.pages.freedesktop.org/pipewire-rs/libspa/utils/struct.Fd.html\" title=\"struct libspa::utils::Fd\">Fd</a>","synthetic":false,"types":["libspa::utils::Fd"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;'a <a class=\"struct\" href=\"wireplumber/struct.SpaPod.html\" title=\"struct wireplumber::SpaPod\">SpaPod</a>&gt; for <a class=\"enum\" href=\"https://pipewire.pages.freedesktop.org/pipewire-rs/libspa/pod/enum.Value.html\" title=\"enum libspa::pod::Value\">Value</a>","synthetic":false,"types":["libspa::pod::Value"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://gtk-rs.org/gtk-rs-core/git/docs/glib/variant/struct.Variant.html\" title=\"struct glib::variant::Variant\">Variant</a>&gt; for <a class=\"struct\" href=\"wireplumber/lua/struct.LuaVariant.html\" title=\"struct wireplumber::lua::LuaVariant\">LuaVariant</a>","synthetic":false,"types":["wireplumber::lua::variant::LuaVariant"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;'a <a class=\"struct\" href=\"https://gtk-rs.org/gtk-rs-core/git/docs/glib/variant/struct.Variant.html\" title=\"struct glib::variant::Variant\">Variant</a>&gt; for <a class=\"struct\" href=\"wireplumber/lua/struct.LuaVariant.html\" title=\"struct wireplumber::lua::LuaVariant\">LuaVariant</a>","synthetic":false,"types":["wireplumber::lua::variant::LuaVariant"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()