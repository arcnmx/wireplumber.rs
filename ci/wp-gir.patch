diff --git a/src/auto/flags.rs b/src/auto/flags.rs
index 5f67d788..fd8efb82 100644
--- a/src/auto/flags.rs
+++ b/src/auto/flags.rs
@@ -367,8 +367,6 @@ bitflags! {
         #[cfg_attr(docsrs, doc(cfg(feature = "v0_4_11")))]
         #[doc(alias = "WP_LINK_FEATURE_ESTABLISHED")]
         const ESTABLISHED = ffi::WP_LINK_FEATURE_ESTABLISHED as _;
-
-        const PROXY_FEATURES = ProxyFeatures::ALL.bits();
     }
 }
 
@@ -390,6 +388,4 @@ impl FromGlib<ffi::WpLinkFeatures> for LinkFeatures {
     }
 }
 
-#[cfg(feature = "v0_4_11")]
-#[cfg_attr(docsrs, doc(cfg(feature = "v0_4_11")))]
 impl StaticType for LinkFeatures {
@@ -530,8 +535,6 @@ bitflags! {
     pub struct MetadataFeatures: u32 {
         #[doc(alias = "WP_METADATA_FEATURE_DATA")]
         const DATA = ffi::WP_METADATA_FEATURE_DATA as _;
-
-        const PROXY_FEATURE_BOUND = ProxyFeatures::PROXY_FEATURE_BOUND.bits();
     }
 }
 
@@ -612,8 +615,6 @@ bitflags! {
     pub struct NodeFeatures: u32 {
         #[doc(alias = "WP_NODE_FEATURE_PORTS")]
         const PORTS = ffi::WP_NODE_FEATURE_PORTS as _;
-
-        const PROXY_FEATURES = ProxyFeatures::ALL.bits();
     }
 }
 
@@ -786,10 +787,6 @@ bitflags! {
         const PIPEWIRE_OBJECT_FEATURE_PARAM_PORT_CONFIG = ffi::WP_PIPEWIRE_OBJECT_FEATURE_PARAM_PORT_CONFIG as _;
         #[doc(alias = "WP_PIPEWIRE_OBJECT_FEATURE_PARAM_ROUTE")]
         const PIPEWIRE_OBJECT_FEATURE_PARAM_ROUTE = ffi::WP_PIPEWIRE_OBJECT_FEATURE_PARAM_ROUTE as _;
-
-        #[doc(alias = "WP_PROXY_FEATURE_CUSTOM_START")]
-        const PROXY_FEATURE_CUSTOM_START = 1 << 16;
-        const PROXY_FEATURE_CUSTOM = 0xff00;
     }
 }
 
@@ -952,8 +949,6 @@ bitflags! {
     pub struct SpaDeviceFeatures: u32 {
         #[doc(alias = "WP_SPA_DEVICE_FEATURE_ENABLED")]
         const ENABLED = ffi::WP_SPA_DEVICE_FEATURE_ENABLED as _;
-
-        const PROXY_FEATURE_BOUND = ProxyFeatures::PROXY_FEATURE_BOUND.bits();
     }
 }
 
diff --git a/src/auto/metadata.rs b/src/auto/metadata.rs
index d42e4126..dc95659a 100644
--- a/src/auto/metadata.rs
+++ b/src/auto/metadata.rs
@@ -47,7 +47,7 @@ pub trait MetadataExt: IsA<Metadata> + sealed::Sealed + 'static {
     #[doc(alias = "wp_metadata_find")]
     fn find(&self, subject: u32, key: &str) -> (Option<glib::GString>, glib::GString) {
         unsafe {
-            let mut type_ = std::ptr::null();
+            let mut type_ = std::ptr::null_mut();
             let ret = from_glib_none(ffi::wp_metadata_find(self.as_ref().to_glib_none().0, subject, key.to_glib_none().0, &mut type_));
             (ret, from_glib_full(type_))
         }
diff --git a/src/auto/si_adapter.rs b/src/auto/si_adapter.rs
index 7f557d18..b0c60cb1 100644
--- a/src/auto/si_adapter.rs
+++ b/src/auto/si_adapter.rs
@@ -38,7 +38,7 @@ pub trait SiAdapterExt: IsA<SiAdapter> + sealed::Sealed + 'static {
     #[doc(alias = "get_ports_format")]
     fn ports_format(&self) -> (SpaPod, Option<glib::GString>) {
         unsafe {
-            let mut mode = std::ptr::null();
+            let mut mode = std::ptr::null_mut();
             let ret = from_glib_full(ffi::wp_si_adapter_get_ports_format(self.as_ref().to_glib_none().0, &mut mode));
             (ret, from_glib_full(mode))
         }
diff --git a/src/auto/spa_pod_parser.rs b/src/auto/spa_pod_parser.rs
index 42347fb0..590ce6ad 100644
--- a/src/auto/spa_pod_parser.rs
+++ b/src/auto/spa_pod_parser.rs
@@ -135,7 +135,7 @@ impl SpaPodParser {
     #[doc(alias = "get_string")]
     pub fn string(&self) -> Option<glib::GString> {
         unsafe {
-            let mut value = std::ptr::null();
+            let mut value = std::ptr::null_mut();
             let ret = from_glib(ffi::wp_spa_pod_parser_get_string(self.to_glib_none().0, &mut value));
             if ret { Some(from_glib_full(value)) } else { None }
         }
