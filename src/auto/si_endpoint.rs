// This file was generated by gir (https://github.com/gtk-rs/gir)
// DO NOT EDIT

use crate::{Object,Properties,SessionItem};
use glib::{prelude::*,signal::{connect_raw, SignalHandlerId},translate::*};
use std::{boxed::Box as Box_,mem::transmute};

glib::wrapper! {
    #[doc(alias = "WpSiEndpoint")]
    pub struct SiEndpoint(Interface<ffi::WpSiEndpoint, ffi::WpSiEndpointInterface>) @requires SessionItem, Object;

    match fn {
        type_ => || ffi::wp_si_endpoint_get_type(),
    }
}

impl SiEndpoint {
        pub const NONE: Option<&'static SiEndpoint> = None;
    
}

mod sealed {
    pub trait Sealed {}
    impl<T: super::IsA<super::SiEndpoint>> Sealed for T {}
}

pub trait SiEndpointExt: IsA<SiEndpoint> + sealed::Sealed + 'static {
    #[doc(alias = "wp_si_endpoint_get_properties")]
    #[doc(alias = "get_properties")]
    fn properties(&self) -> Option<Properties> {
        unsafe {
            from_glib_full(ffi::wp_si_endpoint_get_properties(self.as_ref().to_glib_none().0))
        }
    }

    #[doc(alias = "wp_si_endpoint_get_registration_info")]
    #[doc(alias = "get_registration_info")]
    fn registration_info(&self) -> Option<glib::Variant> {
        unsafe {
            from_glib_full(ffi::wp_si_endpoint_get_registration_info(self.as_ref().to_glib_none().0))
        }
    }

    #[doc(alias = "endpoint-properties-changed")]
    fn connect_endpoint_properties_changed<F: Fn(&Self) + 'static>(&self, f: F) -> SignalHandlerId {
        unsafe extern "C" fn endpoint_properties_changed_trampoline<P: IsA<SiEndpoint>, F: Fn(&P) + 'static>(this: *mut ffi::WpSiEndpoint, f: glib::ffi::gpointer) {
            let f: &F = &*(f as *const F);
            f(SiEndpoint::from_glib_borrow(this).unsafe_cast_ref())
        }
        unsafe {
            let f: Box_<F> = Box_::new(f);
            connect_raw(self.as_ptr() as *mut _, b"endpoint-properties-changed\0".as_ptr() as *const _,
                Some(transmute::<_, unsafe extern "C" fn()>(endpoint_properties_changed_trampoline::<Self, F> as *const ())), Box_::into_raw(f))
        }
    }
}

impl<O: IsA<SiEndpoint>> SiEndpointExt for O {}
